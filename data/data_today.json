{"puzzleDate": "2025-09-19", "r1": {"n": [3, 7, 8, 10, 13, 15], "how": {"145": ["(10 + 7) --> (17 + 3) --> (20 * 8) --> (160 - 15) --> 145", "(10 + 7) --> (17 - 8) --> (9 * 15) --> (135 + 13) --> (148 - 3) --> 145", "(10 * 15) --> (150 - 7) --> (143 + 13) --> (156 - 3) --> (153 - 8) --> 145", "(10 * 15) --> (150 - 13) --> (137 + 8) --> 145", "(10 + 15) --> (25 + 13) --> (38 + 8) --> (46 * 3) --> (138 + 7) --> 145", "(10 * 15) --> (150 + 3) --> (153 - 8) --> 145", "(10 * 13) --> (130 + 7) --> (137 + 8) --> 145", "(10 * 13) --> (130 + 15) --> 145", "(10 + 13) --> (23 - 3) --> (20 * 8) --> (160 - 15) --> 145", "(10 + 3) --> (13 + 8) --> (21 * 7) --> (147 - 15) --> (132 + 13) --> 145", "(7 + 13) --> (20 * 8) --> (160 - 15) --> 145", "(7 + 3) --> (10 * 15) --> (150 - 13) --> (137 + 8) --> 145", "(7 + 3) --> (10 * 13) --> (130 + 15) --> 145", "(7 * 3) --> (21 - 13) --> (8 + 8) --> (16 * 10) --> (160 - 15) --> 145", "(7 * 3) --> (21 - 8) --> (13 * 10) --> (130 + 15) --> 145", "(7 * 3) --> (21 * 8) --> (168 - 10) --> (158 - 13) --> 145", "(15 + 8) --> (23 * 7) --> (161 - 13) --> (148 - 3) --> 145", "(13 - 10) --> (3 * 7) --> (21 + 8) --> (29 * 15) --> (435 / 3) --> 145", "(13 - 7) --> (6 * 10) --> (60 / 3) --> (20.0 * 8) --> (160.0 - 15) --> 145", "(13 - 7) --> (6 + 3) --> (9 * 15) --> (135 + 10) --> 145", "(13 + 3) --> (16 * 10) --> (160 - 7) --> (153 - 8) --> 145", "(13 + 3) --> (16 * 10) --> (160 - 15) --> 145", "(13 + 3) --> (16 * 8) --> (128 + 10) --> (138 + 7) --> 145", "(13 + 3) --> (16 / 8) --> (2.0 + 7) --> (9.0 * 15) --> (135.0 + 10) --> 145", "(13 + 8) --> (21 / 7) --> (3.0 * 15) --> (45.0 * 3) --> (135.0 + 10) --> 145", "(8 - 7) --> (1 * 10) --> (10 * 13) --> (130 + 15) --> 145"]}, "target": 145, "n_ways": 26, "round": 1}, "r2": {"n": [3, 8, 9, 13, 18, 20], "how": {"167": ["(9 * 20) --> (180 - 13) --> 167", "(9 * 20) --> (180 + 13) --> (193 - 18) --> (175 - 8) --> 167", "(9 * 20) --> (180 - 3) --> (177 - 18) --> (159 + 8) --> 167", "(9 + 20) --> (29 * 18) --> (522 - 13) --> (509 - 8) --> (501 / 3) --> 167", "(9 * 3) --> (27 - 18) --> (9 * 20) --> (180 - 13) --> 167", "(9 + 18) --> (27 * 20) --> (540 / 3) --> (180.0 - 13) --> 167", "(9 * 18) --> (162 + 13) --> (175 - 8) --> 167", "(9 * 18) --> (162 - 3) --> (159 + 8) --> 167", "(20 - 13) --> (7 - 3) --> (4 + 18) --> (22 * 8) --> (176 - 9) --> 167", "(20 - 3) --> (17 * 8) --> (136 + 13) --> (149 + 18) --> 167", "(20 * 18) --> (360 / 9) --> (40.0 + 13) --> (53.0 * 3) --> (159.0 + 8) --> 167", "(20 * 8) --> (160 + 9) --> (169 + 13) --> (182 + 3) --> (185 - 18) --> 167", "(20 * 8) --> (160 - 9) --> (151 + 13) --> (164 + 3) --> 167", "(13 + 8) --> (21 * 20) --> (420 / 3) --> (140.0 + 9) --> (149.0 + 18) --> 167", "(18 - 9) --> (9 * 20) --> (180 - 13) --> 167", "(18 - 13) --> (5 * 8) --> (40 + 9) --> (49 * 3) --> (147 + 20) --> 167", "(18 - 3) --> (15 * 13) --> (195 - 20) --> (175 - 8) --> 167", "(18 * 8) --> (144 + 20) --> (164 + 3) --> 167"]}, "target": 167, "n_ways": 18, "round": 2}, "r3": {"n": [3, 8, 10, 11, 15, 20], "how": {"236": ["(8 + 3) --> (11 * 20) --> (220 + 15) --> (235 + 11) --> (246 - 10) --> 236", "(8 - 3) --> (5 + 20) --> (25 - 10) --> (15 * 15) --> (225 + 11) --> 236", "(8 - 3) --> (5 + 10) --> (15 * 15) --> (225 + 11) --> 236", "(8 * 3) --> (24 * 10) --> (240 - 15) --> (225 + 11) --> 236", "(8 + 15) --> (23 * 11) --> (253 + 3) --> (256 - 20) --> 236", "(8 * 10) --> (80 - 20) --> (60 + 15) --> (75 * 3) --> (225 + 11) --> 236", "(8 + 10) --> (18 * 15) --> (270 - 3) --> (267 - 20) --> (247 - 11) --> 236", "(8 + 10) --> (18 * 11) --> (198 + 3) --> (201 + 20) --> (221 + 15) --> 236", "(3 + 11) --> (14 * 20) --> (280 + 15) --> (295 * 8) --> (2360 / 10) --> 236", "(20 - 3) --> (17 * 15) --> (255 - 8) --> (247 - 11) --> 236", "(20 - 10) --> (10 * 8) --> (80 * 3) --> (240 - 15) --> (225 + 11) --> 236", "(20 + 10) --> (30 * 8) --> (240 - 15) --> (225 + 11) --> 236"]}, "target": 236, "n_ways": 12, "round": 3}, "r4": {"n": [9, 10, 14, 20, 22, 23], "how": {"463": ["(9 + 22) --> (31 - 10) --> (21 * 23) --> (483 - 20) --> 463", "(9 + 14) --> (23 * 22) --> (506 - 20) --> (486 - 23) --> 463", "(20 * 22) --> (440 + 9) --> (449 + 14) --> 463", "(20 * 22) --> (440 + 23) --> 463", "(20 + 10) --> (30 + 23) --> (53 * 9) --> (477 - 14) --> 463", "(22 * 23) --> (506 - 9) --> (497 - 20) --> (477 - 14) --> 463", "(10 - 9) --> (1 * 20) --> (20 * 22) --> (440 + 23) --> 463"]}, "target": 463, "n_ways": 7, "round": 4}, "r5": {"n": [8, 10, 13, 14, 17, 22], "how": {"583": ["(13 + 8) --> (21 + 14) --> (35 * 17) --> (595 + 10) --> (605 - 22) --> 583", "(13 + 22) --> (35 * 17) --> (595 + 10) --> (605 - 8) --> (597 - 14) --> 583", "(14 - 10) --> (4 * 22) --> (88 - 13) --> (75 * 8) --> (600 - 17) --> 583", "(22 - 17) --> (5 * 8) --> (40 * 14) --> (560 + 13) --> (573 + 10) --> 583"]}, "target": 583, "n_ways": 4, "round": 5}}