{"puzzleDate": "2024-07-28", "r1": {"n": [3, 5, 8, 12, 14, 15], "how": {"109": ["(15 - 14) --> (1 + 12) --> (13 * 8) --> (104 + 5) --> 109", "(15 * 5) --> (75 + 14) --> (89 + 8) --> (97 + 12) --> 109", "(15 - 5) --> (10 * 8) --> (80 + 3) --> (83 + 14) --> (97 + 12) --> 109", "(15 - 5) --> (10 * 12) --> (120 + 3) --> (123 - 14) --> 109", "(15 - 5) --> (10 * 12) --> (120 - 3) --> (117 - 8) --> 109", "(15 / 5) --> (3.0 + 12) --> (15.0 * 8) --> (120.0 + 3) --> (123.0 - 14) --> 109", "(15 * 8) --> (120 + 3) --> (123 - 14) --> 109", "(15 + 8) --> (23 * 14) --> (322 + 5) --> (327 / 3) --> 109", "(15 - 12) --> (3 * 5) --> (15 * 8) --> (120 + 3) --> (123 - 14) --> 109", "(3 + 14) --> (17 * 8) --> (136 - 15) --> (121 - 12) --> 109", "(3 + 5) --> (8 * 14) --> (112 - 15) --> (97 + 12) --> 109", "(3 * 8) --> (24 - 15) --> (9 * 14) --> (126 - 5) --> (121 - 12) --> 109", "(14 - 3) --> (11 * 12) --> (132 - 15) --> (117 - 8) --> 109", "(14 * 8) --> (112 - 15) --> (97 + 12) --> 109", "(14 * 8) --> (112 - 3) --> 109", "(5 * 8) --> (40 - 14) --> (26 * 12) --> (312 + 15) --> (327 / 3) --> 109", "(8 * 12) --> (96 + 15) --> (111 + 3) --> (114 - 5) --> 109", "(12 / 3) --> (4.0 + 15) --> (19.0 * 5) --> (95.0 + 14) --> 109", "(12 - 5) --> (7 * 14) --> (98 + 3) --> (101 + 8) --> 109"]}, "target": 109, "n_ways": 19, "round": 1}, "r2": {"n": [6, 8, 10, 15, 18, 19], "how": {"253": ["(19 - 6) --> (13 + 18) --> (31 * 8) --> (248 - 10) --> (238 + 15) --> 253", "(19 + 6) --> (25 * 10) --> (250 + 18) --> (268 - 15) --> 253", "(19 + 10) --> (29 * 8) --> (232 + 6) --> (238 + 15) --> 253", "(19 * 15) --> (285 - 8) --> (277 - 6) --> (271 - 18) --> 253", "(8 + 18) --> (26 * 6) --> (156 * 15) --> (2340 / 10) --> (234.0 + 19) --> 253", "(8 + 15) --> (23 - 10) --> (13 * 19) --> (247 + 6) --> 253", "(8 + 15) --> (23 - 10) --> (13 * 18) --> (234 + 19) --> 253", "(6 + 18) --> (24 + 10) --> (34 * 8) --> (272 - 19) --> 253", "(6 + 15) --> (21 - 8) --> (13 * 18) --> (234 + 19) --> 253", "(18 * 15) --> (270 - 19) --> (251 + 8) --> (259 - 6) --> 253", "(18 * 15) --> (270 - 19) --> (251 - 8) --> (243 + 10) --> 253", "(18 - 15) --> (3 * 8) --> (24 * 10) --> (240 + 19) --> (259 - 6) --> 253"]}, "target": 253, "n_ways": 12, "round": 2}, "r3": {"n": [3, 4, 10, 15, 17, 19], "how": {"290": ["(3 + 19) --> (22 - 17) --> (5 * 4) --> (20 * 15) --> (300 - 10) --> 290", "(3 * 17) --> (51 + 19) --> (70 * 4) --> (280 + 10) --> 290", "(3 + 17) --> (20 * 15) --> (300 - 10) --> 290", "(3 * 4) --> (12 + 19) --> (31 - 17) --> (14 + 15) --> (29 * 10) --> 290", "(3 * 4) --> (12 + 17) --> (29 * 10) --> 290", "(19 - 3) --> (16 + 17) --> (33 - 4) --> (29 * 10) --> 290", "(19 - 3) --> (16 + 4) --> (20 * 15) --> (300 - 10) --> 290", "(19 * 4) --> (76 + 10) --> (86 * 3) --> (258 + 17) --> (275 + 15) --> 290", "(19 * 4) --> (76 + 15) --> (91 * 3) --> (273 + 17) --> 290", "(19 - 15) --> (4 * 3) --> (12 + 17) --> (29 * 10) --> 290", "(17 - 4) --> (13 * 3) --> (39 - 19) --> (20 * 15) --> (300 - 10) --> 290", "(17 * 4) --> (68 + 19) --> (87 / 3) --> (29.0 * 10) --> 290", "(17 * 4) --> (68 - 10) --> (58 * 15) --> (870 / 3) --> 290", "(15 - 3) --> (12 * 4) --> (48 - 19) --> (29 * 10) --> 290"]}, "target": 290, "n_ways": 14, "round": 3}, "r4": {"n": [4, 6, 7, 11, 17, 19], "how": {"423": ["(11 + 7) --> (18 + 6) --> (24 * 17) --> (408 - 4) --> (404 + 19) --> 423", "(11 - 7) --> (4 * 6) --> (24 * 17) --> (408 - 4) --> (404 + 19) --> 423", "(11 - 6) --> (5 * 17) --> (85 + 19) --> (104 * 4) --> (416 + 7) --> 423", "(11 + 6) --> (17 + 4) --> (21 * 19) --> (399 + 7) --> (406 + 17) --> 423", "(7 + 17) --> (24 - 4) --> (20 + 19) --> (39 * 11) --> (429 - 6) --> 423", "(17 * 4) --> (68 - 6) --> (62 * 7) --> (434 - 11) --> 423"]}, "target": 423, "n_ways": 6, "round": 4}, "r5": {"n": [11, 14, 16, 22, 24, 25], "how": {"455": ["(22 * 11) --> (242 * 25) --> (6050 - 16) --> (6034 / 14) --> (431.0 + 24) --> 455", "(22 / 11) --> (2.0 + 24) --> (26.0 * 16) --> (416.0 + 25) --> (441.0 + 14) --> 455", "(22 - 16) --> (6 + 14) --> (20 * 24) --> (480 - 25) --> 455"]}, "target": 455, "n_ways": 3, "round": 5}}