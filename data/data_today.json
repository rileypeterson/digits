{"puzzleDate": "2023-10-30", "r1": {"n": [3, 5, 7, 9, 12, 14], "how": {"106": ["(12 + 7) --> (19 * 5) --> (95 + 14) --> (109 - 3) --> 106", "(12 * 7) --> (84 + 5) --> (89 + 14) --> (103 + 3) --> 106", "(12 - 7) --> (5 * 3) --> (15 + 9) --> (24 * 5) --> (120 - 14) --> 106", "(12 - 7) --> (5 * 9) --> (45 - 5) --> (40 * 3) --> (120 - 14) --> 106", "(12 + 14) --> (26 - 3) --> (23 * 5) --> (115 - 9) --> 106", "(12 * 14) --> (168 * 3) --> (504 - 9) --> (495 / 5) --> (99.0 + 7) --> 106", "(12 / 3) --> (4.0 + 14) --> (18.0 * 5) --> (90.0 + 7) --> (97.0 + 9) --> 106", "(12 + 3) --> (15 + 9) --> (24 * 5) --> (120 - 14) --> 106", "(12 * 9) --> (108 + 7) --> (115 + 5) --> (120 - 14) --> 106", "(12 * 9) --> (108 - 7) --> (101 + 5) --> 106", "(12 * 9) --> (108 - 5) --> (103 + 3) --> 106", "(7 * 14) --> (98 + 5) --> (103 + 3) --> 106", "(7 + 3) --> (10 * 12) --> (120 - 5) --> (115 - 9) --> 106", "(7 + 3) --> (10 * 12) --> (120 - 14) --> 106", "(7 + 9) --> (16 * 5) --> (80 + 12) --> (92 + 14) --> 106", "(5 + 3) --> (8 - 7) --> (1 + 9) --> (10 * 12) --> (120 - 14) --> 106", "(5 * 9) --> (45 - 12) --> (33 * 3) --> (99 + 7) --> 106", "(14 - 12) --> (2 * 3) --> (6 + 5) --> (11 * 9) --> (99 + 7) --> 106", "(14 - 7) --> (7 + 3) --> (10 * 12) --> (120 - 5) --> (115 - 9) --> 106", "(14 - 5) --> (9 * 12) --> (108 + 7) --> (115 - 9) --> 106", "(14 + 3) --> (17 * 5) --> (85 + 12) --> (97 + 9) --> 106", "(14 - 3) --> (11 * 9) --> (99 + 7) --> 106", "(14 * 9) --> (126 - 12) --> (114 - 5) --> (109 - 3) --> 106", "(9 - 7) --> (2 * 12) --> (24 * 5) --> (120 - 14) --> 106", "(9 / 3) --> (3.0 + 7) --> (10.0 * 12) --> (120.0 - 14) --> 106"]}, "target": 106, "n_ways": 25, "round": 1}, "r2": {"n": [6, 9, 14, 16, 18, 20], "how": {"250": ["(14 * 16) --> (224 + 20) --> (244 + 6) --> 250", "(14 + 16) --> (30 - 6) --> (24 - 9) --> (15 * 18) --> (270 - 20) --> 250", "(14 + 16) --> (30 * 9) --> (270 - 20) --> 250", "(14 + 20) --> (34 - 6) --> (28 * 9) --> (252 + 16) --> (268 - 18) --> 250", "(14 + 20) --> (34 - 18) --> (16 * 16) --> (256 - 6) --> 250", "(14 - 6) --> (8 + 18) --> (26 * 9) --> (234 + 16) --> 250", "(14 + 9) --> (23 + 18) --> (41 * 6) --> (246 - 16) --> (230 + 20) --> 250", "(16 - 14) --> (2 * 6) --> (12 + 18) --> (30 * 9) --> (270 - 20) --> 250", "(16 - 14) --> (2 * 18) --> (36 - 6) --> (30 * 9) --> (270 - 20) --> 250", "(16 + 6) --> (22 * 9) --> (198 + 14) --> (212 + 20) --> (232 + 18) --> 250", "(20 + 6) --> (26 * 9) --> (234 + 16) --> 250", "(20 - 18) --> (2 * 6) --> (12 + 14) --> (26 * 9) --> (234 + 16) --> 250", "(6 + 9) --> (15 * 18) --> (270 - 20) --> 250", "(6 + 18) --> (24 * 9) --> (216 + 14) --> (230 + 20) --> 250", "(18 / 9) --> (2.0 + 14) --> (16.0 * 16) --> (256.0 - 6) --> 250"]}, "target": 250, "n_ways": 15, "round": 2}, "r3": {"n": [4, 6, 8, 14, 16, 19], "how": {"353": ["(6 * 14) --> (84 * 16) --> (1344 - 8) --> (1336 / 4) --> (334.0 + 19) --> 353", "(6 + 4) --> (10 + 16) --> (26 * 14) --> (364 - 19) --> (345 + 8) --> 353", "(6 * 4) --> (24 + 16) --> (40 * 8) --> (320 + 14) --> (334 + 19) --> 353", "(14 + 4) --> (18 / 6) --> (3.0 + 16) --> (19.0 * 19) --> (361.0 - 8) --> 353", "(4 * 8) --> (32 + 14) --> (46 + 16) --> (62 * 6) --> (372 - 19) --> 353"]}, "target": 353, "n_ways": 5, "round": 3}, "r4": {"n": [4, 9, 11, 19, 21, 23], "how": {"455": ["(9 * 19) --> (171 * 11) --> (1881 + 23) --> (1904 / 4) --> (476.0 - 21) --> 455", "(19 + 11) --> (30 + 21) --> (51 * 9) --> (459 - 4) --> 455", "(4 + 21) --> (25 * 19) --> (475 - 9) --> (466 - 11) --> 455", "(23 * 21) --> (483 - 9) --> (474 - 19) --> 455", "(21 - 9) --> (12 * 11) --> (132 - 23) --> (109 * 4) --> (436 + 19) --> 455", "(21 - 19) --> (2 * 9) --> (18 + 23) --> (41 * 11) --> (451 + 4) --> 455"]}, "target": 455, "n_ways": 6, "round": 4}, "r5": {"n": [4, 6, 14, 16, 22, 25], "how": {"571": ["(4 * 22) --> (88 + 14) --> (102 * 6) --> (612 - 16) --> (596 - 25) --> 571", "(14 * 25) --> (350 + 16) --> (366 * 6) --> (2196 / 4) --> (549.0 + 22) --> 571"]}, "target": 571, "n_ways": 2, "round": 5}}