{"puzzleDate": "2024-08-24", "r1": {"n": [4, 6, 9, 11, 12, 15], "how": {"122": ["(4 + 6) --> (10 * 11) --> (110 + 15) --> (125 + 9) --> (134 - 12) --> 122", "(4 + 6) --> (10 * 11) --> (110 + 12) --> 122", "(4 + 6) --> (10 * 12) --> (120 + 11) --> (131 - 9) --> 122", "(4 * 11) --> (44 * 15) --> (660 / 6) --> (110.0 + 12) --> 122", "(4 + 15) --> (19 - 6) --> (13 * 11) --> (143 - 9) --> (134 - 12) --> 122", "(4 * 15) --> (60 / 6) --> (10.0 * 12) --> (120.0 + 11) --> (131.0 - 9) --> 122", "(4 + 15) --> (19 - 9) --> (10 * 11) --> (110 + 12) --> 122", "(4 + 9) --> (13 * 11) --> (143 + 6) --> (149 - 15) --> (134 - 12) --> 122", "(4 + 9) --> (13 * 11) --> (143 - 6) --> (137 - 15) --> 122", "(4 + 12) --> (16 * 6) --> (96 + 11) --> (107 + 15) --> 122", "(6 * 11) --> (66 * 15) --> (990 / 9) --> (110.0 + 12) --> 122", "(6 * 15) --> (90 + 11) --> (101 + 9) --> (110 + 12) --> 122", "(11 * 15) --> (165 + 12) --> (177 * 6) --> (1062 / 9) --> (118.0 + 4) --> 122", "(11 + 15) --> (26 - 12) --> (14 * 9) --> (126 - 4) --> 122", "(11 + 12) --> (23 * 4) --> (92 + 6) --> (98 + 15) --> (113 + 9) --> 122", "(11 * 12) --> (132 - 4) --> (128 - 6) --> 122", "(9 + 12) --> (21 * 6) --> (126 - 4) --> 122", "(9 + 12) --> (21 * 6) --> (126 + 11) --> (137 - 15) --> 122"]}, "target": 122, "n_ways": 18, "round": 1}, "r2": {"n": [4, 6, 9, 12, 14, 19], "how": {"215": ["(14 + 4) --> (18 + 12) --> (30 + 9) --> (39 * 6) --> (234 - 19) --> 215", "(14 - 4) --> (10 + 9) --> (19 * 12) --> (228 + 6) --> (234 - 19) --> 215", "(14 + 6) --> (20 * 9) --> (180 + 4) --> (184 + 12) --> (196 + 19) --> 215", "(14 - 12) --> (2 * 6) --> (12 * 19) --> (228 - 4) --> (224 - 9) --> 215", "(14 + 12) --> (26 * 9) --> (234 - 19) --> 215", "(14 - 12) --> (2 + 9) --> (11 * 19) --> (209 + 6) --> 215", "(4 * 6) --> (24 + 14) --> (38 - 12) --> (26 * 9) --> (234 - 19) --> 215", "(4 + 12) --> (16 * 14) --> (224 - 9) --> 215", "(4 * 12) --> (48 - 9) --> (39 * 6) --> (234 - 19) --> 215", "(4 + 19) --> (23 * 9) --> (207 + 14) --> (221 - 6) --> 215", "(4 + 9) --> (13 * 19) --> (247 - 14) --> (233 - 6) --> (227 - 12) --> 215", "(6 - 4) --> (2 + 12) --> (14 * 14) --> (196 + 19) --> 215", "(12 / 4) --> (3.0 + 19) --> (22.0 - 6) --> (16.0 * 14) --> (224.0 - 9) --> 215", "(12 / 6) --> (2.0 * 9) --> (18.0 - 4) --> (14.0 * 14) --> (196.0 + 19) --> 215", "(12 * 19) --> (228 - 4) --> (224 - 9) --> 215", "(12 + 9) --> (21 * 14) --> (294 * 4) --> (1176 / 6) --> (196.0 + 19) --> 215"]}, "target": 215, "n_ways": 16, "round": 2}, "r3": {"n": [4, 5, 8, 11, 19, 20], "how": {"314": ["(8 - 4) --> (4 + 11) --> (15 * 20) --> (300 - 5) --> (295 + 19) --> 314", "(8 + 4) --> (12 + 5) --> (17 * 19) --> (323 + 11) --> (334 - 20) --> 314", "(8 + 20) --> (28 - 11) --> (17 * 19) --> (323 - 4) --> (319 - 5) --> 314", "(4 + 11) --> (15 * 20) --> (300 - 5) --> (295 + 19) --> 314", "(4 * 20) --> (80 / 8) --> (10.0 + 19) --> (29.0 * 11) --> (319.0 - 5) --> 314", "(20 - 8) --> (12 * 4) --> (48 + 11) --> (59 * 5) --> (295 + 19) --> 314", "(20 - 8) --> (12 * 4) --> (48 - 19) --> (29 * 11) --> (319 - 5) --> 314"]}, "target": 314, "n_ways": 7, "round": 3}, "r4": {"n": [5, 9, 13, 16, 17, 22], "how": {"376": ["(5 + 13) --> (18 + 22) --> (40 * 9) --> (360 + 16) --> 376", "(17 + 9) --> (26 * 16) --> (416 - 5) --> (411 - 13) --> (398 - 22) --> 376", "(17 + 9) --> (26 * 13) --> (338 + 16) --> (354 + 22) --> 376", "(17 + 13) --> (30 - 22) --> (8 * 5) --> (40 * 9) --> (360 + 16) --> 376", "(17 * 22) --> (374 + 16) --> (390 - 5) --> (385 - 9) --> 376", "(17 * 22) --> (374 - 16) --> (358 + 5) --> (363 + 13) --> 376"]}, "target": 376, "n_ways": 6, "round": 4}, "r5": {"n": [4, 9, 11, 12, 18, 24], "how": {"569": ["(12 + 4) --> (16 + 24) --> (40 - 9) --> (31 * 18) --> (558 + 11) --> 569", "(12 * 24) --> (288 / 9) --> (32.0 * 18) --> (576.0 + 4) --> (580.0 - 11) --> 569", "(4 * 9) --> (36 - 12) --> (24 * 24) --> (576 - 18) --> (558 + 11) --> 569", "(9 * 18) --> (162 + 24) --> (186 * 12) --> (2232 / 4) --> (558.0 + 11) --> 569"]}, "target": 569, "n_ways": 4, "round": 5}}