{"puzzleDate": "2024-05-04", "r1": {"n": [2, 3, 9, 12, 14, 15], "how": {"151": ["(14 - 3) --> (11 * 15) --> (165 - 12) --> (153 - 2) --> 151", "(14 + 3) --> (17 * 9) --> (153 - 2) --> 151", "(14 * 15) --> (210 + 12) --> (222 * 2) --> (444 + 9) --> (453 / 3) --> 151", "(14 + 15) --> (29 - 12) --> (17 * 9) --> (153 - 2) --> 151", "(14 * 12) --> (168 - 15) --> (153 - 2) --> 151", "(14 + 12) --> (26 * 2) --> (52 * 9) --> (468 - 15) --> (453 / 3) --> 151", "(14 * 9) --> (126 + 15) --> (141 + 12) --> (153 - 2) --> 151", "(3 * 15) --> (45 + 14) --> (59 + 12) --> (71 * 2) --> (142 + 9) --> 151", "(3 + 12) --> (15 * 9) --> (135 + 14) --> (149 + 2) --> 151", "(3 * 2) --> (6 + 9) --> (15 * 12) --> (180 - 14) --> (166 - 15) --> 151", "(3 + 9) --> (12 * 14) --> (168 - 15) --> (153 - 2) --> 151", "(15 - 3) --> (12 * 12) --> (144 + 14) --> (158 + 2) --> (160 - 9) --> 151", "(15 - 3) --> (12 * 12) --> (144 - 2) --> (142 + 9) --> 151", "(15 / 3) --> (5.0 + 12) --> (17.0 * 9) --> (153.0 - 2) --> 151", "(15 * 9) --> (135 + 14) --> (149 + 2) --> 151", "(15 + 9) --> (24 * 12) --> (288 + 14) --> (302 / 2) --> 151", "(12 - 3) --> (9 * 15) --> (135 + 14) --> (149 + 2) --> 151", "(12 - 3) --> (9 + 2) --> (11 * 15) --> (165 - 14) --> 151", "(12 / 3) --> (4.0 - 2) --> (2.0 + 9) --> (11.0 * 15) --> (165.0 - 14) --> 151", "(12 / 3) --> (4.0 / 2) --> (2.0 + 9) --> (11.0 * 15) --> (165.0 - 14) --> 151", "(12 - 9) --> (3 * 3) --> (9 * 15) --> (135 + 14) --> (149 + 2) --> 151", "(2 * 9) --> (18 - 3) --> (15 * 12) --> (180 - 14) --> (166 - 15) --> 151", "(2 + 9) --> (11 * 15) --> (165 - 14) --> 151"]}, "target": 151, "n_ways": 23, "round": 1}, "r2": {"n": [3, 4, 6, 9, 11, 12], "how": {"233": ["(6 + 12) --> (18 + 4) --> (22 * 11) --> (242 - 9) --> 233", "(6 * 3) --> (18 + 4) --> (22 * 11) --> (242 - 9) --> 233", "(6 * 11) --> (66 + 9) --> (75 * 3) --> (225 + 12) --> (237 - 4) --> 233", "(12 - 6) --> (6 * 3) --> (18 + 4) --> (22 * 11) --> (242 - 9) --> 233", "(12 * 4) --> (48 / 3) --> (16.0 + 6) --> (22.0 * 11) --> (242.0 - 9) --> 233", "(9 + 11) --> (20 * 12) --> (240 - 6) --> (234 - 4) --> (230 + 3) --> 233", "(9 + 11) --> (20 * 12) --> (240 - 4) --> (236 - 3) --> 233", "(4 * 3) --> (12 + 12) --> (24 * 9) --> (216 + 6) --> (222 + 11) --> 233"]}, "target": 233, "n_ways": 8, "round": 2}, "r3": {"n": [3, 4, 6, 10, 16, 17], "how": {"345": ["(16 * 6) --> (96 - 3) --> (93 * 4) --> (372 - 17) --> (355 - 10) --> 345", "(16 * 6) --> (96 + 17) --> (113 * 3) --> (339 - 4) --> (335 + 10) --> 345", "(16 + 6) --> (22 * 4) --> (88 + 17) --> (105 + 10) --> (115 * 3) --> 345", "(16 * 17) --> (272 / 4) --> (68.0 - 10) --> (58.0 * 6) --> (348.0 - 3) --> 345", "(16 - 4) --> (12 * 17) --> (204 + 3) --> (207 * 10) --> (2070 / 6) --> 345", "(16 - 4) --> (12 + 10) --> (22 * 6) --> (132 - 17) --> (115 * 3) --> 345", "(16 / 4) --> (4.0 * 10) --> (40.0 + 17) --> (57.0 * 6) --> (342.0 + 3) --> 345", "(17 + 4) --> (21 * 16) --> (336 + 6) --> (342 + 3) --> 345", "(17 * 4) --> (68 - 10) --> (58 * 6) --> (348 - 3) --> 345", "(4 * 10) --> (40 + 17) --> (57 * 6) --> (342 + 3) --> 345"]}, "target": 345, "n_ways": 10, "round": 3}, "r4": {"n": [4, 6, 13, 19, 20, 25], "how": {"423": ["(20 * 4) --> (80 * 6) --> (480 - 13) --> (467 - 19) --> (448 - 25) --> 423", "(13 * 4) --> (52 + 25) --> (77 * 6) --> (462 - 20) --> (442 - 19) --> 423", "(4 * 6) --> (24 * 19) --> (456 - 20) --> (436 - 13) --> 423", "(4 * 19) --> (76 - 13) --> (63 * 6) --> (378 + 20) --> (398 + 25) --> 423", "(6 + 25) --> (31 * 13) --> (403 + 20) --> 423"]}, "target": 423, "n_ways": 5, "round": 4}, "r5": {"n": [6, 16, 18, 20, 23, 25], "how": {"569": ["(25 + 18) --> (43 - 6) --> (37 * 16) --> (592 - 23) --> 569", "(25 + 18) --> (43 - 16) --> (27 * 20) --> (540 + 6) --> (546 + 23) --> 569", "(25 * 23) --> (575 - 6) --> 569", "(6 + 16) --> (22 * 23) --> (506 + 25) --> (531 + 18) --> (549 + 20) --> 569", "(6 + 23) --> (29 - 16) --> (13 + 20) --> (33 * 18) --> (594 - 25) --> 569", "(20 - 18) --> (2 * 6) --> (12 + 25) --> (37 * 16) --> (592 - 23) --> 569"]}, "target": 569, "n_ways": 6, "round": 5}}