{"puzzleDate": "2023-10-11", "r1": {"n": [2, 6, 8, 11, 13, 15], "how": {"111": ["(2 * 11) --> (22 * 6) --> (132 - 8) --> (124 - 13) --> 111", "(2 + 11) --> (13 + 8) --> (21 * 6) --> (126 - 15) --> 111", "(2 + 11) --> (13 * 8) --> (104 - 6) --> (98 + 13) --> 111", "(2 + 15) --> (17 - 8) --> (9 * 13) --> (117 - 6) --> 111", "(2 + 6) --> (8 * 11) --> (88 + 15) --> (103 + 8) --> 111", "(2 * 6) --> (12 * 8) --> (96 + 15) --> 111", "(2 + 6) --> (8 * 13) --> (104 + 15) --> (119 - 8) --> 111", "(2 * 13) --> (26 - 11) --> (15 - 8) --> (7 * 15) --> (105 + 6) --> 111", "(11 - 2) --> (9 * 15) --> (135 + 13) --> (148 * 6) --> (888 / 8) --> 111", "(11 - 2) --> (9 * 13) --> (117 - 6) --> 111", "(11 + 15) --> (26 / 2) --> (13.0 * 8) --> (104.0 - 6) --> (98.0 + 13) --> 111", "(11 + 15) --> (26 - 8) --> (18 / 2) --> (9.0 * 13) --> (117.0 - 6) --> 111", "(11 + 8) --> (19 + 13) --> (32 / 2) --> (16.0 * 6) --> (96.0 + 15) --> 111", "(11 - 8) --> (3 + 13) --> (16 * 6) --> (96 + 15) --> 111", "(11 + 13) --> (24 / 2) --> (12.0 * 8) --> (96.0 + 15) --> 111", "(15 * 6) --> (90 + 8) --> (98 + 13) --> 111", "(15 * 8) --> (120 + 2) --> (122 - 11) --> 111", "(15 - 8) --> (7 + 13) --> (20 * 6) --> (120 + 2) --> (122 - 11) --> 111", "(6 * 8) --> (48 + 15) --> (63 - 13) --> (50 * 2) --> (100 + 11) --> 111", "(6 * 8) --> (48 + 13) --> (61 * 2) --> (122 - 11) --> 111", "(6 * 13) --> (78 - 11) --> (67 * 2) --> (134 - 15) --> (119 - 8) --> 111", "(8 + 13) --> (21 * 6) --> (126 - 15) --> 111", "(13 - 11) --> (2 * 6) --> (12 * 8) --> (96 + 15) --> 111"]}, "target": 111, "n_ways": 23, "round": 1}, "r2": {"n": [3, 6, 9, 13, 16, 18], "how": {"223": ["(13 * 16) --> (208 + 9) --> (217 + 6) --> 223", "(13 * 16) --> (208 - 9) --> (199 + 6) --> (205 + 18) --> 223", "(13 * 16) --> (208 + 3) --> (211 - 6) --> (205 + 18) --> 223", "(13 * 16) --> (208 - 3) --> (205 + 18) --> 223", "(13 + 3) --> (16 * 16) --> (256 - 9) --> (247 - 6) --> (241 - 18) --> 223", "(13 * 3) --> (39 * 6) --> (234 - 9) --> (225 + 16) --> (241 - 18) --> 223", "(13 - 6) --> (7 * 9) --> (63 * 3) --> (189 + 16) --> (205 + 18) --> 223", "(13 * 6) --> (78 - 9) --> (69 * 3) --> (207 + 16) --> 223", "(9 / 3) --> (3.0 + 16) --> (19.0 * 13) --> (247.0 - 6) --> (241.0 - 18) --> 223", "(9 + 3) --> (12 * 16) --> (192 + 13) --> (205 + 18) --> 223", "(9 - 3) --> (6 + 6) --> (12 * 16) --> (192 + 13) --> (205 + 18) --> 223", "(9 + 3) --> (12 * 18) --> (216 + 13) --> (229 - 6) --> 223", "(9 * 6) --> (54 + 16) --> (70 * 3) --> (210 + 13) --> 223", "(16 + 3) --> (19 * 13) --> (247 - 6) --> (241 - 18) --> 223", "(16 * 18) --> (288 / 9) --> (32.0 + 3) --> (35.0 * 6) --> (210.0 + 13) --> 223", "(6 / 3) --> (2.0 * 18) --> (36.0 - 13) --> (23.0 * 9) --> (207.0 + 16) --> 223"]}, "target": 223, "n_ways": 16, "round": 2}, "r3": {"n": [5, 9, 12, 15, 17, 20], "how": {"261": ["(5 + 17) --> (22 + 15) --> (37 + 12) --> (49 - 20) --> (29 * 9) --> 261", "(5 + 15) --> (20 * 17) --> (340 / 20) --> (17.0 + 12) --> (29.0 * 9) --> 261", "(17 - 5) --> (12 - 9) --> (3 + 20) --> (23 * 12) --> (276 - 15) --> 261", "(17 - 5) --> (12 + 12) --> (24 - 15) --> (9 + 20) --> (29 * 9) --> 261", "(17 - 5) --> (12 * 20) --> (240 + 9) --> (249 + 12) --> 261", "(17 * 15) --> (255 - 5) --> (250 - 9) --> (241 + 20) --> 261", "(17 - 15) --> (2 * 12) --> (24 + 5) --> (29 * 9) --> 261", "(17 + 12) --> (29 * 9) --> 261", "(15 + 12) --> (27 + 20) --> (47 * 5) --> (235 + 17) --> (252 + 9) --> 261", "(15 - 12) --> (3 * 20) --> (60 / 5) --> (12.0 + 17) --> (29.0 * 9) --> 261", "(20 / 5) --> (4.0 + 17) --> (21.0 * 12) --> (252.0 + 9) --> 261"]}, "target": 261, "n_ways": 11, "round": 3}, "r4": {"n": [4, 9, 11, 18, 20, 25], "how": {"397": ["(25 - 18) --> (7 * 11) --> (77 + 20) --> (97 * 4) --> (388 + 9) --> 397", "(20 + 18) --> (38 * 11) --> (418 - 25) --> (393 + 4) --> 397", "(9 + 11) --> (20 * 20) --> (400 - 25) --> (375 + 18) --> (393 + 4) --> 397"]}, "target": 397, "n_ways": 3, "round": 4}, "r5": {"n": [5, 9, 12, 16, 18, 20], "how": {"473": ["(5 + 18) --> (23 * 20) --> (460 - 12) --> (448 + 9) --> (457 + 16) --> 473", "(20 - 18) --> (2 * 12) --> (24 + 5) --> (29 * 16) --> (464 + 9) --> 473", "(20 * 18) --> (360 - 9) --> (351 * 16) --> (5616 / 12) --> (468.0 + 5) --> 473", "(16 - 12) --> (4 * 18) --> (72 - 20) --> (52 * 9) --> (468 + 5) --> 473"]}, "target": 473, "n_ways": 4, "round": 5}}