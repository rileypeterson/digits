{"puzzleDate": "2024-11-20", "r1": {"n": [5, 6, 9, 11, 13, 14], "how": {"119": ["(6 * 9) --> (54 * 11) --> (594 + 14) --> (608 - 13) --> (595 / 5) --> 119", "(6 + 9) --> (15 - 5) --> (10 * 13) --> (130 - 11) --> 119", "(6 + 14) --> (20 + 13) --> (33 - 11) --> (22 * 5) --> (110 + 9) --> 119", "(6 + 14) --> (20 * 13) --> (260 * 5) --> (1300 + 9) --> (1309 / 11) --> 119", "(6 + 13) --> (19 - 9) --> (10 * 11) --> (110 + 14) --> (124 - 5) --> 119", "(9 - 6) --> (3 + 14) --> (17 - 5) --> (12 * 11) --> (132 - 13) --> 119", "(9 * 14) --> (126 + 6) --> (132 - 13) --> 119", "(9 * 14) --> (126 - 13) --> (113 + 11) --> (124 - 5) --> 119", "(9 + 14) --> (23 - 5) --> (18 * 6) --> (108 + 11) --> 119", "(9 * 13) --> (117 - 14) --> (103 + 11) --> (114 + 5) --> 119", "(9 + 11) --> (20 * 6) --> (120 - 14) --> (106 + 13) --> 119", "(9 * 11) --> (99 + 6) --> (105 + 14) --> 119", "(9 + 11) --> (20 * 5) --> (100 + 6) --> (106 + 13) --> 119", "(9 - 5) --> (4 * 6) --> (24 - 14) --> (10 * 13) --> (130 - 11) --> 119", "(9 * 5) --> (45 - 14) --> (31 - 13) --> (18 * 6) --> (108 + 11) --> 119", "(14 + 11) --> (25 * 5) --> (125 - 6) --> 119", "(13 - 6) --> (7 + 5) --> (12 * 9) --> (108 + 11) --> 119", "(13 - 11) --> (2 * 6) --> (12 + 9) --> (21 * 5) --> (105 + 14) --> 119", "(13 + 5) --> (18 * 6) --> (108 + 11) --> 119", "(11 + 5) --> (16 * 6) --> (96 + 9) --> (105 + 14) --> 119"]}, "target": 119, "n_ways": 20, "round": 1}, "r2": {"n": [3, 7, 10, 12, 18, 19], "how": {"226": ["(19 - 7) --> (12 * 3) --> (36 - 18) --> (18 * 12) --> (216 + 10) --> 226", "(19 - 7) --> (12 * 18) --> (216 + 10) --> 226", "(19 * 12) --> (228 - 7) --> (221 - 10) --> (211 - 3) --> (208 + 18) --> 226", "(19 + 3) --> (22 * 10) --> (220 - 12) --> (208 + 18) --> 226", "(19 - 3) --> (16 + 18) --> (34 * 7) --> (238 - 12) --> 226", "(7 + 10) --> (17 * 12) --> (204 + 19) --> (223 + 3) --> 226", "(7 + 18) --> (25 - 19) --> (6 * 12) --> (72 * 3) --> (216 + 10) --> 226", "(12 / 3) --> (4.0 + 10) --> (14.0 * 18) --> (252.0 - 19) --> (233.0 - 7) --> 226", "(12 + 18) --> (30 * 7) --> (210 + 19) --> (229 - 3) --> 226", "(12 * 18) --> (216 + 7) --> (223 + 3) --> 226", "(12 * 18) --> (216 + 10) --> 226", "(18 / 3) --> (6.0 + 19) --> (25.0 - 7) --> (18.0 * 12) --> (216.0 + 10) --> 226"]}, "target": 226, "n_ways": 12, "round": 2}, "r3": {"n": [6, 8, 12, 15, 19, 20], "how": {"254": ["(12 + 8) --> (20 + 19) --> (39 * 6) --> (234 + 20) --> 254", "(12 + 19) --> (31 * 8) --> (248 + 6) --> 254", "(12 * 19) --> (228 + 6) --> (234 + 20) --> 254", "(12 + 20) --> (32 * 8) --> (256 + 19) --> (275 - 6) --> (269 - 15) --> 254", "(12 * 20) --> (240 + 8) --> (248 + 6) --> 254", "(8 * 19) --> (152 - 15) --> (137 * 12) --> (1644 / 6) --> (274.0 - 20) --> 254", "(8 + 6) --> (14 * 19) --> (266 - 12) --> 254", "(19 + 15) --> (34 * 8) --> (272 - 12) --> (260 - 6) --> 254", "(6 + 20) --> (26 * 8) --> (208 + 12) --> (220 + 19) --> (239 + 15) --> 254", "(20 - 6) --> (14 * 19) --> (266 - 12) --> 254", "(20 - 15) --> (5 * 12) --> (60 - 19) --> (41 * 6) --> (246 + 8) --> 254"]}, "target": 254, "n_ways": 11, "round": 3}, "r4": {"n": [4, 7, 10, 16, 22, 23], "how": {"445": ["(16 + 10) --> (26 - 7) --> (19 * 22) --> (418 + 4) --> (422 + 23) --> 445", "(16 * 22) --> (352 / 4) --> (88.0 - 23) --> (65.0 * 7) --> (455.0 - 10) --> 445", "(16 * 4) --> (64 - 22) --> (42 + 23) --> (65 * 7) --> (455 - 10) --> 445", "(16 + 4) --> (20 * 23) --> (460 - 22) --> (438 + 7) --> 445", "(10 + 4) --> (14 + 7) --> (21 * 23) --> (483 - 16) --> (467 - 22) --> 445", "(10 * 23) --> (230 + 22) --> (252 * 7) --> (1764 + 16) --> (1780 / 4) --> 445", "(22 * 4) --> (88 - 23) --> (65 * 7) --> (455 - 10) --> 445"]}, "target": 445, "n_ways": 7, "round": 4}, "r5": {"n": [7, 11, 12, 19, 22, 24], "how": {"465": ["(22 * 24) --> (528 / 12) --> (44.0 * 11) --> (484.0 - 19) --> 465", "(22 * 19) --> (418 + 12) --> (430 + 24) --> (454 + 11) --> 465", "(12 - 11) --> (1 + 19) --> (20 * 24) --> (480 - 22) --> (458 + 7) --> 465", "(24 + 19) --> (43 - 7) --> (36 * 12) --> (432 + 22) --> (454 + 11) --> 465"]}, "target": 465, "n_ways": 4, "round": 5}}