{"puzzleDate": "2024-08-29", "r1": {"n": [2, 5, 6, 11, 13, 15], "how": {"101": ["(11 + 13) --> (24 - 5) --> (19 * 6) --> (114 - 15) --> (99 + 2) --> 101", "(11 * 6) --> (66 + 13) --> (79 + 5) --> (84 + 15) --> (99 + 2) --> 101", "(11 * 6) --> (66 - 13) --> (53 + 5) --> (58 * 2) --> (116 - 15) --> 101", "(11 * 6) --> (66 - 13) --> (53 * 2) --> (106 - 5) --> 101", "(11 - 5) --> (6 * 13) --> (78 + 6) --> (84 + 15) --> (99 + 2) --> 101", "(11 + 5) --> (16 * 13) --> (208 - 6) --> (202 / 2) --> 101", "(11 - 5) --> (6 * 15) --> (90 + 13) --> (103 - 2) --> 101", "(11 + 5) --> (16 * 15) --> (240 / 2) --> (120.0 - 13) --> (107.0 - 6) --> 101", "(11 - 5) --> (6 + 15) --> (21 - 2) --> (19 * 6) --> (114 - 13) --> 101", "(11 * 5) --> (55 * 2) --> (110 + 6) --> (116 - 15) --> 101", "(11 * 15) --> (165 + 6) --> (171 + 5) --> (176 / 2) --> (88.0 + 13) --> 101", "(13 - 11) --> (2 / 2) --> (1.0 + 15) --> (16.0 * 6) --> (96.0 + 5) --> 101", "(13 - 11) --> (2 * 2) --> (4 + 15) --> (19 * 5) --> (95 + 6) --> 101", "(13 + 5) --> (18 / 6) --> (3.0 * 15) --> (45.0 * 2) --> (90.0 + 11) --> 101", "(13 - 5) --> (8 * 15) --> (120 - 11) --> (109 - 6) --> (103 - 2) --> 101", "(13 + 15) --> (28 * 11) --> (308 - 5) --> (303 * 2) --> (606 / 6) --> 101", "(13 * 15) --> (195 - 5) --> (190 / 2) --> (95.0 + 6) --> 101", "(13 - 2) --> (11 * 11) --> (121 - 5) --> (116 - 15) --> 101", "(13 + 2) --> (15 * 6) --> (90 + 11) --> 101", "(13 + 2) --> (15 * 5) --> (75 + 11) --> (86 + 15) --> 101", "(6 * 5) --> (30 + 13) --> (43 * 2) --> (86 + 15) --> 101", "(6 * 5) --> (30 + 15) --> (45 * 2) --> (90 + 11) --> 101", "(6 * 15) --> (90 + 11) --> 101", "(6 * 15) --> (90 + 13) --> (103 - 2) --> 101", "(6 / 2) --> (3.0 + 5) --> (8.0 * 11) --> (88.0 + 13) --> 101", "(6 / 2) --> (3.0 + 15) --> (18.0 * 5) --> (90.0 + 11) --> 101", "(5 * 15) --> (75 - 13) --> (62 - 6) --> (56 * 2) --> (112 - 11) --> 101", "(15 - 6) --> (9 * 11) --> (99 + 2) --> 101", "(15 - 6) --> (9 * 13) --> (117 - 11) --> (106 - 5) --> 101", "(15 * 2) --> (30 - 11) --> (19 * 6) --> (114 - 13) --> 101"]}, "target": 101, "n_ways": 30, "round": 1}, "r2": {"n": [4, 5, 9, 12, 17, 20], "how": {"179": ["(5 + 9) --> (14 + 4) --> (18 * 12) --> (216 - 20) --> (196 - 17) --> 179", "(5 * 4) --> (20 - 9) --> (11 * 17) --> (187 - 20) --> (167 + 12) --> 179", "(5 * 12) --> (60 - 20) --> (40 / 4) --> (10.0 * 17) --> (170.0 + 9) --> 179", "(5 + 12) --> (17 + 17) --> (34 * 20) --> (680 / 4) --> (170.0 + 9) --> 179", "(9 * 20) --> (180 - 5) --> (175 + 4) --> 179", "(9 * 20) --> (180 + 4) --> (184 + 12) --> (196 - 17) --> 179", "(9 + 20) --> (29 + 17) --> (46 * 4) --> (184 - 5) --> 179", "(20 - 9) --> (11 * 17) --> (187 + 4) --> (191 - 12) --> 179", "(20 + 4) --> (24 * 5) --> (120 / 12) --> (10.0 * 17) --> (170.0 + 9) --> 179", "(20 / 4) --> (5.0 + 5) --> (10.0 * 17) --> (170.0 + 9) --> 179", "(20 - 4) --> (16 * 12) --> (192 - 5) --> (187 + 9) --> (196 - 17) --> 179", "(12 - 9) --> (3 * 4) --> (12 * 17) --> (204 - 5) --> (199 - 20) --> 179", "(12 / 4) --> (3.0 + 9) --> (12.0 * 17) --> (204.0 - 5) --> (199.0 - 20) --> 179", "(12 / 4) --> (3.0 + 20) --> (23.0 - 5) --> (18.0 * 9) --> (162.0 + 17) --> 179", "(12 * 17) --> (204 - 5) --> (199 - 20) --> 179"]}, "target": 179, "n_ways": 15, "round": 2}, "r3": {"n": [4, 7, 8, 11, 14, 18], "how": {"310": ["(11 + 14) --> (25 - 8) --> (17 * 18) --> (306 + 4) --> 310", "(11 * 4) --> (44 - 7) --> (37 * 8) --> (296 + 14) --> 310", "(11 - 7) --> (4 * 4) --> (16 * 18) --> (288 + 14) --> (302 + 8) --> 310", "(11 + 7) --> (18 * 18) --> (324 - 14) --> 310", "(11 * 8) --> (88 - 7) --> (81 * 4) --> (324 - 14) --> 310", "(14 - 11) --> (3 * 8) --> (24 - 7) --> (17 * 18) --> (306 + 4) --> 310", "(18 * 7) --> (126 - 14) --> (112 * 11) --> (1232 + 8) --> (1240 / 4) --> 310", "(18 * 8) --> (144 + 11) --> (155 * 14) --> (2170 / 7) --> 310", "(18 * 8) --> (144 + 11) --> (155 * 4) --> (620 * 7) --> (4340 / 14) --> 310", "(7 * 8) --> (56 + 18) --> (74 * 4) --> (296 + 14) --> 310"]}, "target": 310, "n_ways": 10, "round": 3}, "r4": {"n": [8, 11, 14, 17, 20, 21], "how": {"435": ["(17 - 8) --> (9 + 11) --> (20 * 20) --> (400 + 21) --> (421 + 14) --> 435", "(21 * 20) --> (420 / 14) --> (30.0 + 8) --> (38.0 * 11) --> (418.0 + 17) --> 435"]}, "target": 435, "n_ways": 2, "round": 4}, "r5": {"n": [6, 10, 11, 17, 22, 24], "how": {"439": ["(10 + 11) --> (21 * 22) --> (462 - 6) --> (456 - 17) --> 439", "(24 + 17) --> (41 * 11) --> (451 + 10) --> (461 - 22) --> 439", "(6 + 22) --> (28 + 17) --> (45 * 10) --> (450 - 11) --> 439", "(22 + 17) --> (39 * 11) --> (429 + 10) --> 439"]}, "target": 439, "n_ways": 4, "round": 5}}