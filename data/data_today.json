{"puzzleDate": "2024-10-26", "r1": {"n": [3, 7, 8, 10, 12, 15], "how": {"134": ["(3 + 10) --> (13 + 12) --> (25 - 8) --> (17 * 7) --> (119 + 15) --> 134", "(3 + 10) --> (13 * 12) --> (156 - 15) --> (141 - 7) --> 134", "(3 * 10) --> (30 - 12) --> (18 * 7) --> (126 + 8) --> 134", "(3 + 12) --> (15 * 10) --> (150 - 8) --> (142 - 15) --> (127 + 7) --> 134", "(3 + 15) --> (18 * 8) --> (144 - 10) --> 134", "(3 + 15) --> (18 * 7) --> (126 + 8) --> 134", "(3 * 7) --> (21 + 12) --> (33 - 15) --> (18 * 8) --> (144 - 10) --> 134", "(10 - 3) --> (7 + 15) --> (22 * 7) --> (154 - 12) --> (142 - 8) --> 134", "(10 * 12) --> (120 - 8) --> (112 + 15) --> (127 + 7) --> 134", "(12 / 3) --> (4.0 + 10) --> (14.0 * 8) --> (112.0 + 15) --> (127.0 + 7) --> 134", "(12 - 3) --> (9 + 8) --> (17 * 7) --> (119 + 15) --> 134", "(12 - 3) --> (9 * 15) --> (135 - 8) --> (127 + 7) --> 134", "(12 * 8) --> (96 * 15) --> (1440 / 10) --> (144.0 - 3) --> (141.0 - 7) --> 134", "(12 * 15) --> (180 / 10) --> (18.0 * 7) --> (126.0 + 8) --> 134", "(8 - 3) --> (5 + 7) --> (12 * 12) --> (144 - 10) --> 134", "(8 * 15) --> (120 - 3) --> (117 + 10) --> (127 + 7) --> 134", "(8 - 7) --> (1 * 15) --> (15 - 3) --> (12 * 12) --> (144 - 10) --> 134", "(15 - 3) --> (12 * 12) --> (144 - 10) --> 134", "(15 / 3) --> (5.0 + 7) --> (12.0 * 12) --> (144.0 - 10) --> 134"]}, "target": 134, "n_ways": 19, "round": 1}, "r2": {"n": [3, 6, 8, 12, 13, 15], "how": {"200": ["(15 + 8) --> (23 + 12) --> (35 * 6) --> (210 + 3) --> (213 - 13) --> 200", "(15 + 12) --> (27 * 8) --> (216 + 3) --> (219 - 13) --> (206 - 6) --> 200", "(15 + 12) --> (27 * 8) --> (216 - 3) --> (213 - 13) --> 200", "(15 - 3) --> (12 + 13) --> (25 * 8) --> 200", "(15 + 3) --> (18 + 13) --> (31 - 6) --> (25 * 8) --> 200", "(15 * 3) --> (45 - 13) --> (32 * 6) --> (192 + 8) --> 200", "(15 + 3) --> (18 / 6) --> (3.0 + 13) --> (16.0 * 12) --> (192.0 + 8) --> 200", "(15 - 6) --> (9 / 3) --> (3.0 + 13) --> (16.0 * 12) --> (192.0 + 8) --> 200", "(8 + 12) --> (20 - 3) --> (17 * 13) --> (221 - 15) --> (206 - 6) --> 200", "(8 * 12) --> (96 - 3) --> (93 - 13) --> (80 * 15) --> (1200 / 6) --> 200", "(8 * 12) --> (96 * 6) --> (576 - 15) --> (561 / 3) --> (187.0 + 13) --> 200", "(8 + 6) --> (14 * 13) --> (182 + 15) --> (197 + 3) --> 200", "(12 / 3) --> (4.0 + 15) --> (19.0 + 6) --> (25.0 * 8) --> 200", "(12 + 13) --> (25 * 8) --> 200", "(12 * 6) --> (72 - 13) --> (59 * 3) --> (177 + 15) --> (192 + 8) --> 200", "(3 + 13) --> (16 * 12) --> (192 + 8) --> 200", "(13 - 3) --> (10 * 15) --> (150 * 8) --> (1200 / 6) --> 200", "(13 - 3) --> (10 + 6) --> (16 * 12) --> (192 + 8) --> 200"]}, "target": 200, "n_ways": 18, "round": 2}, "r3": {"n": [5, 7, 10, 14, 18, 20], "how": {"347": ["(5 + 20) --> (25 * 14) --> (350 - 10) --> (340 + 7) --> 347", "(18 - 10) --> (8 - 5) --> (3 + 14) --> (17 * 20) --> (340 + 7) --> 347", "(18 + 14) --> (32 * 10) --> (320 + 20) --> (340 + 7) --> 347", "(20 + 14) --> (34 * 10) --> (340 + 7) --> 347", "(14 - 10) --> (4 * 5) --> (20 * 18) --> (360 - 20) --> (340 + 7) --> 347", "(14 - 10) --> (4 * 20) --> (80 - 7) --> (73 * 5) --> (365 - 18) --> 347"]}, "target": 347, "n_ways": 6, "round": 3}, "r4": {"n": [6, 7, 12, 14, 21, 22], "how": {"451": ["(14 + 7) --> (21 * 21) --> (441 - 12) --> (429 + 22) --> 451", "(14 * 6) --> (84 - 21) --> (63 * 7) --> (441 - 12) --> (429 + 22) --> 451", "(21 - 6) --> (15 + 22) --> (37 * 12) --> (444 + 14) --> (458 - 7) --> 451", "(21 - 6) --> (15 + 22) --> (37 * 12) --> (444 + 7) --> 451", "(21 * 22) --> (462 + 14) --> (476 - 12) --> (464 - 7) --> (457 - 6) --> 451", "(21 * 22) --> (462 - 12) --> (450 + 7) --> (457 - 6) --> 451"]}, "target": 451, "n_ways": 6, "round": 4}, "r5": {"n": [4, 6, 9, 12, 16, 25], "how": {"583": ["(25 + 12) --> (37 * 16) --> (592 - 9) --> 583", "(9 * 4) --> (36 * 16) --> (576 + 25) --> (601 - 12) --> (589 - 6) --> 583", "(9 * 12) --> (108 - 4) --> (104 * 6) --> (624 - 25) --> (599 - 16) --> 583"]}, "target": 583, "n_ways": 3, "round": 5}}