{"puzzleDate": "2024-08-19", "r1": {"n": [2, 6, 9, 11, 14, 15], "how": {"159": ["(2 * 9) --> (18 + 11) --> (29 * 6) --> (174 - 15) --> 159", "(2 + 9) --> (11 + 15) --> (26 * 6) --> (156 - 11) --> (145 + 14) --> 159", "(2 + 9) --> (11 * 15) --> (165 - 6) --> 159", "(2 + 9) --> (11 * 14) --> (154 + 11) --> (165 - 6) --> 159", "(2 + 11) --> (13 + 15) --> (28 * 6) --> (168 - 9) --> 159", "(2 + 6) --> (8 + 15) --> (23 - 11) --> (12 * 14) --> (168 - 9) --> 159", "(2 * 6) --> (12 * 14) --> (168 - 9) --> 159", "(2 + 15) --> (17 * 9) --> (153 + 6) --> 159", "(2 + 14) --> (16 * 9) --> (144 + 15) --> 159", "(2 * 14) --> (28 - 11) --> (17 * 9) --> (153 + 6) --> 159", "(2 + 14) --> (16 - 6) --> (10 * 15) --> (150 + 9) --> 159", "(9 + 11) --> (20 / 2) --> (10.0 + 14) --> (24.0 * 6) --> (144.0 + 15) --> 159", "(9 * 6) --> (54 + 11) --> (65 * 2) --> (130 + 15) --> (145 + 14) --> 159", "(9 + 14) --> (23 - 11) --> (12 * 2) --> (24 * 6) --> (144 + 15) --> 159", "(11 * 15) --> (165 + 2) --> (167 + 6) --> (173 - 14) --> 159", "(11 * 15) --> (165 - 6) --> 159", "(11 + 14) --> (25 * 6) --> (150 + 9) --> 159", "(6 / 2) --> (3.0 + 15) --> (18.0 * 9) --> (162.0 + 11) --> (173.0 - 14) --> 159", "(6 * 15) --> (90 - 9) --> (81 * 2) --> (162 + 11) --> (173 - 14) --> 159", "(6 + 14) --> (20 / 2) --> (10.0 * 15) --> (150.0 + 9) --> 159", "(15 - 2) --> (13 - 11) --> (2 * 6) --> (12 * 14) --> (168 - 9) --> 159", "(15 - 11) --> (4 / 2) --> (2.0 * 6) --> (12.0 * 14) --> (168.0 - 9) --> 159", "(14 - 6) --> (8 * 2) --> (16 * 9) --> (144 + 15) --> 159"]}, "target": 159, "n_ways": 23, "round": 1}, "r2": {"n": [4, 5, 8, 13, 16, 17], "how": {"226": ["(13 + 4) --> (17 + 8) --> (25 + 17) --> (42 * 5) --> (210 + 16) --> 226", "(13 * 17) --> (221 + 5) --> 226", "(13 + 17) --> (30 + 16) --> (46 * 5) --> (230 + 4) --> (234 - 8) --> 226", "(13 + 17) --> (30 + 16) --> (46 * 5) --> (230 - 4) --> 226", "(4 * 8) --> (32 + 13) --> (45 * 5) --> (225 + 17) --> (242 - 16) --> 226", "(5 - 4) --> (1 + 17) --> (18 * 13) --> (234 + 8) --> (242 - 16) --> 226", "(5 - 4) --> (1 + 17) --> (18 * 13) --> (234 - 8) --> 226", "(8 / 4) --> (2.0 + 17) --> (19.0 * 13) --> (247.0 - 5) --> (242.0 - 16) --> 226", "(8 - 5) --> (3 + 16) --> (19 * 13) --> (247 - 4) --> (243 - 17) --> 226"]}, "target": 226, "n_ways": 9, "round": 2}, "r3": {"n": [6, 11, 13, 14, 17, 19], "how": {"226": ["(6 + 13) --> (19 * 11) --> (209 + 17) --> 226", "(6 + 14) --> (20 * 11) --> (220 - 13) --> (207 + 19) --> 226", "(6 + 17) --> (23 * 11) --> (253 - 13) --> (240 - 14) --> 226", "(6 + 19) --> (25 - 11) --> (14 * 14) --> (196 + 13) --> (209 + 17) --> 226", "(13 * 17) --> (221 - 6) --> (215 + 11) --> 226", "(13 * 17) --> (221 - 14) --> (207 + 19) --> 226", "(14 - 13) --> (1 * 11) --> (11 * 19) --> (209 + 17) --> 226", "(14 * 17) --> (238 - 6) --> (232 + 13) --> (245 - 19) --> 226", "(14 + 19) --> (33 * 6) --> (198 + 11) --> (209 + 17) --> 226", "(11 * 19) --> (209 + 17) --> 226", "(17 - 14) --> (3 * 6) --> (18 * 13) --> (234 + 11) --> (245 - 19) --> 226"]}, "target": 226, "n_ways": 11, "round": 3}, "r4": {"n": [5, 14, 16, 17, 19, 24], "how": {"439": ["(24 * 16) --> (384 + 14) --> (398 + 5) --> (403 + 19) --> (422 + 17) --> 439", "(24 - 16) --> (8 + 5) --> (13 + 17) --> (30 * 14) --> (420 + 19) --> 439", "(24 + 5) --> (29 * 14) --> (406 + 16) --> (422 + 17) --> 439", "(24 - 19) --> (5 * 5) --> (25 * 17) --> (425 + 14) --> 439", "(24 * 19) --> (456 - 17) --> 439", "(14 + 5) --> (19 * 24) --> (456 - 17) --> 439", "(17 - 14) --> (3 * 24) --> (72 + 19) --> (91 * 5) --> (455 - 16) --> 439"]}, "target": 439, "n_ways": 7, "round": 4}, "r5": {"n": [4, 9, 16, 18, 19, 24], "how": {"598": ["(24 + 9) --> (33 * 18) --> (594 + 4) --> 598", "(24 * 18) --> (432 / 16) --> (27.0 + 4) --> (31.0 * 19) --> (589.0 + 9) --> 598", "(24 + 18) --> (42 - 4) --> (38 * 16) --> (608 + 9) --> (617 - 19) --> 598", "(19 - 9) --> (10 * 16) --> (160 * 4) --> (640 - 24) --> (616 - 18) --> 598"]}, "target": 598, "n_ways": 4, "round": 5}}