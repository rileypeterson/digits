{"puzzleDate": "2024-04-25", "r1": {"n": [3, 4, 6, 8, 10, 11], "how": {"142": ["(8 * 3) --> (24 + 10) --> (34 * 4) --> (136 + 6) --> 142", "(8 * 3) --> (24 + 10) --> (34 - 11) --> (23 * 6) --> (138 + 4) --> 142", "(8 * 3) --> (24 / 4) --> (6.0 + 6) --> (12.0 * 11) --> (132.0 + 10) --> 142", "(8 + 3) --> (11 + 11) --> (22 * 6) --> (132 + 10) --> 142", "(8 * 10) --> (80 - 11) --> (69 / 3) --> (23.0 * 6) --> (138.0 + 4) --> 142", "(8 - 4) --> (4 * 3) --> (12 * 11) --> (132 + 10) --> 142", "(8 / 4) --> (2.0 * 6) --> (12.0 * 11) --> (132.0 + 10) --> 142", "(8 + 4) --> (12 * 11) --> (132 + 10) --> 142", "(8 * 6) --> (48 - 4) --> (44 * 3) --> (132 + 10) --> 142", "(3 + 10) --> (13 + 4) --> (17 * 8) --> (136 + 6) --> 142", "(3 * 10) --> (30 - 11) --> (19 * 8) --> (152 - 4) --> (148 - 6) --> 142", "(3 * 4) --> (12 * 11) --> (132 + 10) --> 142", "(3 + 11) --> (14 * 10) --> (140 - 8) --> (132 + 4) --> (136 + 6) --> 142", "(3 + 11) --> (14 * 10) --> (140 + 8) --> (148 - 6) --> 142", "(3 + 11) --> (14 * 10) --> (140 - 4) --> (136 + 6) --> 142", "(3 * 11) --> (33 - 10) --> (23 * 6) --> (138 + 8) --> (146 - 4) --> 142", "(3 * 11) --> (33 - 10) --> (23 * 6) --> (138 + 4) --> 142", "(10 - 3) --> (7 + 11) --> (18 * 8) --> (144 + 4) --> (148 - 6) --> 142", "(10 - 3) --> (7 * 11) --> (77 - 6) --> (71 * 8) --> (568 / 4) --> 142", "(10 - 4) --> (6 + 11) --> (17 * 8) --> (136 + 6) --> 142", "(4 + 11) --> (15 * 10) --> (150 - 8) --> 142", "(4 * 11) --> (44 + 6) --> (50 * 3) --> (150 - 8) --> 142", "(6 / 3) --> (2.0 + 11) --> (13.0 * 10) --> (130.0 + 8) --> (138.0 + 4) --> 142", "(11 - 6) --> (5 * 3) --> (15 * 10) --> (150 - 8) --> 142"]}, "target": 142, "n_ways": 24, "round": 1}, "r2": {"n": [4, 8, 11, 13, 16, 19], "how": {"226": ["(8 - 4) --> (4 + 16) --> (20 * 11) --> (220 - 13) --> (207 + 19) --> 226", "(8 / 4) --> (2.0 + 16) --> (18.0 * 13) --> (234.0 + 11) --> (245.0 - 19) --> 226", "(8 + 4) --> (12 * 19) --> (228 + 11) --> (239 - 13) --> 226", "(11 + 16) --> (27 * 8) --> (216 + 4) --> (220 - 13) --> (207 + 19) --> 226", "(11 + 13) --> (24 * 4) --> (96 * 19) --> (1824 - 16) --> (1808 / 8) --> 226", "(11 * 19) --> (209 + 4) --> (213 + 13) --> 226", "(4 + 16) --> (20 * 11) --> (220 - 13) --> (207 + 19) --> 226", "(16 - 4) --> (12 * 19) --> (228 + 11) --> (239 - 13) --> 226", "(19 - 11) --> (8 / 4) --> (2.0 + 16) --> (18.0 * 13) --> (234.0 - 8) --> 226"]}, "target": 226, "n_ways": 9, "round": 2}, "r3": {"n": [5, 6, 11, 16, 19, 20], "how": {"307": ["(6 + 20) --> (26 * 11) --> (286 + 5) --> (291 + 16) --> 307", "(6 + 11) --> (17 * 19) --> (323 - 16) --> 307", "(6 * 11) --> (66 * 5) --> (330 - 19) --> (311 - 20) --> (291 + 16) --> 307", "(19 - 5) --> (14 * 20) --> (280 + 11) --> (291 + 16) --> 307", "(19 * 16) --> (304 - 6) --> (298 + 20) --> (318 - 11) --> 307", "(20 - 5) --> (15 * 19) --> (285 + 6) --> (291 + 16) --> 307", "(20 / 5) --> (4.0 + 11) --> (15.0 * 19) --> (285.0 + 6) --> (291.0 + 16) --> 307", "(20 * 16) --> (320 + 6) --> (326 - 19) --> 307", "(20 * 16) --> (320 - 19) --> (301 + 11) --> (312 - 5) --> 307", "(11 + 5) --> (16 * 20) --> (320 + 6) --> (326 - 19) --> 307"]}, "target": 307, "n_ways": 10, "round": 3}, "r4": {"n": [9, 10, 13, 19, 22, 24], "how": {"448": ["(19 + 10) --> (29 + 22) --> (51 * 9) --> (459 + 13) --> (472 - 24) --> 448", "(19 * 10) --> (190 - 22) --> (168 * 24) --> (4032 / 9) --> 448", "(19 + 10) --> (29 + 9) --> (38 * 13) --> (494 - 22) --> (472 - 24) --> 448", "(10 + 13) --> (23 + 22) --> (45 * 9) --> (405 + 19) --> (424 + 24) --> 448", "(9 + 24) --> (33 * 13) --> (429 + 19) --> 448", "(24 - 9) --> (15 * 13) --> (195 * 22) --> (4290 / 10) --> (429.0 + 19) --> 448"]}, "target": 448, "n_ways": 6, "round": 4}, "r5": {"n": [6, 7, 16, 22, 24, 25], "how": {"492": ["(16 + 6) --> (22 * 22) --> (484 - 24) --> (460 + 7) --> (467 + 25) --> 492", "(6 * 7) --> (42 - 22) --> (20 * 25) --> (500 + 16) --> (516 - 24) --> 492", "(22 * 25) --> (550 + 24) --> (574 * 6) --> (3444 / 7) --> 492"]}, "target": 492, "n_ways": 3, "round": 5}}