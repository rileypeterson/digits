{"puzzleDate": "2023-12-26", "r1": {"n": [3, 7, 10, 12, 13, 15], "how": {"113": ["(15 + 13) --> (28 * 3) --> (84 + 12) --> (96 + 7) --> (103 + 10) --> 113", "(15 + 13) --> (28 + 12) --> (40 * 3) --> (120 - 7) --> 113", "(15 + 13) --> (28 * 12) --> (336 - 7) --> (329 + 10) --> (339 / 3) --> 113", "(15 + 3) --> (18 * 7) --> (126 - 13) --> 113", "(15 - 3) --> (12 * 10) --> (120 - 7) --> 113", "(15 - 12) --> (3 + 7) --> (10 * 10) --> (100 + 13) --> 113", "(15 * 12) --> (180 * 7) --> (1260 / 10) --> (126.0 - 13) --> 113", "(15 - 7) --> (8 * 13) --> (104 - 3) --> (101 + 12) --> 113", "(15 * 7) --> (105 + 13) --> (118 - 3) --> (115 - 12) --> (103 + 10) --> 113", "(15 + 10) --> (25 * 12) --> (300 / 3) --> (100.0 + 13) --> 113", "(13 + 3) --> (16 - 15) --> (1 * 12) --> (12 * 10) --> (120 - 7) --> 113", "(13 * 3) --> (39 - 15) --> (24 - 12) --> (12 * 10) --> (120 - 7) --> 113", "(13 - 3) --> (10 * 12) --> (120 - 7) --> 113", "(13 + 3) --> (16 - 12) --> (4 + 10) --> (14 * 7) --> (98 + 15) --> 113", "(13 + 3) --> (16 - 7) --> (9 * 15) --> (135 - 12) --> (123 - 10) --> 113", "(13 * 12) --> (156 + 3) --> (159 * 10) --> (1590 / 15) --> (106.0 + 7) --> 113", "(13 * 7) --> (91 + 15) --> (106 - 3) --> (103 + 10) --> 113", "(13 * 7) --> (91 + 12) --> (103 + 10) --> 113", "(3 + 7) --> (10 * 10) --> (100 + 13) --> 113", "(3 * 10) --> (30 - 12) --> (18 * 7) --> (126 - 13) --> 113", "(12 / 3) --> (4.0 + 10) --> (14.0 * 7) --> (98.0 + 15) --> 113", "(12 * 10) --> (120 - 7) --> 113"]}, "target": 113, "n_ways": 22, "round": 1}, "r2": {"n": [4, 8, 10, 13, 18, 19], "how": {"227": ["(4 * 8) --> (32 - 13) --> (19 * 10) --> (190 + 18) --> (208 + 19) --> 227", "(4 + 10) --> (14 * 19) --> (266 - 8) --> (258 - 18) --> (240 - 13) --> 227", "(4 + 10) --> (14 * 13) --> (182 + 8) --> (190 + 18) --> (208 + 19) --> 227", "(4 + 18) --> (22 - 19) --> (3 * 8) --> (24 * 10) --> (240 - 13) --> 227", "(4 + 19) --> (23 * 10) --> (230 - 8) --> (222 + 18) --> (240 - 13) --> 227", "(8 + 18) --> (26 - 10) --> (16 * 13) --> (208 + 19) --> 227", "(18 - 10) --> (8 / 4) --> (2.0 * 8) --> (16.0 * 13) --> (208.0 + 19) --> 227", "(18 * 13) --> (234 + 4) --> (238 + 8) --> (246 - 19) --> 227", "(19 * 13) --> (247 + 8) --> (255 - 10) --> (245 - 18) --> 227"]}, "target": 227, "n_ways": 9, "round": 2}, "r3": {"n": [4, 5, 13, 16, 19, 20], "how": {"349": ["(19 * 5) --> (95 - 16) --> (79 * 4) --> (316 + 13) --> (329 + 20) --> 349", "(5 - 4) --> (1 + 20) --> (21 * 16) --> (336 + 13) --> 349", "(5 * 20) --> (100 - 16) --> (84 * 4) --> (336 + 13) --> 349", "(20 - 13) --> (7 * 4) --> (28 - 5) --> (23 * 16) --> (368 - 19) --> 349", "(20 / 4) --> (5.0 + 13) --> (18.0 + 5) --> (23.0 * 16) --> (368.0 - 19) --> 349"]}, "target": 349, "n_ways": 5, "round": 3}, "r4": {"n": [4, 6, 8, 13, 19, 22], "how": {"392": ["(22 - 4) --> (18 - 13) --> (5 * 6) --> (30 + 19) --> (49 * 8) --> 392", "(22 + 8) --> (30 * 13) --> (390 - 4) --> (386 + 6) --> 392", "(22 + 6) --> (28 - 19) --> (9 * 4) --> (36 + 13) --> (49 * 8) --> 392", "(22 * 6) --> (132 - 19) --> (113 - 13) --> (100 * 4) --> (400 - 8) --> 392", "(4 * 13) --> (52 - 22) --> (30 + 19) --> (49 * 8) --> 392", "(8 * 13) --> (104 - 6) --> (98 * 4) --> 392", "(6 * 13) --> (78 + 22) --> (100 * 4) --> (400 - 8) --> 392", "(19 - 8) --> (11 - 6) --> (5 + 13) --> (18 * 22) --> (396 - 4) --> 392"]}, "target": 392, "n_ways": 8, "round": 4}, "r5": {"n": [6, 11, 15, 20, 21, 23], "how": {"535": ["(6 + 15) --> (21 * 23) --> (483 + 11) --> (494 + 20) --> (514 + 21) --> 535", "(6 + 23) --> (29 + 21) --> (50 * 11) --> (550 - 15) --> 535", "(6 + 20) --> (26 * 21) --> (546 - 11) --> 535", "(15 + 11) --> (26 * 20) --> (520 - 6) --> (514 + 21) --> 535", "(21 - 11) --> (10 * 6) --> (60 - 23) --> (37 * 15) --> (555 - 20) --> 535"]}, "target": 535, "n_ways": 5, "round": 5}}