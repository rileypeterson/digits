{"puzzleDate": "2023-12-02", "r1": {"n": [2, 4, 7, 10, 13, 15], "how": {"144": ["(13 * 7) --> (91 - 4) --> (87 - 15) --> (72 * 2) --> 144", "(13 + 7) --> (20 / 2) --> (10.0 * 15) --> (150.0 + 4) --> (154.0 - 10) --> 144", "(13 + 7) --> (20 - 10) --> (10 * 15) --> (150 - 4) --> (146 - 2) --> 144", "(13 + 4) --> (17 * 7) --> (119 + 15) --> (134 + 10) --> 144", "(13 - 4) --> (9 * 15) --> (135 + 7) --> (142 + 2) --> 144", "(13 * 4) --> (52 + 15) --> (67 * 2) --> (134 + 10) --> 144", "(13 * 2) --> (26 - 4) --> (22 * 7) --> (154 - 10) --> 144", "(13 - 2) --> (11 * 15) --> (165 - 7) --> (158 - 4) --> (154 - 10) --> 144", "(13 + 2) --> (15 + 15) --> (30 - 10) --> (20 * 7) --> (140 + 4) --> 144", "(13 - 2) --> (11 + 15) --> (26 + 10) --> (36 * 4) --> 144", "(13 * 2) --> (26 + 10) --> (36 * 4) --> 144", "(13 + 15) --> (28 / 2) --> (14.0 * 10) --> (140.0 + 4) --> 144", "(13 + 15) --> (28 - 10) --> (18 * 4) --> (72 * 2) --> 144", "(13 + 10) --> (23 * 7) --> (161 - 4) --> (157 + 2) --> (159 - 15) --> 144", "(13 + 10) --> (23 * 7) --> (161 - 2) --> (159 - 15) --> 144", "(13 - 10) --> (3 * 7) --> (21 + 15) --> (36 * 4) --> 144", "(13 - 10) --> (3 * 15) --> (45 - 7) --> (38 - 2) --> (36 * 4) --> 144", "(7 + 4) --> (11 + 10) --> (21 * 13) --> (273 + 15) --> (288 / 2) --> 144", "(7 * 2) --> (14 * 10) --> (140 + 4) --> 144", "(7 * 15) --> (105 - 13) --> (92 / 2) --> (46.0 - 10) --> (36.0 * 4) --> 144", "(7 * 10) --> (70 + 13) --> (83 + 4) --> (87 - 15) --> (72 * 2) --> 144", "(7 * 10) --> (70 - 13) --> (57 + 15) --> (72 * 4) --> (288 / 2) --> 144", "(7 * 10) --> (70 - 13) --> (57 + 15) --> (72 * 2) --> 144", "(4 * 15) --> (60 + 7) --> (67 * 2) --> (134 + 10) --> 144", "(2 * 15) --> (30 + 13) --> (43 - 7) --> (36 * 4) --> 144", "(2 + 15) --> (17 - 10) --> (7 * 7) --> (49 - 13) --> (36 * 4) --> 144", "(2 * 15) --> (30 - 10) --> (20 * 7) --> (140 + 4) --> 144", "(15 - 4) --> (11 * 7) --> (77 * 2) --> (154 - 10) --> 144", "(15 * 10) --> (150 - 13) --> (137 + 7) --> 144", "(15 * 10) --> (150 - 4) --> (146 - 2) --> 144", "(10 / 2) --> (5.0 + 15) --> (20.0 * 7) --> (140.0 + 4) --> 144"]}, "target": 144, "n_ways": 31, "round": 1}, "r2": {"n": [5, 8, 11, 13, 16, 20], "how": {"237": ["(13 + 20) --> (33 * 8) --> (264 - 11) --> (253 - 16) --> 237", "(13 + 20) --> (33 + 16) --> (49 * 5) --> (245 - 8) --> 237", "(13 + 16) --> (29 * 8) --> (232 + 5) --> 237", "(5 * 20) --> (100 + 13) --> (113 * 16) --> (1808 / 8) --> (226.0 + 11) --> 237", "(5 + 20) --> (25 - 11) --> (14 * 16) --> (224 + 13) --> 237", "(8 - 5) --> (3 + 20) --> (23 * 11) --> (253 - 16) --> 237", "(8 - 5) --> (3 + 11) --> (14 * 16) --> (224 + 13) --> 237", "(8 + 20) --> (28 - 11) --> (17 * 13) --> (221 + 16) --> 237", "(20 - 5) --> (15 + 11) --> (26 * 8) --> (208 + 13) --> (221 + 16) --> 237", "(20 / 5) --> (4.0 * 11) --> (44.0 - 16) --> (28.0 * 8) --> (224.0 + 13) --> 237", "(20 + 11) --> (31 * 8) --> (248 + 5) --> (253 - 16) --> 237", "(16 - 13) --> (3 * 20) --> (60 - 11) --> (49 * 5) --> (245 - 8) --> 237", "(16 / 8) --> (2.0 + 20) --> (22.0 * 11) --> (242.0 - 5) --> 237"]}, "target": 237, "n_ways": 13, "round": 2}, "r3": {"n": [3, 5, 8, 12, 14, 20], "how": {"355": ["(8 * 3) --> (24 + 20) --> (44 - 14) --> (30 * 12) --> (360 - 5) --> 355", "(8 - 3) --> (5 + 20) --> (25 * 14) --> (350 + 5) --> 355", "(8 * 12) --> (96 / 3) --> (32.0 - 14) --> (18.0 * 20) --> (360.0 - 5) --> 355", "(8 * 12) --> (96 + 14) --> (110 * 3) --> (330 + 20) --> (350 + 5) --> 355", "(8 + 20) --> (28 * 12) --> (336 + 14) --> (350 + 5) --> 355", "(8 + 14) --> (22 - 5) --> (17 * 20) --> (340 + 3) --> (343 + 12) --> 355", "(12 - 8) --> (4 + 14) --> (18 * 20) --> (360 - 5) --> 355", "(12 / 3) --> (4.0 + 14) --> (18.0 * 20) --> (360.0 - 5) --> 355", "(20 * 14) --> (280 / 5) --> (56.0 - 12) --> (44.0 * 8) --> (352.0 + 3) --> 355", "(14 - 8) --> (6 * 3) --> (18 * 20) --> (360 - 5) --> 355"]}, "target": 355, "n_ways": 10, "round": 3}, "r4": {"n": [9, 13, 15, 18, 20, 24], "how": {"448": ["(20 + 9) --> (29 * 15) --> (435 + 13) --> 448", "(20 - 9) --> (11 + 18) --> (29 * 15) --> (435 + 13) --> 448", "(13 + 24) --> (37 + 15) --> (52 * 9) --> (468 - 20) --> 448", "(24 - 13) --> (11 + 15) --> (26 * 18) --> (468 - 20) --> 448", "(24 - 15) --> (9 + 9) --> (18 + 18) --> (36 * 13) --> (468 - 20) --> 448", "(24 * 18) --> (432 + 20) --> (452 - 13) --> (439 + 9) --> 448", "(9 + 18) --> (27 - 13) --> (14 * 20) --> (280 * 24) --> (6720 / 15) --> 448"]}, "target": 448, "n_ways": 7, "round": 4}, "r5": {"n": [4, 11, 14, 17, 21, 23], "how": {"520": ["(14 * 11) --> (154 - 23) --> (131 * 4) --> (524 - 21) --> (503 + 17) --> 520", "(21 - 14) --> (7 * 17) --> (119 + 11) --> (130 * 4) --> 520", "(21 + 17) --> (38 * 14) --> (532 - 23) --> (509 + 11) --> 520", "(21 - 11) --> (10 * 14) --> (140 * 4) --> (560 - 23) --> (537 - 17) --> 520"]}, "target": 520, "n_ways": 4, "round": 5}}