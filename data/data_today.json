{"puzzleDate": "2025-04-03", "r1": {"n": [2, 3, 9, 11, 14, 15], "how": {"119": ["(9 + 15) --> (24 - 2) --> (22 + 14) --> (36 * 3) --> (108 + 11) --> 119", "(9 * 15) --> (135 - 2) --> (133 - 14) --> 119", "(9 + 15) --> (24 * 2) --> (48 * 3) --> (144 - 14) --> (130 - 11) --> 119", "(9 * 15) --> (135 - 2) --> (133 - 3) --> (130 - 11) --> 119", "(9 + 15) --> (24 + 11) --> (35 * 3) --> (105 + 14) --> 119", "(9 - 2) --> (7 * 15) --> (105 + 14) --> 119", "(9 - 2) --> (7 * 15) --> (105 + 3) --> (108 + 11) --> 119", "(9 + 2) --> (11 * 11) --> (121 + 15) --> (136 - 14) --> (122 - 3) --> 119", "(9 * 2) --> (18 - 11) --> (7 * 15) --> (105 + 14) --> 119", "(9 * 14) --> (126 - 15) --> (111 - 3) --> (108 + 11) --> 119", "(9 + 14) --> (23 * 3) --> (69 - 15) --> (54 * 2) --> (108 + 11) --> 119", "(9 + 14) --> (23 * 11) --> (253 - 15) --> (238 / 2) --> 119", "(9 + 14) --> (23 + 11) --> (34 * 3) --> (102 + 15) --> (117 + 2) --> 119", "(9 * 3) --> (27 + 14) --> (41 + 11) --> (52 * 2) --> (104 + 15) --> 119", "(9 / 3) --> (3.0 + 11) --> (14.0 * 15) --> (210.0 / 2) --> (105.0 + 14) --> 119", "(9 - 3) --> (6 + 11) --> (17 * 14) --> (238 / 2) --> 119", "(9 * 11) --> (99 + 15) --> (114 + 2) --> (116 + 3) --> 119", "(9 * 11) --> (99 - 15) --> (84 * 3) --> (252 - 14) --> (238 / 2) --> 119", "(9 + 11) --> (20 / 2) --> (10.0 - 3) --> (7.0 * 15) --> (105.0 + 14) --> 119", "(15 - 2) --> (13 + 3) --> (16 * 9) --> (144 - 14) --> (130 - 11) --> 119", "(15 - 2) --> (13 - 3) --> (10 * 11) --> (110 + 9) --> 119", "(15 * 2) --> (30 / 3) --> (10.0 * 11) --> (110.0 + 9) --> 119", "(15 * 14) --> (210 / 2) --> (105.0 + 3) --> (108.0 + 11) --> 119", "(15 * 3) --> (45 + 9) --> (54 * 2) --> (108 + 11) --> 119", "(15 - 3) --> (12 * 9) --> (108 + 11) --> 119", "(14 - 2) --> (12 * 9) --> (108 + 11) --> 119", "(14 / 2) --> (7.0 + 3) --> (10.0 * 11) --> (110.0 + 9) --> 119", "(14 - 3) --> (11 * 11) --> (121 - 2) --> 119", "(11 - 3) --> (8 * 14) --> (112 + 9) --> (121 - 2) --> 119"]}, "target": 119, "n_ways": 29, "round": 1}, "r2": {"n": [3, 5, 7, 8, 14, 18], "how": {"241": ["(3 * 8) --> (24 - 5) --> (19 * 14) --> (266 - 7) --> (259 - 18) --> 241", "(3 * 18) --> (54 - 7) --> (47 * 5) --> (235 - 8) --> (227 + 14) --> 241", "(3 * 5) --> (15 + 8) --> (23 + 14) --> (37 * 7) --> (259 - 18) --> 241", "(3 * 14) --> (42 - 5) --> (37 * 7) --> (259 - 18) --> 241", "(8 * 7) --> (56 + 18) --> (74 * 3) --> (222 + 5) --> (227 + 14) --> 241", "(8 * 5) --> (40 - 3) --> (37 * 7) --> (259 - 18) --> 241", "(8 + 5) --> (13 * 18) --> (234 + 7) --> 241", "(8 + 5) --> (13 * 18) --> (234 - 7) --> (227 + 14) --> 241", "(7 + 18) --> (25 - 8) --> (17 * 14) --> (238 + 3) --> 241", "(7 + 5) --> (12 * 18) --> (216 + 3) --> (219 + 8) --> (227 + 14) --> 241", "(7 * 5) --> (35 - 18) --> (17 * 14) --> (238 + 3) --> 241", "(18 * 14) --> (252 - 3) --> (249 - 8) --> 241", "(18 + 14) --> (32 * 8) --> (256 - 3) --> (253 - 7) --> (246 - 5) --> 241", "(5 * 14) --> (70 + 8) --> (78 * 3) --> (234 + 7) --> 241"]}, "target": 241, "n_ways": 14, "round": 2}, "r3": {"n": [5, 11, 14, 16, 17, 20], "how": {"351": ["(11 + 5) --> (16 * 20) --> (320 + 17) --> (337 + 14) --> 351", "(11 + 17) --> (28 * 14) --> (392 - 5) --> (387 - 16) --> (371 - 20) --> 351", "(5 + 16) --> (21 * 17) --> (357 + 14) --> (371 - 20) --> 351", "(17 - 14) --> (3 * 16) --> (48 + 20) --> (68 * 5) --> (340 + 11) --> 351", "(17 * 20) --> (340 + 11) --> 351", "(17 * 20) --> (340 - 5) --> (335 + 16) --> 351", "(16 * 20) --> (320 + 17) --> (337 + 14) --> 351", "(14 - 11) --> (3 + 20) --> (23 * 16) --> (368 - 17) --> 351", "(20 / 5) --> (4.0 + 16) --> (20.0 * 17) --> (340.0 + 11) --> 351", "(20 - 16) --> (4 * 5) --> (20 * 17) --> (340 + 11) --> 351"]}, "target": 351, "n_ways": 10, "round": 3}, "r4": {"n": [8, 10, 11, 16, 18, 23], "how": {"361": ["(11 + 10) --> (21 - 18) --> (3 * 8) --> (24 * 16) --> (384 - 23) --> 361", "(10 * 18) --> (180 - 11) --> (169 * 16) --> (2704 / 8) --> (338.0 + 23) --> 361", "(10 + 23) --> (33 * 11) --> (363 - 18) --> (345 + 16) --> 361", "(8 + 18) --> (26 - 11) --> (15 * 23) --> (345 + 16) --> 361", "(16 - 10) --> (6 * 11) --> (66 - 18) --> (48 * 8) --> (384 - 23) --> 361", "(16 * 23) --> (368 + 11) --> (379 - 10) --> (369 - 8) --> 361", "(16 * 23) --> (368 + 11) --> (379 - 18) --> 361", "(16 + 23) --> (39 * 10) --> (390 - 11) --> (379 - 18) --> 361"]}, "target": 361, "n_ways": 8, "round": 4}, "r5": {"n": [7, 8, 18, 21, 23, 25], "how": {"461": ["(21 * 23) --> (483 + 18) --> (501 - 8) --> (493 - 7) --> (486 - 25) --> 461", "(18 * 23) --> (414 + 21) --> (435 + 8) --> (443 - 7) --> (436 + 25) --> 461", "(23 + 7) --> (30 + 25) --> (55 * 8) --> (440 + 21) --> 461"]}, "target": 461, "n_ways": 3, "round": 5}}