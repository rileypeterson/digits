{"puzzleDate": "2023-11-20", "r1": {"n": [2, 4, 6, 8, 12, 15], "how": {"125": ["(8 + 4) --> (12 * 12) --> (144 - 15) --> (129 + 2) --> (131 - 6) --> 125", "(8 - 4) --> (4 * 12) --> (48 + 2) --> (50 * 15) --> (750 / 6) --> 125", "(8 * 12) --> (96 + 4) --> (100 * 15) --> (1500 / 2) --> (750.0 / 6) --> 125", "(8 * 2) --> (16 * 6) --> (96 + 4) --> (100 * 15) --> (1500 / 12) --> 125", "(8 - 2) --> (6 + 6) --> (12 * 12) --> (144 - 4) --> (140 - 15) --> 125", "(4 + 12) --> (16 * 15) --> (240 - 6) --> (234 / 2) --> (117.0 + 8) --> 125", "(4 * 12) --> (48 * 2) --> (96 + 8) --> (104 + 15) --> (119 + 6) --> 125", "(4 * 12) --> (48 + 2) --> (50 * 15) --> (750 / 6) --> 125", "(4 * 12) --> (48 * 6) --> (288 - 8) --> (280 / 2) --> (140.0 - 15) --> 125", "(4 + 15) --> (19 * 12) --> (228 + 6) --> (234 / 2) --> (117.0 + 8) --> 125", "(12 - 4) --> (8 * 8) --> (64 + 6) --> (70 * 2) --> (140 - 15) --> 125", "(12 / 4) --> (3.0 + 6) --> (9.0 * 15) --> (135.0 - 8) --> (127.0 - 2) --> 125", "(12 + 2) --> (14 * 8) --> (112 + 4) --> (116 + 15) --> (131 - 6) --> 125", "(12 * 2) --> (24 - 6) --> (18 * 8) --> (144 - 4) --> (140 - 15) --> 125", "(12 * 2) --> (24 * 6) --> (144 - 4) --> (140 - 15) --> 125", "(12 + 6) --> (18 * 8) --> (144 - 4) --> (140 - 15) --> 125", "(2 * 6) --> (12 + 4) --> (16 * 8) --> (128 + 12) --> (140 - 15) --> 125"]}, "target": 125, "n_ways": 17, "round": 1}, "r2": {"n": [3, 6, 9, 11, 13, 17], "how": {"239": ["(3 * 17) --> (51 - 9) --> (42 * 6) --> (252 - 13) --> 239", "(3 + 17) --> (20 * 11) --> (220 + 6) --> (226 + 13) --> 239", "(3 * 17) --> (51 - 13) --> (38 * 6) --> (228 + 11) --> 239", "(3 * 11) --> (33 + 9) --> (42 * 6) --> (252 - 13) --> 239", "(3 * 11) --> (33 - 9) --> (24 + 13) --> (37 * 6) --> (222 + 17) --> 239", "(3 * 11) --> (33 - 6) --> (27 * 9) --> (243 - 17) --> (226 + 13) --> 239", "(9 / 3) --> (3.0 + 17) --> (20.0 * 11) --> (220.0 + 6) --> (226.0 + 13) --> 239", "(9 / 3) --> (3.0 * 17) --> (51.0 - 13) --> (38.0 * 6) --> (228.0 + 11) --> 239", "(9 + 6) --> (15 * 17) --> (255 - 3) --> (252 - 13) --> 239", "(9 - 6) --> (3 * 13) --> (39 - 17) --> (22 * 11) --> (242 - 3) --> 239", "(9 + 13) --> (22 * 11) --> (242 + 3) --> (245 - 6) --> 239", "(9 + 13) --> (22 * 11) --> (242 - 3) --> 239", "(17 + 11) --> (28 * 9) --> (252 - 13) --> 239", "(17 * 13) --> (221 + 3) --> (224 + 9) --> (233 + 6) --> 239", "(11 + 13) --> (24 * 9) --> (216 + 6) --> (222 + 17) --> 239"]}, "target": 239, "n_ways": 15, "round": 2}, "r3": {"n": [3, 6, 11, 15, 18, 20], "how": {"338": ["(6 * 3) --> (18 * 20) --> (360 - 18) --> (342 - 15) --> (327 + 11) --> 338", "(6 - 3) --> (3 + 20) --> (23 * 15) --> (345 - 18) --> (327 + 11) --> 338", "(6 + 3) --> (9 + 11) --> (20 * 15) --> (300 + 18) --> (318 + 20) --> 338", "(6 + 11) --> (17 * 18) --> (306 - 3) --> (303 + 15) --> (318 + 20) --> 338", "(3 + 15) --> (18 * 18) --> (324 - 6) --> (318 + 20) --> 338", "(3 * 15) --> (45 + 11) --> (56 * 6) --> (336 - 18) --> (318 + 20) --> 338", "(3 + 20) --> (23 * 15) --> (345 - 18) --> (327 + 11) --> 338", "(15 / 3) --> (5.0 + 11) --> (16.0 * 20) --> (320.0 + 18) --> 338"]}, "target": 338, "n_ways": 8, "round": 3}, "r4": {"n": [9, 12, 15, 18, 22, 25], "how": {"329": ["(15 - 9) --> (6 + 22) --> (28 * 12) --> (336 - 25) --> (311 + 18) --> 329", "(15 * 18) --> (270 + 12) --> (282 + 25) --> (307 + 22) --> 329", "(12 * 25) --> (300 / 15) --> (20.0 * 18) --> (360.0 - 9) --> (351.0 - 22) --> 329", "(12 + 25) --> (37 * 9) --> (333 - 22) --> (311 + 18) --> 329", "(9 + 22) --> (31 * 12) --> (372 - 25) --> (347 - 18) --> 329"]}, "target": 329, "n_ways": 5, "round": 4}, "r5": {"n": [4, 6, 12, 16, 22, 25], "how": {"449": ["(6 * 16) --> (96 + 22) --> (118 - 12) --> (106 * 4) --> (424 + 25) --> 449", "(16 + 25) --> (41 * 22) --> (902 - 4) --> (898 * 6) --> (5388 / 12) --> 449", "(22 + 12) --> (34 - 4) --> (30 * 16) --> (480 - 6) --> (474 - 25) --> 449", "(12 / 4) --> (3.0 + 16) --> (19.0 * 22) --> (418.0 + 6) --> (424.0 + 25) --> 449"]}, "target": 449, "n_ways": 4, "round": 5}}