{"puzzleDate": "2024-10-08", "r1": {"n": [2, 3, 6, 10, 13, 15], "how": {"101": ["(13 + 3) --> (16 / 2) --> (8.0 * 10) --> (80.0 + 15) --> (95.0 + 6) --> 101", "(13 - 3) --> (10 - 2) --> (8 * 10) --> (80 + 15) --> (95 + 6) --> 101", "(13 + 3) --> (16 * 6) --> (96 + 15) --> (111 - 10) --> 101", "(13 * 3) --> (39 - 6) --> (33 + 10) --> (43 * 2) --> (86 + 15) --> 101", "(13 * 15) --> (195 + 3) --> (198 - 6) --> (192 + 10) --> (202 / 2) --> 101", "(13 * 15) --> (195 - 3) --> (192 + 10) --> (202 / 2) --> 101", "(13 * 2) --> (26 - 15) --> (11 * 10) --> (110 - 3) --> (107 - 6) --> 101", "(13 * 2) --> (26 * 6) --> (156 * 10) --> (1560 / 15) --> (104.0 - 3) --> 101", "(13 - 2) --> (11 * 10) --> (110 - 3) --> (107 - 6) --> 101", "(13 - 2) --> (11 * 10) --> (110 - 15) --> (95 + 6) --> 101", "(13 * 6) --> (78 + 15) --> (93 - 2) --> (91 + 10) --> 101", "(3 + 15) --> (18 * 13) --> (234 / 2) --> (117.0 - 6) --> (111.0 - 10) --> 101", "(3 * 15) --> (45 - 13) --> (32 * 6) --> (192 + 10) --> (202 / 2) --> 101", "(3 - 2) --> (1 + 6) --> (7 * 13) --> (91 + 10) --> 101", "(3 * 10) --> (30 + 13) --> (43 * 2) --> (86 + 15) --> 101", "(3 * 10) --> (30 - 15) --> (15 * 6) --> (90 + 13) --> (103 - 2) --> 101", "(15 / 3) --> (5.0 + 2) --> (7.0 * 13) --> (91.0 + 10) --> 101", "(15 - 3) --> (12 * 10) --> (120 - 13) --> (107 - 6) --> 101", "(15 + 6) --> (21 * 13) --> (273 / 3) --> (91.0 + 10) --> 101", "(15 * 6) --> (90 + 13) --> (103 - 2) --> 101", "(15 * 6) --> (90 + 3) --> (93 - 2) --> (91 + 10) --> 101", "(2 + 6) --> (8 * 13) --> (104 - 3) --> 101", "(6 + 10) --> (16 * 13) --> (208 / 2) --> (104.0 - 3) --> 101", "(6 * 10) --> (60 - 3) --> (57 * 2) --> (114 - 13) --> 101", "(10 - 3) --> (7 * 15) --> (105 + 2) --> (107 - 6) --> 101", "(10 - 2) --> (8 * 13) --> (104 - 3) --> 101", "(10 - 2) --> (8 * 13) --> (104 + 3) --> (107 - 6) --> 101", "(10 - 2) --> (8 * 15) --> (120 - 13) --> (107 - 6) --> 101"]}, "target": 101, "n_ways": 28, "round": 1}, "r2": {"n": [3, 6, 8, 13, 17, 19], "how": {"202": ["(6 + 8) --> (14 + 3) --> (17 * 13) --> (221 - 19) --> 202", "(6 + 8) --> (14 * 13) --> (182 + 3) --> (185 + 17) --> 202", "(6 * 8) --> (48 + 13) --> (61 * 3) --> (183 + 19) --> 202", "(6 + 3) --> (9 - 8) --> (1 * 17) --> (17 * 13) --> (221 - 19) --> 202", "(6 * 3) --> (18 - 8) --> (10 * 17) --> (170 + 13) --> (183 + 19) --> 202", "(6 / 3) --> (2.0 + 8) --> (10.0 * 17) --> (170.0 + 13) --> (183.0 + 19) --> 202", "(6 + 3) --> (9 + 17) --> (26 * 8) --> (208 + 13) --> (221 - 19) --> 202", "(6 * 17) --> (102 - 13) --> (89 - 19) --> (70 * 3) --> (210 - 8) --> 202", "(6 * 13) --> (78 - 17) --> (61 * 3) --> (183 + 19) --> 202", "(8 + 13) --> (21 / 3) --> (7.0 + 6) --> (13.0 * 17) --> (221.0 - 19) --> 202", "(3 + 17) --> (20 - 13) --> (7 + 19) --> (26 * 8) --> (208 - 6) --> 202", "(17 + 13) --> (30 * 6) --> (180 + 3) --> (183 + 19) --> 202", "(17 * 13) --> (221 - 19) --> 202", "(19 - 3) --> (16 * 13) --> (208 - 6) --> 202", "(19 - 17) --> (2 * 8) --> (16 * 13) --> (208 - 6) --> 202"]}, "target": 202, "n_ways": 15, "round": 2}, "r3": {"n": [3, 4, 7, 10, 17, 20], "how": {"247": ["(17 + 3) --> (20 + 4) --> (24 * 10) --> (240 + 7) --> 247", "(17 * 4) --> (68 + 20) --> (88 * 3) --> (264 - 7) --> (257 - 10) --> 247", "(17 - 4) --> (13 * 20) --> (260 - 3) --> (257 - 10) --> 247", "(17 * 4) --> (68 + 10) --> (78 * 3) --> (234 + 20) --> (254 - 7) --> 247", "(3 + 20) --> (23 * 10) --> (230 + 17) --> 247", "(3 * 20) --> (60 * 4) --> (240 + 17) --> (257 - 10) --> 247", "(3 * 20) --> (60 * 4) --> (240 + 7) --> 247", "(3 * 7) --> (21 * 10) --> (210 + 17) --> (227 + 20) --> 247", "(3 + 10) --> (13 * 20) --> (260 - 17) --> (243 + 4) --> 247", "(20 + 7) --> (27 - 4) --> (23 * 10) --> (230 + 17) --> 247", "(20 + 4) --> (24 * 10) --> (240 + 17) --> (257 - 3) --> (254 - 7) --> 247", "(20 + 4) --> (24 * 10) --> (240 + 7) --> 247", "(7 + 4) --> (11 * 20) --> (220 + 17) --> (237 + 10) --> 247"]}, "target": 247, "n_ways": 13, "round": 3}, "r4": {"n": [5, 8, 10, 12, 19, 20], "how": {"422": ["(20 + 19) --> (39 + 5) --> (44 - 8) --> (36 * 12) --> (432 - 10) --> 422", "(20 - 8) --> (12 * 5) --> (60 - 19) --> (41 * 10) --> (410 + 12) --> 422", "(5 * 8) --> (40 + 20) --> (60 - 19) --> (41 * 10) --> (410 + 12) --> 422", "(10 / 5) --> (2.0 + 20) --> (22.0 * 19) --> (418.0 + 12) --> (430.0 - 8) --> 422"]}, "target": 422, "n_ways": 4, "round": 4}, "r5": {"n": [4, 6, 12, 13, 17, 21], "how": {"537": ["(13 * 21) --> (273 + 4) --> (277 * 12) --> (3324 / 6) --> (554.0 - 17) --> 537", "(21 + 6) --> (27 + 17) --> (44 * 12) --> (528 + 13) --> (541 - 4) --> 537", "(21 * 6) --> (126 + 17) --> (143 - 12) --> (131 * 4) --> (524 + 13) --> 537"]}, "target": 537, "n_ways": 3, "round": 5}}