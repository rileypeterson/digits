{"puzzleDate": "2024-11-30", "r1": {"n": [2, 6, 8, 10, 13, 15], "how": {"106": ["(13 + 10) --> (23 + 15) --> (38 / 2) --> (19.0 * 6) --> (114.0 - 8) --> 106", "(13 - 10) --> (3 + 15) --> (18 * 6) --> (108 - 2) --> 106", "(13 - 10) --> (3 * 15) --> (45 + 8) --> (53 * 2) --> 106", "(13 + 15) --> (28 / 2) --> (14.0 * 8) --> (112.0 - 6) --> 106", "(13 + 15) --> (28 - 6) --> (22 * 10) --> (220 - 8) --> (212 / 2) --> 106", "(13 * 6) --> (78 - 10) --> (68 - 15) --> (53 * 2) --> 106", "(13 * 6) --> (78 - 2) --> (76 * 15) --> (1140 / 10) --> (114.0 - 8) --> 106", "(13 - 8) --> (5 * 10) --> (50 * 2) --> (100 + 6) --> 106", "(13 * 8) --> (104 + 10) --> (114 - 2) --> (112 - 6) --> 106", "(13 * 8) --> (104 + 2) --> 106", "(10 + 2) --> (12 + 15) --> (27 - 13) --> (14 * 8) --> (112 - 6) --> 106", "(10 - 2) --> (8 * 15) --> (120 - 6) --> (114 - 8) --> 106", "(10 / 2) --> (5.0 + 8) --> (13.0 * 6) --> (78.0 + 13) --> (91.0 + 15) --> 106", "(10 + 15) --> (25 * 8) --> (200 / 2) --> (100.0 + 6) --> 106", "(10 + 6) --> (16 - 13) --> (3 * 15) --> (45 + 8) --> (53 * 2) --> 106", "(10 * 6) --> (60 - 15) --> (45 + 8) --> (53 * 2) --> 106", "(10 + 6) --> (16 - 8) --> (8 * 13) --> (104 + 2) --> 106", "(10 * 6) --> (60 - 8) --> (52 * 2) --> (104 - 13) --> (91 + 15) --> 106", "(10 * 8) --> (80 + 13) --> (93 - 2) --> (91 + 15) --> 106", "(10 + 8) --> (18 * 6) --> (108 + 13) --> (121 - 15) --> 106", "(10 + 8) --> (18 * 6) --> (108 - 2) --> 106", "(2 * 6) --> (12 * 8) --> (96 + 10) --> 106", "(2 + 8) --> (10 * 10) --> (100 + 6) --> 106", "(15 - 13) --> (2 * 6) --> (12 * 8) --> (96 + 10) --> 106", "(15 * 6) --> (90 + 10) --> (100 - 2) --> (98 + 8) --> 106", "(15 * 8) --> (120 - 10) --> (110 + 2) --> (112 - 6) --> 106", "(15 + 8) --> (23 * 10) --> (230 * 6) --> (1380 - 2) --> (1378 / 13) --> 106", "(6 + 8) --> (14 * 13) --> (182 / 2) --> (91.0 + 15) --> 106"]}, "target": 106, "n_ways": 28, "round": 1}, "r2": {"n": [4, 7, 10, 12, 17, 20], "how": {"185": ["(17 * 12) --> (204 + 4) --> (208 - 10) --> (198 - 20) --> (178 + 7) --> 185", "(17 + 12) --> (29 - 4) --> (25 * 7) --> (175 + 10) --> 185", "(17 - 12) --> (5 * 20) --> (100 / 4) --> (25.0 * 7) --> (175.0 + 10) --> 185", "(17 - 12) --> (5 + 20) --> (25 * 7) --> (175 + 10) --> 185", "(17 - 10) --> (7 + 20) --> (27 * 7) --> (189 - 4) --> 185", "(17 + 10) --> (27 * 7) --> (189 + 12) --> (201 + 4) --> (205 - 20) --> 185", "(17 - 10) --> (7 * 7) --> (49 - 12) --> (37 * 20) --> (740 / 4) --> 185", "(17 + 10) --> (27 * 7) --> (189 - 4) --> 185", "(12 * 4) --> (48 * 10) --> (480 / 20) --> (24.0 * 7) --> (168.0 + 17) --> 185", "(12 + 10) --> (22 + 20) --> (42 * 4) --> (168 + 17) --> 185", "(12 + 20) --> (32 / 4) --> (8.0 + 17) --> (25.0 * 7) --> (175.0 + 10) --> 185", "(12 * 20) --> (240 / 10) --> (24.0 * 7) --> (168.0 + 17) --> 185", "(4 + 10) --> (14 * 12) --> (168 + 17) --> 185", "(4 + 20) --> (24 - 10) --> (14 * 12) --> (168 + 17) --> 185", "(4 + 20) --> (24 * 7) --> (168 + 17) --> 185", "(10 * 20) --> (200 - 12) --> (188 + 4) --> (192 - 7) --> 185", "(20 - 4) --> (16 * 12) --> (192 - 17) --> (175 + 10) --> 185", "(20 - 4) --> (16 * 12) --> (192 - 7) --> 185"]}, "target": 185, "n_ways": 18, "round": 2}, "r3": {"n": [3, 7, 8, 10, 14, 16], "how": {"239": ["(10 + 14) --> (24 + 3) --> (27 * 8) --> (216 + 7) --> (223 + 16) --> 239", "(10 + 16) --> (26 + 3) --> (29 * 8) --> (232 + 7) --> 239", "(10 + 16) --> (26 + 3) --> (29 * 8) --> (232 - 7) --> (225 + 14) --> 239", "(10 + 8) --> (18 * 14) --> (252 - 16) --> (236 + 3) --> 239", "(10 * 8) --> (80 - 14) --> (66 + 16) --> (82 * 3) --> (246 - 7) --> 239", "(14 * 16) --> (224 + 7) --> (231 + 8) --> 239", "(14 + 16) --> (30 + 3) --> (33 * 7) --> (231 + 8) --> 239", "(14 + 8) --> (22 * 10) --> (220 + 16) --> (236 + 3) --> 239", "(16 * 8) --> (128 - 10) --> (118 * 14) --> (1652 / 7) --> (236.0 + 3) --> 239"]}, "target": 239, "n_ways": 9, "round": 3}, "r4": {"n": [4, 6, 9, 13, 17, 18], "how": {"430": ["(9 + 6) --> (15 + 17) --> (32 * 13) --> (416 + 18) --> (434 - 4) --> 430", "(6 * 17) --> (102 * 4) --> (408 - 9) --> (399 + 18) --> (417 + 13) --> 430", "(6 * 17) --> (102 * 4) --> (408 + 9) --> (417 + 13) --> 430", "(6 + 18) --> (24 * 17) --> (408 + 9) --> (417 + 13) --> 430", "(17 - 6) --> (11 * 9) --> (99 + 13) --> (112 * 4) --> (448 - 18) --> 430", "(17 * 13) --> (221 - 6) --> (215 * 9) --> (1935 * 4) --> (7740 / 18) --> 430", "(17 * 13) --> (221 - 6) --> (215 * 18) --> (3870 / 9) --> 430", "(18 - 6) --> (12 + 13) --> (25 * 17) --> (425 + 9) --> (434 - 4) --> 430"]}, "target": 430, "n_ways": 8, "round": 4}, "r5": {"n": [9, 11, 13, 15, 20, 24], "how": {"494": ["(24 - 20) --> (4 * 9) --> (36 * 13) --> (468 + 15) --> (483 + 11) --> 494", "(24 + 20) --> (44 + 9) --> (53 - 15) --> (38 * 13) --> 494", "(24 - 20) --> (4 * 11) --> (44 + 9) --> (53 - 15) --> (38 * 13) --> 494", "(24 + 9) --> (33 / 11) --> (3.0 + 20) --> (23.0 + 15) --> (38.0 * 13) --> 494", "(24 * 15) --> (360 / 20) --> (18.0 + 9) --> (27.0 + 11) --> (38.0 * 13) --> 494"]}, "target": 494, "n_ways": 5, "round": 5}}