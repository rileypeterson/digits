{"puzzleDate": "2024-11-14", "r1": {"n": [3, 5, 9, 10, 12, 15], "how": {"151": ["(9 * 10) --> (90 * 5) --> (450 - 12) --> (438 + 15) --> (453 / 3) --> 151", "(9 / 3) --> (3.0 + 10) --> (13.0 * 12) --> (156.0 - 5) --> 151", "(12 - 10) --> (2 + 15) --> (17 * 9) --> (153 + 3) --> (156 - 5) --> 151", "(12 + 10) --> (22 - 3) --> (19 * 9) --> (171 - 15) --> (156 - 5) --> 151", "(12 + 15) --> (27 + 3) --> (30 * 5) --> (150 - 9) --> (141 + 10) --> 151", "(12 * 3) --> (36 - 15) --> (21 - 5) --> (16 * 10) --> (160 - 9) --> 151", "(10 * 15) --> (150 + 9) --> (159 - 3) --> (156 - 5) --> 151", "(10 + 3) --> (13 * 12) --> (156 - 5) --> 151", "(15 / 5) --> (3.0 + 9) --> (12.0 * 12) --> (144.0 + 10) --> (154.0 - 3) --> 151", "(3 + 5) --> (8 * 15) --> (120 + 9) --> (129 + 12) --> (141 + 10) --> 151"]}, "target": 151, "n_ways": 10, "round": 1}, "r2": {"n": [3, 7, 11, 15, 16, 18], "how": {"243": ["(18 - 11) --> (7 + 16) --> (23 - 7) --> (16 * 15) --> (240 + 3) --> 243", "(18 - 11) --> (7 * 16) --> (112 / 7) --> (16.0 * 15) --> (240.0 + 3) --> 243", "(18 + 16) --> (34 - 3) --> (31 * 7) --> (217 + 11) --> (228 + 15) --> 243", "(18 * 15) --> (270 - 11) --> (259 - 16) --> 243", "(18 - 3) --> (15 * 15) --> (225 + 11) --> (236 + 7) --> 243", "(11 + 16) --> (27 + 3) --> (30 * 7) --> (210 + 18) --> (228 + 15) --> 243", "(11 + 7) --> (18 / 18) --> (1.0 * 16) --> (16.0 * 15) --> (240.0 + 3) --> 243", "(11 * 7) --> (77 * 3) --> (231 - 15) --> (216 * 18) --> (3888 / 16) --> 243", "(11 * 15) --> (165 / 3) --> (55.0 - 18) --> (37.0 * 7) --> (259.0 - 16) --> 243", "(11 + 3) --> (14 * 18) --> (252 - 16) --> (236 + 7) --> 243", "(16 - 11) --> (5 * 15) --> (75 * 3) --> (225 + 18) --> 243", "(16 - 7) --> (9 * 11) --> (99 - 18) --> (81 * 3) --> 243", "(16 - 7) --> (9 + 15) --> (24 * 11) --> (264 - 18) --> (246 - 3) --> 243", "(16 * 15) --> (240 + 3) --> 243", "(15 - 11) --> (4 * 18) --> (72 + 16) --> (88 - 7) --> (81 * 3) --> 243", "(15 - 3) --> (12 * 18) --> (216 + 11) --> (227 + 16) --> 243", "(15 / 3) --> (5.0 + 7) --> (12.0 * 18) --> (216.0 + 11) --> (227.0 + 16) --> 243"]}, "target": 243, "n_ways": 17, "round": 2}, "r3": {"n": [3, 6, 10, 16, 19, 20], "how": {"273": ["(10 + 19) --> (29 + 16) --> (45 * 6) --> (270 + 3) --> 273", "(10 + 3) --> (13 * 19) --> (247 + 20) --> (267 + 6) --> 273", "(10 + 3) --> (13 * 20) --> (260 + 19) --> (279 - 6) --> 273", "(10 + 20) --> (30 + 16) --> (46 * 6) --> (276 - 3) --> 273", "(10 * 6) --> (60 + 19) --> (79 * 3) --> (237 + 20) --> (257 + 16) --> 273", "(19 - 10) --> (9 + 20) --> (29 + 16) --> (45 * 6) --> (270 + 3) --> 273", "(19 - 6) --> (13 * 20) --> (260 - 3) --> (257 + 16) --> 273", "(19 - 6) --> (13 + 16) --> (29 * 10) --> (290 + 3) --> (293 - 20) --> 273", "(3 * 20) --> (60 - 16) --> (44 * 6) --> (264 - 10) --> (254 + 19) --> 273", "(20 * 6) --> (120 - 10) --> (110 - 19) --> (91 * 3) --> 273", "(20 - 6) --> (14 * 19) --> (266 + 10) --> (276 - 3) --> 273", "(16 - 3) --> (13 * 19) --> (247 + 20) --> (267 + 6) --> 273"]}, "target": 273, "n_ways": 12, "round": 3}, "r4": {"n": [6, 7, 13, 15, 24, 25], "how": {"331": ["(6 * 25) --> (150 * 15) --> (2250 - 24) --> (2226 / 7) --> (318.0 + 13) --> 331", "(25 * 15) --> (375 - 24) --> (351 - 13) --> (338 - 7) --> 331", "(25 * 13) --> (325 + 6) --> 331", "(15 - 13) --> (2 * 6) --> (12 * 25) --> (300 + 24) --> (324 + 7) --> 331", "(24 * 13) --> (312 - 6) --> (306 + 25) --> 331", "(13 + 7) --> (20 * 15) --> (300 + 6) --> (306 + 25) --> 331"]}, "target": 331, "n_ways": 6, "round": 4}, "r5": {"n": [4, 11, 17, 18, 23, 25], "how": {"537": ["(25 - 18) --> (7 + 17) --> (24 * 23) --> (552 - 4) --> (548 - 11) --> 537", "(25 + 4) --> (29 + 23) --> (52 * 11) --> (572 - 18) --> (554 - 17) --> 537", "(18 + 4) --> (22 * 23) --> (506 + 25) --> (531 + 17) --> (548 - 11) --> 537", "(18 + 4) --> (22 + 23) --> (45 * 11) --> (495 + 25) --> (520 + 17) --> 537", "(17 + 4) --> (21 * 25) --> (525 + 23) --> (548 - 11) --> 537"]}, "target": 537, "n_ways": 5, "round": 5}}