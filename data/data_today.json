{"puzzleDate": "2024-03-05", "r1": {"n": [3, 4, 6, 10, 13, 14], "how": {"128": ["(13 * 14) --> (182 + 10) --> (192 * 4) --> (768 / 6) --> 128", "(13 + 14) --> (27 - 4) --> (23 * 6) --> (138 - 10) --> 128", "(13 * 14) --> (182 * 3) --> (546 - 10) --> (536 / 4) --> (134.0 - 6) --> 128", "(13 * 14) --> (182 * 3) --> (546 + 6) --> (552 / 4) --> (138.0 - 10) --> 128", "(13 - 10) --> (3 * 14) --> (42 * 3) --> (126 - 4) --> (122 + 6) --> 128", "(13 + 10) --> (23 + 4) --> (27 * 14) --> (378 + 6) --> (384 / 3) --> 128", "(13 + 10) --> (23 - 4) --> (19 * 6) --> (114 + 14) --> 128", "(13 * 10) --> (130 + 4) --> (134 - 6) --> 128", "(13 + 10) --> (23 + 3) --> (26 + 6) --> (32 * 4) --> 128", "(13 - 10) --> (3 * 6) --> (18 + 14) --> (32 * 4) --> 128", "(13 - 4) --> (9 + 3) --> (12 * 10) --> (120 + 14) --> (134 - 6) --> 128", "(13 * 4) --> (52 * 6) --> (312 / 3) --> (104.0 + 14) --> (118.0 + 10) --> 128", "(13 * 4) --> (52 - 6) --> (46 * 3) --> (138 - 10) --> 128", "(13 - 3) --> (10 * 14) --> (140 - 10) --> (130 + 4) --> (134 - 6) --> 128", "(13 - 6) --> (7 * 4) --> (28 + 10) --> (38 * 3) --> (114 + 14) --> 128", "(14 * 10) --> (140 - 13) --> (127 + 4) --> (131 - 3) --> 128", "(14 + 10) --> (24 * 6) --> (144 - 13) --> (131 - 3) --> 128", "(14 + 4) --> (18 * 6) --> (108 + 13) --> (121 + 10) --> (131 - 3) --> 128", "(14 * 3) --> (42 - 10) --> (32 * 4) --> 128", "(10 * 4) --> (40 * 3) --> (120 + 14) --> (134 - 6) --> 128", "(3 * 6) --> (18 + 14) --> (32 * 4) --> 128", "(6 - 3) --> (3 * 14) --> (42 - 10) --> (32 * 4) --> 128"]}, "target": 128, "n_ways": 22, "round": 1}, "r2": {"n": [6, 9, 11, 13, 17, 20], "how": {"228": ["(6 + 20) --> (26 * 9) --> (234 - 17) --> (217 + 11) --> 228", "(6 + 13) --> (19 - 9) --> (10 * 20) --> (200 + 17) --> (217 + 11) --> 228", "(9 - 6) --> (3 * 11) --> (33 - 17) --> (16 * 13) --> (208 + 20) --> 228", "(9 + 20) --> (29 - 11) --> (18 * 13) --> (234 - 6) --> 228", "(9 + 11) --> (20 / 20) --> (1.0 + 17) --> (18.0 * 13) --> (234.0 - 6) --> 228", "(9 + 13) --> (22 * 11) --> (242 + 6) --> (248 - 20) --> 228", "(20 - 9) --> (11 / 11) --> (1.0 + 17) --> (18.0 * 13) --> (234.0 - 6) --> 228", "(20 - 17) --> (3 * 9) --> (27 + 11) --> (38 * 6) --> 228", "(20 + 17) --> (37 - 11) --> (26 * 9) --> (234 - 6) --> 228", "(20 * 17) --> (340 - 11) --> (329 + 13) --> (342 * 6) --> (2052 / 9) --> 228", "(20 * 11) --> (220 - 9) --> (211 + 17) --> 228", "(20 * 13) --> (260 - 6) --> (254 - 9) --> (245 - 17) --> 228", "(13 - 11) --> (2 * 9) --> (18 + 20) --> (38 * 6) --> 228"]}, "target": 228, "n_ways": 13, "round": 2}, "r3": {"n": [5, 8, 13, 14, 18, 20], "how": {"317": ["(5 + 20) --> (25 + 18) --> (43 * 8) --> (344 - 14) --> (330 - 13) --> 317", "(5 + 20) --> (25 + 14) --> (39 * 8) --> (312 + 18) --> (330 - 13) --> 317", "(5 + 20) --> (25 * 13) --> (325 - 8) --> 317", "(5 + 18) --> (23 * 14) --> (322 + 8) --> (330 - 13) --> 317", "(20 / 5) --> (4.0 * 14) --> (56.0 - 18) --> (38.0 * 8) --> (304.0 + 13) --> 317", "(20 - 5) --> (15 + 8) --> (23 * 13) --> (299 + 18) --> 317", "(20 + 18) --> (38 - 14) --> (24 * 13) --> (312 + 5) --> 317", "(20 + 18) --> (38 * 8) --> (304 + 13) --> 317", "(20 - 14) --> (6 * 8) --> (48 + 18) --> (66 * 5) --> (330 - 13) --> 317", "(18 + 14) --> (32 / 8) --> (4.0 + 20) --> (24.0 * 13) --> (312.0 + 5) --> 317", "(18 - 8) --> (10 + 13) --> (23 * 14) --> (322 - 5) --> 317", "(14 - 8) --> (6 + 13) --> (19 * 18) --> (342 - 5) --> (337 - 20) --> 317", "(8 + 13) --> (21 * 14) --> (294 + 5) --> (299 + 18) --> 317"]}, "target": 317, "n_ways": 13, "round": 3}, "r4": {"n": [7, 9, 11, 13, 14, 16], "how": {"445": ["(9 + 16) --> (25 + 13) --> (38 - 7) --> (31 * 14) --> (434 + 11) --> 445", "(9 + 7) --> (16 + 11) --> (27 * 16) --> (432 + 13) --> 445", "(16 * 13) --> (208 + 9) --> (217 / 7) --> (31.0 * 14) --> (434.0 + 11) --> 445", "(16 + 7) --> (23 + 14) --> (37 + 11) --> (48 * 9) --> (432 + 13) --> 445", "(13 - 9) --> (4 * 16) --> (64 * 7) --> (448 - 14) --> (434 + 11) --> 445", "(14 - 11) --> (3 * 9) --> (27 * 16) --> (432 + 13) --> 445", "(11 - 7) --> (4 * 16) --> (64 - 13) --> (51 * 9) --> (459 - 14) --> 445"]}, "target": 445, "n_ways": 7, "round": 4}, "r5": {"n": [8, 13, 15, 16, 20, 24], "how": {"466": ["(20 * 24) --> (480 - 13) --> (467 - 16) --> (451 + 15) --> 466", "(20 * 13) --> (260 - 15) --> (245 * 16) --> (3920 / 8) --> (490.0 - 24) --> 466"]}, "target": 466, "n_ways": 2, "round": 5}}