{"puzzleDate": "2025-06-26", "r1": {"n": [3, 6, 8, 10, 12, 13], "how": {"138": ["(8 + 10) --> (18 + 3) --> (21 * 6) --> (126 + 12) --> 138", "(8 * 10) --> (80 - 13) --> (67 * 6) --> (402 + 12) --> (414 / 3) --> 138", "(8 + 10) --> (18 + 12) --> (30 / 3) --> (10.0 + 13) --> (23.0 * 6) --> 138", "(8 * 3) --> (24 + 10) --> (34 - 13) --> (21 * 6) --> (126 + 12) --> 138", "(8 * 3) --> (24 - 13) --> (11 + 12) --> (23 * 6) --> 138", "(8 + 3) --> (11 + 12) --> (23 * 6) --> 138", "(8 + 13) --> (21 - 10) --> (11 + 12) --> (23 * 6) --> 138", "(8 + 13) --> (21 - 6) --> (15 * 10) --> (150 - 12) --> 138", "(8 + 13) --> (21 * 6) --> (126 + 12) --> 138", "(8 + 6) --> (14 * 10) --> (140 - 3) --> (137 + 13) --> (150 - 12) --> 138", "(8 * 6) --> (48 + 10) --> (58 - 12) --> (46 * 3) --> 138", "(10 - 8) --> (2 + 13) --> (15 - 3) --> (12 * 12) --> (144 - 6) --> 138", "(10 - 8) --> (2 * 13) --> (26 - 3) --> (23 * 6) --> 138", "(10 * 3) --> (30 - 8) --> (22 + 13) --> (35 - 12) --> (23 * 6) --> 138", "(10 * 3) --> (30 - 12) --> (18 * 8) --> (144 - 6) --> 138", "(10 * 13) --> (130 + 8) --> 138", "(10 + 13) --> (23 * 3) --> (69 * 12) --> (828 / 6) --> 138", "(10 + 13) --> (23 * 6) --> 138", "(10 * 12) --> (120 + 8) --> (128 + 3) --> (131 + 13) --> (144 - 6) --> 138", "(10 * 12) --> (120 + 8) --> (128 - 3) --> (125 + 13) --> 138", "(10 + 6) --> (16 * 8) --> (128 - 3) --> (125 + 13) --> 138", "(3 + 13) --> (16 * 8) --> (128 + 10) --> 138", "(3 + 13) --> (16 / 8) --> (2.0 + 10) --> (12.0 * 12) --> (144.0 - 6) --> 138", "(3 * 12) --> (36 - 13) --> (23 * 6) --> 138", "(13 - 8) --> (5 * 10) --> (50 * 3) --> (150 - 12) --> 138", "(13 + 12) --> (25 * 8) --> (200 / 10) --> (20.0 + 3) --> (23.0 * 6) --> 138", "(13 * 12) --> (156 - 8) --> (148 - 10) --> 138", "(12 - 8) --> (4 * 13) --> (52 - 6) --> (46 * 3) --> 138", "(12 - 10) --> (2 * 13) --> (26 - 3) --> (23 * 6) --> 138", "(12 / 3) --> (4.0 + 6) --> (10.0 * 13) --> (130.0 + 8) --> 138", "(6 / 3) --> (2.0 + 13) --> (15.0 * 10) --> (150.0 - 12) --> 138"]}, "target": 138, "n_ways": 31, "round": 1}, "r2": {"n": [4, 9, 13, 14, 17, 19], "how": {"246": ["(4 + 9) --> (13 * 19) --> (247 - 14) --> (233 + 13) --> 246", "(4 + 13) --> (17 * 14) --> (238 - 9) --> (229 + 17) --> 246", "(9 + 19) --> (28 + 13) --> (41 + 17) --> (58 * 4) --> (232 + 14) --> 246", "(19 - 4) --> (15 * 17) --> (255 - 9) --> 246", "(19 * 13) --> (247 - 4) --> (243 - 14) --> (229 + 17) --> 246", "(14 - 13) --> (1 * 19) --> (19 - 4) --> (15 * 17) --> (255 - 9) --> 246"]}, "target": 246, "n_ways": 6, "round": 2}, "r3": {"n": [5, 7, 10, 15, 18, 19], "how": {"232": ["(5 + 18) --> (23 - 10) --> (13 * 19) --> (247 - 15) --> 232", "(5 * 10) --> (50 - 19) --> (31 * 7) --> (217 + 15) --> 232", "(5 + 10) --> (15 * 15) --> (225 + 7) --> 232", "(5 + 19) --> (24 * 10) --> (240 - 15) --> (225 + 7) --> 232", "(5 * 7) --> (35 - 19) --> (16 * 15) --> (240 - 18) --> (222 + 10) --> 232", "(18 - 5) --> (13 * 19) --> (247 - 15) --> 232", "(18 + 19) --> (37 - 15) --> (22 * 10) --> (220 + 5) --> (225 + 7) --> 232", "(10 / 5) --> (2.0 + 18) --> (20.0 - 7) --> (13.0 * 19) --> (247.0 - 15) --> 232", "(10 + 7) --> (17 * 15) --> (255 - 5) --> (250 - 18) --> 232", "(19 - 18) --> (1 * 5) --> (5 + 10) --> (15 * 15) --> (225 + 7) --> 232", "(19 + 7) --> (26 * 10) --> (260 + 5) --> (265 - 18) --> (247 - 15) --> 232"]}, "target": 232, "n_ways": 11, "round": 3}, "r4": {"n": [10, 11, 14, 16, 22, 25], "how": {"394": ["(22 * 10) --> (220 * 25) --> (5500 + 16) --> (5516 / 14) --> 394", "(22 / 11) --> (2.0 + 14) --> (16.0 + 25) --> (41.0 * 10) --> (410.0 - 16) --> 394", "(22 / 11) --> (2.0 + 25) --> (27.0 * 14) --> (378.0 + 16) --> 394", "(22 + 16) --> (38 * 10) --> (380 + 14) --> 394", "(22 + 16) --> (38 * 10) --> (380 + 25) --> (405 - 11) --> 394", "(22 + 16) --> (38 * 11) --> (418 - 10) --> (408 - 14) --> 394", "(14 - 11) --> (3 * 22) --> (66 - 25) --> (41 * 10) --> (410 - 16) --> 394", "(25 - 10) --> (15 + 11) --> (26 * 16) --> (416 - 22) --> 394"]}, "target": 394, "n_ways": 8, "round": 4}, "r5": {"n": [8, 10, 11, 13, 17, 20], "how": {"581": ["(13 - 10) --> (3 * 11) --> (33 * 17) --> (561 + 20) --> 581", "(13 + 17) --> (30 * 20) --> (600 - 11) --> (589 - 8) --> 581", "(10 - 8) --> (2 * 17) --> (34 + 20) --> (54 * 11) --> (594 - 13) --> 581", "(11 + 17) --> (28 * 20) --> (560 + 13) --> (573 + 8) --> 581"]}, "target": 581, "n_ways": 4, "round": 5}}