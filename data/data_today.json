{"puzzleDate": "2024-12-28", "r1": {"n": [3, 5, 6, 8, 11, 15], "how": {"143": ["(15 - 3) --> (12 - 5) --> (7 + 6) --> (13 * 11) --> 143", "(15 + 3) --> (18 - 5) --> (13 * 11) --> 143", "(15 + 3) --> (18 + 11) --> (29 * 5) --> (145 + 6) --> (151 - 8) --> 143", "(15 - 3) --> (12 * 11) --> (132 + 5) --> (137 + 6) --> 143", "(15 + 3) --> (18 * 8) --> (144 + 5) --> (149 - 6) --> 143", "(15 / 3) --> (5.0 + 8) --> (13.0 * 11) --> 143", "(15 * 5) --> (75 + 3) --> (78 / 6) --> (13.0 * 11) --> 143", "(15 - 5) --> (10 * 3) --> (30 / 6) --> (5.0 + 8) --> (13.0 * 11) --> 143", "(15 - 5) --> (10 * 3) --> (30 - 8) --> (22 * 6) --> (132 + 11) --> 143", "(15 + 5) --> (20 - 6) --> (14 * 11) --> (154 - 3) --> (151 - 8) --> 143", "(15 + 5) --> (20 * 8) --> (160 - 6) --> (154 - 11) --> 143", "(15 - 6) --> (9 * 3) --> (27 * 5) --> (135 + 8) --> 143", "(15 + 6) --> (21 - 8) --> (13 * 11) --> 143", "(15 * 11) --> (165 - 3) --> (162 - 5) --> (157 - 6) --> (151 - 8) --> 143", "(15 - 11) --> (4 * 6) --> (24 + 3) --> (27 * 5) --> (135 + 8) --> 143", "(15 + 8) --> (23 * 6) --> (138 + 5) --> 143", "(3 * 5) --> (15 + 15) --> (30 / 6) --> (5.0 + 8) --> (13.0 * 11) --> 143", "(3 * 5) --> (15 + 6) --> (21 - 8) --> (13 * 11) --> 143", "(3 + 6) --> (9 * 15) --> (135 + 8) --> 143", "(3 * 6) --> (18 - 5) --> (13 * 11) --> 143", "(3 + 11) --> (14 - 5) --> (9 * 15) --> (135 + 8) --> 143", "(3 * 8) --> (24 - 5) --> (19 - 6) --> (13 * 11) --> 143", "(5 * 6) --> (30 + 15) --> (45 * 3) --> (135 + 8) --> 143", "(5 * 6) --> (30 / 15) --> (2.0 * 8) --> (16.0 - 3) --> (13.0 * 11) --> 143", "(5 + 11) --> (16 * 8) --> (128 + 15) --> 143", "(5 + 8) --> (13 * 11) --> 143", "(5 * 8) --> (40 - 11) --> (29 * 15) --> (435 - 6) --> (429 / 3) --> 143", "(6 - 3) --> (3 + 11) --> (14 - 5) --> (9 * 15) --> (135 + 8) --> 143", "(6 + 11) --> (17 + 8) --> (25 * 5) --> (125 + 15) --> (140 + 3) --> 143"]}, "target": 143, "n_ways": 29, "round": 1}, "r2": {"n": [4, 5, 8, 10, 13, 19], "how": {"197": ["(5 * 8) --> (40 - 19) --> (21 * 10) --> (210 - 13) --> 197", "(5 * 19) --> (95 - 13) --> (82 * 10) --> (820 / 4) --> (205.0 - 8) --> 197", "(5 * 19) --> (95 + 10) --> (105 * 8) --> (840 / 4) --> (210.0 - 13) --> 197", "(13 - 5) --> (8 * 8) --> (64 - 10) --> (54 * 4) --> (216 - 19) --> 197", "(13 + 4) --> (17 + 10) --> (27 * 8) --> (216 - 19) --> 197", "(13 + 4) --> (17 * 10) --> (170 + 8) --> (178 + 19) --> 197", "(4 * 8) --> (32 + 10) --> (42 * 5) --> (210 - 13) --> 197", "(4 * 10) --> (40 - 13) --> (27 * 8) --> (216 - 19) --> 197", "(4 + 19) --> (23 * 8) --> (184 + 13) --> 197", "(8 / 4) --> (2.0 + 19) --> (21.0 * 10) --> (210.0 - 13) --> 197", "(8 * 10) --> (80 - 13) --> (67 - 19) --> (48 * 4) --> (192 + 5) --> 197", "(10 / 5) --> (2.0 * 19) --> (38.0 + 8) --> (46.0 * 4) --> (184.0 + 13) --> 197", "(10 * 19) --> (190 - 5) --> (185 + 4) --> (189 + 8) --> 197", "(19 - 13) --> (6 * 4) --> (24 * 8) --> (192 + 5) --> 197", "(19 - 4) --> (15 * 13) --> (195 - 8) --> (187 + 10) --> 197"]}, "target": 197, "n_ways": 15, "round": 2}, "r3": {"n": [3, 6, 9, 10, 14, 16], "how": {"245": ["(9 + 10) --> (19 + 16) --> (35 * 3) --> (105 * 14) --> (1470 / 6) --> 245", "(9 + 16) --> (25 * 10) --> (250 + 3) --> (253 - 14) --> (239 + 6) --> 245", "(9 * 16) --> (144 + 3) --> (147 * 10) --> (1470 / 6) --> 245", "(10 * 14) --> (140 - 16) --> (124 * 6) --> (744 - 9) --> (735 / 3) --> 245", "(10 + 6) --> (16 * 16) --> (256 + 3) --> (259 - 14) --> 245", "(10 + 16) --> (26 * 9) --> (234 - 3) --> (231 + 14) --> 245", "(3 * 14) --> (42 * 6) --> (252 + 9) --> (261 - 16) --> 245", "(3 * 14) --> (42 - 16) --> (26 * 10) --> (260 - 9) --> (251 - 6) --> 245", "(6 * 16) --> (96 - 9) --> (87 - 10) --> (77 * 3) --> (231 + 14) --> 245"]}, "target": 245, "n_ways": 9, "round": 3}, "r4": {"n": [11, 14, 16, 20, 22, 23], "how": {"393": ["(14 + 22) --> (36 * 11) --> (396 + 20) --> (416 - 23) --> 393", "(14 + 23) --> (37 * 11) --> (407 - 16) --> (391 + 22) --> (413 - 20) --> 393", "(16 * 23) --> (368 + 14) --> (382 + 22) --> (404 - 11) --> 393", "(16 * 23) --> (368 + 14) --> (382 + 11) --> 393", "(16 + 23) --> (39 - 20) --> (19 * 22) --> (418 - 14) --> (404 - 11) --> 393", "(16 + 23) --> (39 * 11) --> (429 - 14) --> (415 - 22) --> 393", "(22 * 20) --> (440 / 11) --> (40.0 - 14) --> (26.0 * 16) --> (416.0 - 23) --> 393"]}, "target": 393, "n_ways": 7, "round": 4}, "r5": {"n": [5, 7, 12, 18, 20, 23], "how": {"487": ["(18 - 5) --> (13 - 12) --> (1 + 23) --> (24 * 20) --> (480 + 7) --> 487", "(18 + 23) --> (41 * 12) --> (492 - 5) --> 487", "(20 / 5) --> (4.0 + 18) --> (22.0 * 23) --> (506.0 - 7) --> (499.0 - 12) --> 487", "(7 * 12) --> (84 + 18) --> (102 * 5) --> (510 - 23) --> 487"]}, "target": 487, "n_ways": 4, "round": 5}}