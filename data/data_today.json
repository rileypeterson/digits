{"puzzleDate": "2025-08-17", "r1": {"n": [2, 4, 7, 10, 11, 13], "how": {"123": ["(11 + 10) --> (21 * 2) --> (42 - 13) --> (29 * 4) --> (116 + 7) --> 123", "(11 * 10) --> (110 + 2) --> (112 + 4) --> (116 + 7) --> 123", "(11 * 10) --> (110 + 13) --> 123", "(11 + 10) --> (21 + 13) --> (34 / 2) --> (17.0 * 7) --> (119.0 + 4) --> 123", "(11 - 10) --> (1 + 4) --> (5 * 2) --> (10 * 13) --> (130 - 7) --> 123", "(11 + 10) --> (21 + 7) --> (28 * 4) --> (112 - 2) --> (110 + 13) --> 123", "(11 + 2) --> (13 * 10) --> (130 - 7) --> 123", "(11 - 2) --> (9 * 13) --> (117 + 10) --> (127 - 4) --> 123", "(11 - 2) --> (9 + 4) --> (13 * 10) --> (130 - 7) --> 123", "(11 + 13) --> (24 * 10) --> (240 / 2) --> (120.0 - 4) --> (116.0 + 7) --> 123", "(11 * 7) --> (77 - 13) --> (64 * 4) --> (256 - 10) --> (246 / 2) --> 123", "(11 * 7) --> (77 - 4) --> (73 * 2) --> (146 - 10) --> (136 - 13) --> 123", "(10 + 2) --> (12 * 11) --> (132 - 13) --> (119 + 4) --> 123", "(10 * 2) --> (20 - 4) --> (16 * 7) --> (112 + 11) --> 123", "(10 * 2) --> (20 * 7) --> (140 - 13) --> (127 - 4) --> 123", "(10 * 13) --> (130 - 11) --> (119 + 4) --> 123", "(10 + 13) --> (23 * 11) --> (253 - 7) --> (246 * 2) --> (492 / 4) --> 123", "(10 + 13) --> (23 * 11) --> (253 - 7) --> (246 / 2) --> 123", "(10 * 13) --> (130 - 7) --> 123", "(10 + 7) --> (17 * 2) --> (34 * 4) --> (136 - 13) --> 123", "(2 * 13) --> (26 - 10) --> (16 * 7) --> (112 + 11) --> 123", "(2 + 13) --> (15 + 4) --> (19 * 7) --> (133 - 10) --> 123", "(2 * 4) --> (8 - 7) --> (1 * 11) --> (11 * 10) --> (110 + 13) --> 123", "(2 * 7) --> (14 + 11) --> (25 * 4) --> (100 + 10) --> (110 + 13) --> 123", "(2 * 7) --> (14 - 4) --> (10 * 11) --> (110 + 13) --> 123", "(4 / 2) --> (2.0 + 11) --> (13.0 * 10) --> (130.0 - 7) --> 123", "(4 + 7) --> (11 * 11) --> (121 + 2) --> 123", "(4 + 7) --> (11 * 10) --> (110 + 13) --> 123"]}, "target": 123, "n_ways": 28, "round": 1}, "r2": {"n": [3, 4, 9, 13, 15, 16], "how": {"250": ["(16 * 15) --> (240 + 13) --> (253 - 3) --> 250", "(16 * 15) --> (240 - 3) --> (237 + 4) --> (241 + 9) --> 250", "(16 + 13) --> (29 * 9) --> (261 - 15) --> (246 + 4) --> 250", "(16 * 3) --> (48 + 13) --> (61 * 4) --> (244 + 15) --> (259 - 9) --> 250", "(16 / 4) --> (4.0 + 15) --> (19.0 * 13) --> (247.0 + 3) --> 250", "(16 * 4) --> (64 + 15) --> (79 * 3) --> (237 + 13) --> 250", "(16 * 4) --> (64 + 15) --> (79 * 9) --> (711 / 3) --> (237.0 + 13) --> 250", "(15 + 3) --> (18 * 13) --> (234 + 16) --> 250", "(15 / 3) --> (5.0 + 4) --> (9.0 + 9) --> (18.0 * 13) --> (234.0 + 16) --> 250", "(15 * 4) --> (60 + 16) --> (76 * 3) --> (228 + 13) --> (241 + 9) --> 250", "(15 + 4) --> (19 * 13) --> (247 + 3) --> 250", "(15 - 9) --> (6 * 13) --> (78 * 3) --> (234 + 16) --> 250", "(13 + 3) --> (16 * 16) --> (256 - 15) --> (241 + 9) --> 250", "(4 * 9) --> (36 - 15) --> (21 - 3) --> (18 * 13) --> (234 + 16) --> 250", "(9 / 3) --> (3.0 + 15) --> (18.0 * 13) --> (234.0 + 16) --> 250"]}, "target": 250, "n_ways": 15, "round": 2}, "r3": {"n": [3, 5, 8, 10, 15, 16], "how": {"308": ["(3 * 5) --> (15 + 15) --> (30 * 10) --> (300 + 8) --> 308", "(3 * 5) --> (15 + 15) --> (30 * 10) --> (300 - 8) --> (292 + 16) --> 308", "(3 + 16) --> (19 * 15) --> (285 + 10) --> (295 + 8) --> (303 + 5) --> 308", "(10 * 8) --> (80 + 16) --> (96 * 3) --> (288 + 5) --> (293 + 15) --> 308", "(10 * 8) --> (80 - 16) --> (64 * 5) --> (320 + 3) --> (323 - 15) --> 308", "(10 + 8) --> (18 * 16) --> (288 + 5) --> (293 + 15) --> 308", "(10 * 15) --> (150 * 16) --> (2400 / 8) --> (300.0 + 3) --> (303.0 + 5) --> 308", "(5 - 3) --> (2 * 10) --> (20 * 15) --> (300 + 8) --> 308", "(5 + 16) --> (21 * 15) --> (315 + 3) --> (318 - 10) --> 308"]}, "target": 308, "n_ways": 9, "round": 3}, "r4": {"n": [9, 10, 18, 22, 24, 25], "how": {"403": ["(18 * 25) --> (450 - 10) --> (440 - 24) --> (416 + 9) --> (425 - 22) --> 403", "(18 * 25) --> (450 / 10) --> (45.0 * 9) --> (405.0 - 24) --> (381.0 + 22) --> 403", "(18 - 10) --> (8 + 9) --> (17 * 25) --> (425 - 22) --> 403", "(18 + 24) --> (42 * 9) --> (378 + 25) --> 403", "(18 * 22) --> (396 + 24) --> (420 / 10) --> (42.0 * 9) --> (378.0 + 25) --> 403", "(10 + 24) --> (34 + 9) --> (43 - 22) --> (21 * 18) --> (378 + 25) --> 403", "(24 - 9) --> (15 * 25) --> (375 + 18) --> (393 + 10) --> 403", "(9 + 22) --> (31 - 10) --> (21 * 18) --> (378 + 25) --> 403"]}, "target": 403, "n_ways": 8, "round": 4}, "r5": {"n": [8, 10, 12, 15, 17, 24], "how": {"454": ["(15 - 12) --> (3 * 17) --> (51 - 8) --> (43 * 10) --> (430 + 24) --> 454", "(24 + 10) --> (34 - 8) --> (26 * 17) --> (442 + 12) --> 454"]}, "target": 454, "n_ways": 2, "round": 5}}