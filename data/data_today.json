{"puzzleDate": "2023-10-01", "r1": {"n": [3, 6, 8, 10, 13, 15], "how": {"131": ["(3 + 13) --> (16 * 10) --> (160 - 6) --> (154 - 8) --> (146 - 15) --> 131", "(3 * 6) --> (18 * 8) --> (144 - 13) --> 131", "(3 * 8) --> (24 - 13) --> (11 * 10) --> (110 + 6) --> (116 + 15) --> 131", "(3 + 8) --> (11 * 10) --> (110 + 6) --> (116 + 15) --> 131", "(3 + 15) --> (18 * 6) --> (108 + 13) --> (121 + 10) --> 131", "(3 + 15) --> (18 * 8) --> (144 - 13) --> 131", "(13 * 10) --> (130 + 3) --> (133 + 6) --> (139 - 8) --> 131", "(13 + 10) --> (23 * 6) --> (138 + 8) --> (146 - 15) --> 131", "(13 * 10) --> (130 - 6) --> (124 - 8) --> (116 + 15) --> 131", "(6 - 3) --> (3 + 15) --> (18 * 8) --> (144 - 13) --> 131", "(6 + 10) --> (16 * 8) --> (128 + 3) --> 131", "(10 * 15) --> (150 - 13) --> (137 - 6) --> 131", "(8 + 15) --> (23 * 6) --> (138 + 3) --> (141 - 10) --> 131", "(15 / 3) --> (5.0 + 6) --> (11.0 * 10) --> (110.0 + 13) --> (123.0 + 8) --> 131", "(15 - 3) --> (12 * 10) --> (120 + 13) --> (133 + 6) --> (139 - 8) --> 131"]}, "target": 131, "n_ways": 15, "round": 1}, "r2": {"n": [6, 8, 13, 16, 18, 20], "how": {"145": ["(8 * 13) --> (104 - 6) --> (98 + 18) --> (116 * 20) --> (2320 / 16) --> 145", "(8 * 20) --> (160 + 13) --> (173 + 6) --> (179 - 16) --> (163 - 18) --> 145", "(8 * 20) --> (160 - 13) --> (147 + 16) --> (163 - 18) --> 145", "(8 + 20) --> (28 + 16) --> (44 * 18) --> (792 / 6) --> (132.0 + 13) --> 145", "(8 * 20) --> (160 + 18) --> (178 * 13) --> (2314 + 6) --> (2320 / 16) --> 145", "(8 * 16) --> (128 + 13) --> (141 - 20) --> (121 + 6) --> (127 + 18) --> 145", "(8 * 18) --> (144 - 13) --> (131 + 20) --> (151 - 6) --> 145", "(20 - 16) --> (4 + 18) --> (22 * 6) --> (132 + 13) --> 145", "(6 + 16) --> (22 * 8) --> (176 - 13) --> (163 - 18) --> 145", "(6 * 18) --> (108 + 8) --> (116 + 13) --> (129 + 16) --> 145", "(6 * 18) --> (108 + 8) --> (116 * 20) --> (2320 / 16) --> 145", "(16 / 8) --> (2.0 + 20) --> (22.0 * 6) --> (132.0 + 13) --> 145", "(16 - 8) --> (8 * 18) --> (144 - 13) --> (131 + 20) --> (151 - 6) --> 145", "(18 / 6) --> (3.0 + 16) --> (19.0 * 8) --> (152.0 + 13) --> (165.0 - 20) --> 145"]}, "target": 145, "n_ways": 14, "round": 2}, "r3": {"n": [4, 6, 9, 12, 15, 18], "how": {"251": ["(15 + 12) --> (27 * 9) --> (243 - 4) --> (239 + 18) --> (257 - 6) --> 251", "(15 * 18) --> (270 - 9) --> (261 - 4) --> (257 - 12) --> (245 + 6) --> 251", "(15 * 18) --> (270 - 9) --> (261 - 4) --> (257 - 6) --> 251", "(9 + 6) --> (15 * 15) --> (225 - 4) --> (221 + 12) --> (233 + 18) --> 251", "(9 + 6) --> (15 * 18) --> (270 - 15) --> (255 - 4) --> 251", "(12 + 18) --> (30 * 9) --> (270 - 15) --> (255 - 4) --> 251"]}, "target": 251, "n_ways": 6, "round": 3}, "r4": {"n": [5, 7, 15, 17, 19, 24], "how": {"330": ["(19 * 17) --> (323 + 5) --> (328 - 15) --> (313 + 24) --> (337 - 7) --> 330", "(19 * 17) --> (323 + 7) --> 330", "(17 + 5) --> (22 * 15) --> 330", "(17 + 24) --> (41 - 19) --> (22 * 15) --> 330", "(5 + 24) --> (29 - 7) --> (22 * 15) --> 330", "(24 - 5) --> (19 * 17) --> (323 + 7) --> 330"]}, "target": 330, "n_ways": 6, "round": 4}, "r5": {"n": [5, 9, 11, 15, 17, 23], "how": {"548": ["(23 + 9) --> (32 * 17) --> (544 + 15) --> (559 - 11) --> 548"]}, "target": 548, "n_ways": 1, "round": 5}}