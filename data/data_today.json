{"puzzleDate": "2023-12-04", "r1": {"n": [2, 5, 7, 9, 12, 13], "how": {"134": ["(9 - 5) --> (4 + 7) --> (11 * 12) --> (132 + 2) --> 134", "(9 * 5) --> (45 + 12) --> (57 * 2) --> (114 + 7) --> (121 + 13) --> 134", "(9 * 7) --> (63 + 5) --> (68 + 12) --> (80 - 13) --> (67 * 2) --> 134", "(9 + 7) --> (16 * 5) --> (80 - 13) --> (67 * 2) --> 134", "(9 * 7) --> (63 - 12) --> (51 * 5) --> (255 + 13) --> (268 / 2) --> 134", "(9 + 12) --> (21 * 7) --> (147 - 13) --> 134", "(9 + 12) --> (21 * 13) --> (273 - 5) --> (268 / 2) --> 134", "(9 * 13) --> (117 + 5) --> (122 + 12) --> 134", "(9 * 13) --> (117 + 7) --> (124 + 12) --> (136 - 2) --> 134", "(9 + 13) --> (22 * 12) --> (264 / 2) --> (132.0 - 5) --> (127.0 + 7) --> 134", "(5 * 12) --> (60 + 7) --> (67 * 2) --> 134", "(5 + 12) --> (17 * 7) --> (119 + 2) --> (121 + 13) --> 134", "(5 * 12) --> (60 / 2) --> (30.0 - 9) --> (21.0 * 7) --> (147.0 - 13) --> 134", "(5 + 13) --> (18 - 7) --> (11 * 12) --> (132 + 2) --> 134", "(7 * 12) --> (84 - 9) --> (75 + 5) --> (80 - 13) --> (67 * 2) --> 134", "(7 + 13) --> (20 * 12) --> (240 / 2) --> (120.0 + 9) --> (129.0 + 5) --> 134", "(12 + 2) --> (14 * 9) --> (126 - 5) --> (121 + 13) --> 134", "(12 - 2) --> (10 * 13) --> (130 + 9) --> (139 - 5) --> 134", "(13 - 7) --> (6 * 12) --> (72 - 5) --> (67 * 2) --> 134", "(13 - 2) --> (11 * 12) --> (132 + 9) --> (141 - 7) --> 134", "(13 - 2) --> (11 * 12) --> (132 - 5) --> (127 + 7) --> 134"]}, "target": 134, "n_ways": 21, "round": 1}, "r2": {"n": [4, 7, 10, 12, 16, 19], "how": {"238": ["(10 + 16) --> (26 + 12) --> (38 - 4) --> (34 * 7) --> 238", "(10 + 16) --> (26 - 4) --> (22 * 12) --> (264 - 19) --> (245 - 7) --> 238", "(10 * 12) --> (120 + 16) --> (136 / 4) --> (34.0 * 7) --> 238", "(10 + 4) --> (14 * 19) --> (266 - 16) --> (250 - 12) --> 238", "(10 + 4) --> (14 * 16) --> (224 + 19) --> (243 - 12) --> (231 + 7) --> 238", "(19 - 16) --> (3 * 10) --> (30 + 4) --> (34 * 7) --> 238", "(19 - 16) --> (3 * 12) --> (36 * 7) --> (252 - 10) --> (242 - 4) --> 238", "(19 - 16) --> (3 * 4) --> (12 + 10) --> (22 + 12) --> (34 * 7) --> 238", "(19 - 16) --> (3 * 7) --> (21 + 4) --> (25 * 10) --> (250 - 12) --> 238", "(19 * 12) --> (228 + 10) --> 238", "(19 * 12) --> (228 - 10) --> (218 + 16) --> (234 + 4) --> 238", "(19 - 4) --> (15 * 12) --> (180 / 10) --> (18.0 + 16) --> (34.0 * 7) --> 238", "(19 - 7) --> (12 / 4) --> (3.0 + 16) --> (19.0 * 12) --> (228.0 + 10) --> 238", "(16 + 4) --> (20 * 10) --> (200 + 19) --> (219 + 12) --> (231 + 7) --> 238", "(16 - 4) --> (12 * 19) --> (228 + 10) --> 238", "(12 - 10) --> (2 * 19) --> (38 - 4) --> (34 * 7) --> 238"]}, "target": 238, "n_ways": 16, "round": 2}, "r3": {"n": [3, 5, 11, 13, 18, 20], "how": {"292": ["(13 + 3) --> (16 * 18) --> (288 + 20) --> (308 - 11) --> (297 - 5) --> 292", "(13 * 20) --> (260 + 18) --> (278 + 3) --> (281 + 11) --> 292", "(18 - 13) --> (5 * 11) --> (55 * 5) --> (275 - 3) --> (272 + 20) --> 292", "(18 - 3) --> (15 * 20) --> (300 - 13) --> (287 + 5) --> 292", "(18 * 3) --> (54 * 5) --> (270 + 13) --> (283 + 20) --> (303 - 11) --> 292", "(18 + 11) --> (29 - 5) --> (24 * 13) --> (312 - 20) --> 292", "(3 + 20) --> (23 * 13) --> (299 - 18) --> (281 + 11) --> 292", "(20 - 13) --> (7 * 11) --> (77 - 18) --> (59 * 5) --> (295 - 3) --> 292", "(20 / 5) --> (4.0 + 13) --> (17.0 * 18) --> (306.0 - 3) --> (303.0 - 11) --> 292", "(11 * 5) --> (55 + 18) --> (73 + 20) --> (93 * 3) --> (279 + 13) --> 292"]}, "target": 292, "n_ways": 10, "round": 3}, "r4": {"n": [8, 10, 11, 13, 15, 25], "how": {"383": ["(15 * 25) --> (375 - 13) --> (362 + 11) --> (373 + 10) --> 383", "(15 + 25) --> (40 - 11) --> (29 + 8) --> (37 * 10) --> (370 + 13) --> 383", "(15 * 25) --> (375 + 8) --> 383", "(25 + 13) --> (38 * 10) --> (380 + 11) --> (391 - 8) --> 383", "(25 + 11) --> (36 * 10) --> (360 + 15) --> (375 + 8) --> 383", "(25 + 10) --> (35 * 15) --> (525 * 8) --> (4200 + 13) --> (4213 / 11) --> 383", "(11 - 10) --> (1 * 15) --> (15 * 25) --> (375 + 8) --> 383"]}, "target": 383, "n_ways": 7, "round": 4}, "r5": {"n": [5, 10, 14, 18, 22, 25], "how": {"449": ["(25 + 10) --> (35 - 14) --> (21 * 22) --> (462 - 18) --> (444 + 5) --> 449", "(25 + 18) --> (43 * 10) --> (430 + 5) --> (435 + 14) --> 449", "(25 * 18) --> (450 - 10) --> (440 - 5) --> (435 + 14) --> 449", "(10 + 14) --> (24 * 18) --> (432 - 5) --> (427 + 22) --> 449", "(22 - 5) --> (17 * 25) --> (425 + 10) --> (435 + 14) --> 449"]}, "target": 449, "n_ways": 5, "round": 5}}