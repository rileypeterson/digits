{"puzzleDate": "2023-12-13", "r1": {"n": [2, 3, 6, 8, 11, 12], "how": {"117": ["(3 + 6) --> (9 * 11) --> (99 - 2) --> (97 + 12) --> (109 + 8) --> 117", "(3 * 6) --> (18 - 2) --> (16 * 8) --> (128 - 11) --> 117", "(3 + 6) --> (9 * 12) --> (108 + 11) --> (119 - 2) --> 117", "(3 * 11) --> (33 + 6) --> (39 * 2) --> (78 * 12) --> (936 / 8) --> 117", "(3 * 11) --> (33 * 8) --> (264 - 6) --> (258 / 2) --> (129.0 - 12) --> 117", "(3 * 11) --> (33 + 8) --> (41 * 6) --> (246 - 12) --> (234 / 2) --> 117", "(3 + 8) --> (11 * 11) --> (121 - 6) --> (115 + 2) --> 117", "(3 * 8) --> (24 + 11) --> (35 * 6) --> (210 / 2) --> (105.0 + 12) --> 117", "(3 + 8) --> (11 * 12) --> (132 - 6) --> (126 - 11) --> (115 + 2) --> 117", "(6 / 3) --> (2.0 + 2) --> (4.0 + 12) --> (16.0 * 8) --> (128.0 - 11) --> 117", "(6 * 11) --> (66 * 2) --> (132 - 3) --> (129 - 12) --> 117", "(6 + 11) --> (17 + 2) --> (19 + 12) --> (31 + 8) --> (39 * 3) --> 117", "(6 + 11) --> (17 - 2) --> (15 * 8) --> (120 - 3) --> 117", "(6 * 11) --> (66 + 12) --> (78 * 3) --> (234 / 2) --> 117", "(6 / 2) --> (3.0 + 12) --> (15.0 * 8) --> (120.0 - 3) --> 117", "(6 - 2) --> (4 + 12) --> (16 * 8) --> (128 - 11) --> 117", "(6 - 2) --> (4 + 8) --> (12 * 11) --> (132 - 3) --> (129 - 12) --> 117", "(6 - 2) --> (4 * 8) --> (32 + 11) --> (43 * 3) --> (129 - 12) --> 117", "(6 + 12) --> (18 * 2) --> (36 + 11) --> (47 - 8) --> (39 * 3) --> 117", "(6 * 12) --> (72 - 8) --> (64 * 2) --> (128 - 11) --> 117", "(6 * 8) --> (48 - 11) --> (37 + 2) --> (39 * 3) --> 117", "(6 + 8) --> (14 * 2) --> (28 + 11) --> (39 * 3) --> 117", "(6 * 8) --> (48 + 12) --> (60 * 2) --> (120 - 3) --> 117", "(11 + 2) --> (13 * 6) --> (78 * 12) --> (936 / 8) --> 117", "(11 + 8) --> (19 * 6) --> (114 + 3) --> 117", "(11 + 8) --> (19 * 12) --> (228 + 6) --> (234 / 2) --> 117", "(11 + 8) --> (19 * 12) --> (228 / 2) --> (114.0 + 3) --> 117", "(2 + 12) --> (14 * 8) --> (112 - 6) --> (106 + 11) --> 117", "(2 * 8) --> (16 - 6) --> (10 * 12) --> (120 - 3) --> 117", "(2 * 8) --> (16 + 11) --> (27 + 12) --> (39 * 3) --> 117", "(2 + 8) --> (10 * 12) --> (120 + 3) --> (123 - 6) --> 117", "(2 + 8) --> (10 * 12) --> (120 - 3) --> 117", "(12 - 6) --> (6 * 3) --> (18 - 2) --> (16 * 8) --> (128 - 11) --> 117", "(12 + 8) --> (20 * 6) --> (120 - 3) --> 117"]}, "target": 117, "n_ways": 34, "round": 1}, "r2": {"n": [5, 8, 9, 12, 17, 20], "how": {"159": ["(20 * 9) --> (180 + 8) --> (188 - 17) --> (171 - 12) --> 159", "(20 + 9) --> (29 - 12) --> (17 + 5) --> (22 * 8) --> (176 - 17) --> 159", "(20 - 17) --> (3 * 8) --> (24 - 5) --> (19 * 9) --> (171 - 12) --> 159", "(20 * 12) --> (240 / 8) --> (30.0 * 5) --> (150.0 + 9) --> 159", "(20 + 12) --> (32 * 5) --> (160 - 9) --> (151 + 8) --> 159", "(20 / 5) --> (4.0 + 17) --> (21.0 * 8) --> (168.0 - 9) --> 159", "(9 + 5) --> (14 * 12) --> (168 + 8) --> (176 - 17) --> 159", "(8 * 17) --> (136 + 20) --> (156 - 9) --> (147 + 12) --> 159", "(8 * 5) --> (40 / 20) --> (2.0 + 17) --> (19.0 * 9) --> (171.0 - 12) --> 159", "(8 + 5) --> (13 * 12) --> (156 + 20) --> (176 - 17) --> 159", "(17 - 9) --> (8 * 20) --> (160 - 8) --> (152 + 12) --> (164 - 5) --> 159", "(17 - 8) --> (9 * 20) --> (180 - 9) --> (171 - 12) --> 159", "(17 - 8) --> (9 + 5) --> (14 * 12) --> (168 - 9) --> 159", "(17 - 12) --> (5 / 5) --> (1.0 + 20) --> (21.0 * 8) --> (168.0 - 9) --> 159", "(12 + 5) --> (17 / 17) --> (1.0 + 20) --> (21.0 * 8) --> (168.0 - 9) --> 159"]}, "target": 159, "n_ways": 15, "round": 2}, "r3": {"n": [4, 8, 10, 12, 15, 19], "how": {"241": ["(8 * 12) --> (96 * 10) --> (960 + 19) --> (979 - 15) --> (964 / 4) --> 241", "(8 / 4) --> (2.0 + 12) --> (14.0 * 19) --> (266.0 - 10) --> (256.0 - 15) --> 241", "(8 - 4) --> (4 + 10) --> (14 * 15) --> (210 + 12) --> (222 + 19) --> 241", "(8 * 10) --> (80 - 19) --> (61 * 4) --> (244 + 12) --> (256 - 15) --> 241", "(8 * 10) --> (80 - 15) --> (65 * 4) --> (260 - 19) --> 241", "(12 - 8) --> (4 + 19) --> (23 * 10) --> (230 - 4) --> (226 + 15) --> 241", "(12 / 4) --> (3.0 + 8) --> (11.0 + 15) --> (26.0 * 10) --> (260.0 - 19) --> 241", "(12 * 19) --> (228 + 8) --> (236 - 10) --> (226 + 15) --> 241", "(4 + 10) --> (14 * 15) --> (210 + 12) --> (222 + 19) --> 241"]}, "target": 241, "n_ways": 9, "round": 3}, "r4": {"n": [5, 6, 9, 11, 18, 19], "how": {"403": ["(11 + 9) --> (20 * 19) --> (380 + 5) --> (385 + 18) --> 403", "(11 * 5) --> (55 + 9) --> (64 * 6) --> (384 + 19) --> 403", "(11 * 5) --> (55 - 9) --> (46 + 18) --> (64 * 6) --> (384 + 19) --> 403", "(9 - 5) --> (4 + 19) --> (23 * 18) --> (414 - 11) --> 403", "(9 * 6) --> (54 - 19) --> (35 * 11) --> (385 + 18) --> 403", "(19 + 6) --> (25 + 18) --> (43 * 9) --> (387 + 11) --> (398 + 5) --> 403", "(19 + 18) --> (37 * 11) --> (407 - 9) --> (398 + 5) --> 403"]}, "target": 403, "n_ways": 7, "round": 4}, "r5": {"n": [6, 8, 9, 11, 17, 21], "how": {"466": ["(8 * 9) --> (72 / 6) --> (12.0 + 11) --> (23.0 * 21) --> (483.0 - 17) --> 466", "(8 + 9) --> (17 + 6) --> (23 * 21) --> (483 - 17) --> 466", "(11 - 9) --> (2 * 21) --> (42 + 17) --> (59 * 8) --> (472 - 6) --> 466", "(17 + 6) --> (23 * 21) --> (483 - 8) --> (475 - 9) --> 466"]}, "target": 466, "n_ways": 4, "round": 5}}