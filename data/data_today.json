{"puzzleDate": "2025-09-11", "r1": {"n": [5, 6, 8, 10, 13, 15], "how": {"109": ["(5 + 8) --> (13 * 10) --> (130 - 15) --> (115 - 6) --> 109", "(5 + 10) --> (15 - 6) --> (9 * 13) --> (117 - 8) --> 109", "(5 + 15) --> (20 * 8) --> (160 / 10) --> (16.0 * 6) --> (96.0 + 13) --> 109", "(5 + 15) --> (20 - 6) --> (14 * 8) --> (112 + 10) --> (122 - 13) --> 109", "(8 * 10) --> (80 - 5) --> (75 + 15) --> (90 + 13) --> (103 + 6) --> 109", "(8 + 10) --> (18 * 5) --> (90 + 13) --> (103 + 6) --> 109", "(8 * 10) --> (80 / 5) --> (16.0 * 6) --> (96.0 + 13) --> 109", "(8 + 15) --> (23 * 5) --> (115 - 6) --> 109", "(8 * 15) --> (120 - 5) --> (115 - 6) --> 109", "(8 * 13) --> (104 + 5) --> 109", "(8 * 13) --> (104 - 5) --> (99 + 10) --> 109", "(8 + 13) --> (21 * 5) --> (105 + 10) --> (115 - 6) --> 109", "(8 * 13) --> (104 - 10) --> (94 + 15) --> 109", "(10 / 5) --> (2.0 + 8) --> (10.0 * 13) --> (130.0 - 15) --> (115.0 - 6) --> 109", "(10 - 8) --> (2 * 5) --> (10 * 13) --> (130 - 15) --> (115 - 6) --> 109", "(10 + 13) --> (23 * 5) --> (115 - 6) --> 109", "(10 * 13) --> (130 - 15) --> (115 - 6) --> 109", "(10 - 6) --> (4 * 8) --> (32 * 15) --> (480 / 5) --> (96.0 + 13) --> 109", "(10 * 6) --> (60 - 15) --> (45 / 5) --> (9.0 * 13) --> (117.0 - 8) --> 109", "(10 + 6) --> (16 - 15) --> (1 * 8) --> (8 * 13) --> (104 + 5) --> 109", "(15 / 5) --> (3.0 + 6) --> (9.0 * 13) --> (117.0 - 8) --> 109", "(15 * 13) --> (195 * 6) --> (1170 / 10) --> (117.0 - 8) --> 109", "(15 - 6) --> (9 * 13) --> (117 - 8) --> 109", "(6 - 5) --> (1 * 8) --> (8 * 13) --> (104 - 10) --> (94 + 15) --> 109"]}, "target": 109, "n_ways": 24, "round": 1}, "r2": {"n": [3, 4, 6, 15, 19, 20], "how": {"178": ["(6 + 4) --> (10 * 20) --> (200 - 3) --> (197 - 19) --> 178", "(6 + 4) --> (10 * 19) --> (190 + 3) --> (193 - 15) --> 178", "(6 + 3) --> (9 * 15) --> (135 + 4) --> (139 + 20) --> (159 + 19) --> 178", "(4 + 20) --> (24 * 6) --> (144 + 19) --> (163 + 15) --> 178", "(4 * 20) --> (80 * 15) --> (1200 / 6) --> (200.0 - 3) --> (197.0 - 19) --> 178", "(4 * 15) --> (60 + 6) --> (66 * 3) --> (198 - 20) --> 178", "(4 * 15) --> (60 + 19) --> (79 * 6) --> (474 / 3) --> (158.0 + 20) --> 178", "(20 - 6) --> (14 - 4) --> (10 * 19) --> (190 + 3) --> (193 - 15) --> 178", "(3 + 19) --> (22 - 4) --> (18 + 15) --> (33 * 6) --> (198 - 20) --> 178", "(3 * 15) --> (45 + 20) --> (65 - 19) --> (46 * 4) --> (184 - 6) --> 178", "(19 - 6) --> (13 * 15) --> (195 - 20) --> (175 + 3) --> 178", "(15 - 4) --> (11 * 6) --> (66 * 3) --> (198 - 20) --> 178"]}, "target": 178, "n_ways": 12, "round": 2}, "r3": {"n": [4, 5, 7, 14, 17, 18], "how": {"243": ["(5 * 18) --> (90 - 17) --> (73 - 14) --> (59 * 4) --> (236 + 7) --> 243", "(5 + 7) --> (12 * 18) --> (216 + 17) --> (233 - 4) --> (229 + 14) --> 243", "(5 * 7) --> (35 + 18) --> (53 * 4) --> (212 + 17) --> (229 + 14) --> 243", "(18 - 4) --> (14 * 17) --> (238 + 5) --> 243", "(18 * 14) --> (252 + 5) --> (257 - 17) --> (240 - 4) --> (236 + 7) --> 243", "(18 * 14) --> (252 - 5) --> (247 - 4) --> 243", "(17 - 4) --> (13 * 18) --> (234 - 5) --> (229 + 14) --> 243", "(17 * 4) --> (68 - 18) --> (50 * 5) --> (250 - 7) --> 243", "(17 * 14) --> (238 + 5) --> 243", "(17 - 14) --> (3 * 18) --> (54 + 5) --> (59 * 4) --> (236 + 7) --> 243", "(17 - 14) --> (3 * 18) --> (54 - 4) --> (50 * 5) --> (250 - 7) --> 243", "(4 * 7) --> (28 + 17) --> (45 * 5) --> (225 + 18) --> 243", "(4 * 7) --> (28 - 14) --> (14 * 17) --> (238 + 5) --> 243"]}, "target": 243, "n_ways": 13, "round": 3}, "r4": {"n": [6, 8, 10, 17, 22, 25], "how": {"426": ["(22 - 10) --> (12 * 8) --> (96 - 25) --> (71 * 6) --> 426", "(22 - 10) --> (12 + 25) --> (37 + 17) --> (54 * 8) --> (432 - 6) --> 426", "(10 * 17) --> (170 - 6) --> (164 * 22) --> (3608 / 8) --> (451.0 - 25) --> 426", "(25 - 6) --> (19 * 22) --> (418 + 8) --> 426", "(25 - 17) --> (8 * 8) --> (64 - 22) --> (42 * 10) --> (420 + 6) --> 426", "(25 + 17) --> (42 * 10) --> (420 + 6) --> 426"]}, "target": 426, "n_ways": 6, "round": 4}, "r5": {"n": [5, 9, 10, 12, 19, 23], "how": {"572": ["(19 + 9) --> (28 + 23) --> (51 + 5) --> (56 * 10) --> (560 + 12) --> 572", "(19 - 10) --> (9 * 5) --> (45 * 12) --> (540 + 9) --> (549 + 23) --> 572", "(23 * 12) --> (276 + 19) --> (295 - 9) --> (286 * 10) --> (2860 / 5) --> 572", "(5 * 12) --> (60 * 10) --> (600 - 19) --> (581 - 9) --> 572"]}, "target": 572, "n_ways": 4, "round": 5}}