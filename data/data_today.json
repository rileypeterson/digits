{"puzzleDate": "2024-08-26", "r1": {"n": [3, 8, 10, 12, 13, 15], "how": {"121": ["(10 + 8) --> (18 - 15) --> (3 * 12) --> (36 * 3) --> (108 + 13) --> 121", "(10 * 12) --> (120 - 15) --> (105 + 13) --> (118 + 3) --> 121", "(10 + 15) --> (25 * 12) --> (300 / 3) --> (100.0 + 8) --> (108.0 + 13) --> 121", "(10 * 13) --> (130 - 12) --> (118 + 3) --> 121", "(10 * 3) --> (30 - 15) --> (15 * 8) --> (120 - 12) --> (108 + 13) --> 121", "(10 * 3) --> (30 - 13) --> (17 * 8) --> (136 - 15) --> 121", "(8 * 12) --> (96 + 10) --> (106 + 15) --> 121", "(8 * 12) --> (96 + 15) --> (111 + 13) --> (124 - 3) --> 121", "(8 * 12) --> (96 * 15) --> (1440 + 3) --> (1443 / 13) --> (111.0 + 10) --> 121", "(8 * 15) --> (120 + 10) --> (130 - 12) --> (118 + 3) --> 121", "(8 * 15) --> (120 / 10) --> (12.0 - 3) --> (9.0 * 12) --> (108.0 + 13) --> 121", "(8 * 15) --> (120 - 12) --> (108 + 13) --> 121", "(8 * 13) --> (104 - 10) --> (94 + 12) --> (106 + 15) --> 121", "(8 * 3) --> (24 - 15) --> (9 * 12) --> (108 + 13) --> 121", "(8 + 3) --> (11 * 13) --> (143 - 10) --> (133 - 12) --> 121", "(12 / 3) --> (4.0 + 13) --> (17.0 * 8) --> (136.0 - 15) --> 121", "(15 - 12) --> (3 + 13) --> (16 * 8) --> (128 - 10) --> (118 + 3) --> 121", "(15 / 3) --> (5.0 + 10) --> (15.0 * 8) --> (120.0 - 12) --> (108.0 + 13) --> 121", "(15 - 3) --> (12 * 10) --> (120 - 12) --> (108 + 13) --> 121", "(15 + 3) --> (18 * 8) --> (144 - 10) --> (134 - 13) --> 121", "(15 - 3) --> (12 * 12) --> (144 - 10) --> (134 - 13) --> 121", "(13 - 8) --> (5 + 3) --> (8 * 12) --> (96 + 10) --> (106 + 15) --> 121", "(13 * 3) --> (39 - 10) --> (29 - 12) --> (17 * 8) --> (136 - 15) --> 121"]}, "target": 121, "n_ways": 23, "round": 1}, "r2": {"n": [5, 9, 12, 16, 17, 20], "how": {"179": ["(17 * 16) --> (272 * 9) --> (2448 / 12) --> (204.0 - 20) --> (184.0 - 5) --> 179", "(17 * 12) --> (204 - 16) --> (188 - 9) --> 179", "(17 * 12) --> (204 - 20) --> (184 - 5) --> 179", "(16 * 12) --> (192 - 17) --> (175 + 9) --> (184 - 5) --> 179", "(16 - 5) --> (11 * 17) --> (187 - 20) --> (167 + 12) --> 179", "(9 * 20) --> (180 - 17) --> (163 + 16) --> 179", "(9 * 20) --> (180 + 16) --> (196 - 12) --> (184 - 5) --> 179", "(20 - 17) --> (3 * 9) --> (27 + 12) --> (39 * 5) --> (195 - 16) --> 179", "(20 + 12) --> (32 * 17) --> (544 / 16) --> (34.0 * 5) --> (170.0 + 9) --> 179", "(20 * 12) --> (240 / 16) --> (15.0 - 5) --> (10.0 * 17) --> (170.0 + 9) --> 179", "(20 / 5) --> (4.0 + 9) --> (13.0 * 16) --> (208.0 - 17) --> (191.0 - 12) --> 179"]}, "target": 179, "n_ways": 11, "round": 2}, "r3": {"n": [3, 4, 8, 10, 13, 14], "how": {"249": ["(14 - 4) --> (10 * 8) --> (80 + 13) --> (93 - 10) --> (83 * 3) --> 249", "(14 * 4) --> (56 / 8) --> (7.0 * 10) --> (70.0 + 13) --> (83.0 * 3) --> 249", "(14 + 4) --> (18 * 13) --> (234 + 8) --> (242 + 10) --> (252 - 3) --> 249", "(14 - 4) --> (10 + 10) --> (20 * 13) --> (260 - 8) --> (252 - 3) --> 249", "(14 + 10) --> (24 * 4) --> (96 - 13) --> (83 * 3) --> 249", "(8 * 13) --> (104 / 4) --> (26.0 * 10) --> (260.0 - 14) --> (246.0 + 3) --> 249", "(8 * 13) --> (104 - 3) --> (101 * 10) --> (1010 - 14) --> (996 / 4) --> 249", "(8 * 10) --> (80 - 14) --> (66 + 13) --> (79 + 4) --> (83 * 3) --> 249", "(8 + 10) --> (18 * 14) --> (252 - 3) --> 249", "(8 * 10) --> (80 * 3) --> (240 + 13) --> (253 - 4) --> 249", "(13 + 4) --> (17 * 14) --> (238 + 8) --> (246 + 3) --> 249"]}, "target": 249, "n_ways": 11, "round": 3}, "r4": {"n": [4, 5, 9, 13, 16, 23], "how": {"334": ["(23 + 16) --> (39 * 9) --> (351 - 4) --> (347 - 13) --> 334", "(23 - 16) --> (7 * 5) --> (35 - 9) --> (26 * 13) --> (338 - 4) --> 334", "(16 * 4) --> (64 * 5) --> (320 + 23) --> (343 - 9) --> 334", "(16 + 4) --> (20 + 5) --> (25 * 13) --> (325 + 9) --> 334", "(16 - 13) --> (3 * 23) --> (69 - 4) --> (65 * 5) --> (325 + 9) --> 334", "(4 * 5) --> (20 + 16) --> (36 * 9) --> (324 + 23) --> (347 - 13) --> 334", "(9 + 5) --> (14 * 23) --> (322 + 16) --> (338 - 4) --> 334", "(9 + 13) --> (22 * 16) --> (352 - 23) --> (329 + 5) --> 334"]}, "target": 334, "n_ways": 8, "round": 4}, "r5": {"n": [9, 13, 16, 21, 23, 24], "how": {"485": ["(21 * 24) --> (504 - 9) --> (495 + 13) --> (508 - 23) --> 485", "(21 + 24) --> (45 + 16) --> (61 - 23) --> (38 * 13) --> (494 - 9) --> 485", "(9 + 13) --> (22 * 21) --> (462 + 23) --> 485", "(9 + 13) --> (22 * 23) --> (506 - 21) --> 485"]}, "target": 485, "n_ways": 4, "round": 5}}