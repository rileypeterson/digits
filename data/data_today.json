{"puzzleDate": "2024-10-31", "r1": {"n": [2, 3, 6, 10, 12, 13], "how": {"125": ["(12 + 3) --> (15 - 6) --> (9 * 13) --> (117 + 10) --> (127 - 2) --> 125", "(12 * 3) --> (36 + 10) --> (46 * 6) --> (276 / 2) --> (138.0 - 13) --> 125", "(12 + 3) --> (15 + 2) --> (17 * 6) --> (102 + 10) --> (112 + 13) --> 125", "(12 - 3) --> (9 * 13) --> (117 + 6) --> (123 + 2) --> 125", "(12 - 3) --> (9 * 13) --> (117 + 10) --> (127 - 2) --> 125", "(12 * 6) --> (72 - 3) --> (69 * 2) --> (138 - 13) --> 125", "(12 + 6) --> (18 * 2) --> (36 + 10) --> (46 * 3) --> (138 - 13) --> 125", "(12 + 6) --> (18 * 13) --> (234 + 10) --> (244 / 2) --> (122.0 + 3) --> 125", "(12 * 6) --> (72 - 13) --> (59 * 2) --> (118 - 3) --> (115 + 10) --> 125", "(12 * 10) --> (120 - 3) --> (117 + 6) --> (123 + 2) --> 125", "(12 * 10) --> (120 + 3) --> (123 + 2) --> 125", "(12 * 10) --> (120 - 6) --> (114 - 2) --> (112 + 13) --> 125", "(12 / 2) --> (6.0 * 13) --> (78.0 - 3) --> (75.0 * 10) --> (750.0 / 6) --> 125", "(12 - 2) --> (10 + 13) --> (23 * 6) --> (138 - 3) --> (135 - 10) --> 125", "(12 + 13) --> (25 * 3) --> (75 * 10) --> (750 / 6) --> 125", "(12 + 13) --> (25 * 10) --> (250 + 6) --> (256 / 2) --> (128.0 - 3) --> 125", "(12 + 13) --> (25 * 10) --> (250 / 2) --> 125", "(3 + 6) --> (9 * 13) --> (117 + 10) --> (127 - 2) --> 125", "(6 / 3) --> (2.0 + 12) --> (14.0 * 10) --> (140.0 - 2) --> (138.0 - 13) --> 125", "(6 * 10) --> (60 - 12) --> (48 - 2) --> (46 * 3) --> (138 - 13) --> 125", "(6 * 13) --> (78 - 3) --> (75 * 10) --> (750 * 2) --> (1500 / 12) --> 125", "(10 * 2) --> (20 + 3) --> (23 * 6) --> (138 - 13) --> 125", "(10 - 2) --> (8 * 13) --> (104 + 12) --> (116 + 3) --> (119 + 6) --> 125", "(10 * 13) --> (130 + 3) --> (133 - 6) --> (127 - 2) --> 125", "(10 * 13) --> (130 - 3) --> (127 - 2) --> 125", "(13 - 2) --> (11 * 10) --> (110 + 12) --> (122 + 3) --> 125"]}, "target": 125, "n_ways": 26, "round": 1}, "r2": {"n": [5, 7, 10, 15, 16, 19], "how": {"214": ["(19 - 5) --> (14 * 16) --> (224 - 10) --> 214", "(19 * 10) --> (190 + 16) --> (206 - 7) --> (199 + 15) --> 214", "(19 + 10) --> (29 * 7) --> (203 + 16) --> (219 - 5) --> 214", "(19 - 15) --> (4 * 7) --> (28 - 5) --> (23 * 10) --> (230 - 16) --> 214", "(16 - 5) --> (11 * 19) --> (209 - 10) --> (199 + 15) --> 214", "(16 + 5) --> (21 * 10) --> (210 + 19) --> (229 - 15) --> 214", "(16 - 5) --> (11 + 7) --> (18 * 10) --> (180 + 19) --> (199 + 15) --> 214", "(16 + 5) --> (21 / 7) --> (3.0 + 10) --> (13.0 * 15) --> (195.0 + 19) --> 214", "(16 - 10) --> (6 * 5) --> (30 * 7) --> (210 + 19) --> (229 - 15) --> 214", "(16 * 15) --> (240 - 19) --> (221 - 7) --> 214", "(5 + 10) --> (15 * 16) --> (240 - 19) --> (221 - 7) --> 214"]}, "target": 214, "n_ways": 11, "round": 2}, "r3": {"n": [5, 7, 13, 16, 18, 20], "how": {"246": ["(13 + 16) --> (29 * 7) --> (203 + 5) --> (208 + 20) --> (228 + 18) --> 246", "(13 * 16) --> (208 + 20) --> (228 + 18) --> 246", "(13 * 16) --> (208 - 18) --> (190 / 5) --> (38.0 * 7) --> (266.0 - 20) --> 246", "(13 * 20) --> (260 - 5) --> (255 + 16) --> (271 - 7) --> (264 - 18) --> 246", "(13 * 20) --> (260 - 5) --> (255 - 16) --> (239 + 7) --> 246", "(13 + 20) --> (33 + 18) --> (51 * 5) --> (255 - 16) --> (239 + 7) --> 246", "(13 * 18) --> (234 + 5) --> (239 + 7) --> 246", "(16 + 18) --> (34 * 7) --> (238 + 13) --> (251 - 5) --> 246", "(20 - 18) --> (2 * 16) --> (32 + 5) --> (37 * 7) --> (259 - 13) --> 246"]}, "target": 246, "n_ways": 9, "round": 3}, "r4": {"n": [7, 9, 16, 18, 23, 24], "how": {"406": ["(9 + 23) --> (32 - 16) --> (16 + 24) --> (40 + 18) --> (58 * 7) --> 406", "(9 + 23) --> (32 - 7) --> (25 * 16) --> (400 + 24) --> (424 - 18) --> 406", "(23 * 18) --> (414 - 9) --> (405 - 16) --> (389 + 24) --> (413 - 7) --> 406", "(23 * 18) --> (414 + 9) --> (423 - 24) --> (399 + 7) --> 406", "(23 * 18) --> (414 + 16) --> (430 - 24) --> 406", "(16 + 24) --> (40 + 18) --> (58 * 7) --> 406"]}, "target": 406, "n_ways": 6, "round": 4}, "r5": {"n": [6, 10, 11, 16, 22, 25], "how": {"587": ["(22 * 25) --> (550 + 16) --> (566 + 10) --> (576 + 11) --> 587", "(22 + 25) --> (47 - 10) --> (37 * 16) --> (592 + 6) --> (598 - 11) --> 587", "(25 - 22) --> (3 * 10) --> (30 + 6) --> (36 * 16) --> (576 + 11) --> 587", "(25 + 10) --> (35 * 16) --> (560 + 22) --> (582 - 6) --> (576 + 11) --> 587"]}, "target": 587, "n_ways": 4, "round": 5}}