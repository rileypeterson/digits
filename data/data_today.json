{"puzzleDate": "2025-05-18", "r1": {"n": [4, 5, 7, 9, 12, 14], "how": {"151": ["(7 + 9) --> (16 - 4) --> (12 * 14) --> (168 - 12) --> (156 - 5) --> 151", "(7 * 5) --> (35 + 9) --> (44 * 14) --> (616 - 12) --> (604 / 4) --> 151", "(7 + 5) --> (12 * 14) --> (168 - 12) --> (156 - 9) --> (147 + 4) --> 151", "(7 - 5) --> (2 * 14) --> (28 + 12) --> (40 * 4) --> (160 - 9) --> 151", "(7 * 5) --> (35 * 4) --> (140 - 12) --> (128 + 9) --> (137 + 14) --> 151", "(7 + 4) --> (11 * 12) --> (132 + 5) --> (137 + 14) --> 151", "(7 - 4) --> (3 * 9) --> (27 - 14) --> (13 * 12) --> (156 - 5) --> 151", "(7 + 4) --> (11 * 14) --> (154 - 12) --> (142 + 9) --> 151", "(12 + 9) --> (21 * 7) --> (147 + 4) --> 151", "(12 - 5) --> (7 + 14) --> (21 * 7) --> (147 + 4) --> 151", "(12 / 4) --> (3.0 + 14) --> (17.0 * 9) --> (153.0 - 7) --> (146.0 + 5) --> 151", "(9 + 4) --> (13 * 12) --> (156 - 5) --> 151"]}, "target": 151, "n_ways": 12, "round": 1}, "r2": {"n": [4, 5, 7, 14, 19, 20], "how": {"236": ["(19 + 7) --> (26 - 14) --> (12 * 20) --> (240 - 4) --> 236", "(19 + 7) --> (26 + 4) --> (30 + 20) --> (50 * 5) --> (250 - 14) --> 236", "(19 - 7) --> (12 * 20) --> (240 - 4) --> 236", "(19 + 14) --> (33 * 7) --> (231 + 5) --> 236", "(19 + 5) --> (24 * 7) --> (168 / 14) --> (12.0 * 20) --> (240.0 - 4) --> 236", "(19 - 4) --> (15 + 20) --> (35 * 7) --> (245 - 14) --> (231 + 5) --> 236", "(19 + 4) --> (23 + 20) --> (43 * 5) --> (215 + 7) --> (222 + 14) --> 236", "(7 * 14) --> (98 - 19) --> (79 - 20) --> (59 * 4) --> 236", "(7 * 5) --> (35 + 19) --> (54 * 4) --> (216 + 20) --> 236", "(7 - 5) --> (2 * 20) --> (40 + 19) --> (59 * 4) --> 236", "(7 + 5) --> (12 * 20) --> (240 - 4) --> 236", "(14 - 7) --> (7 * 5) --> (35 + 19) --> (54 * 4) --> (216 + 20) --> 236", "(14 - 7) --> (7 - 5) --> (2 * 20) --> (40 + 19) --> (59 * 4) --> 236", "(14 - 7) --> (7 + 5) --> (12 * 20) --> (240 - 4) --> 236", "(14 / 7) --> (2.0 * 20) --> (40.0 + 19) --> (59.0 * 4) --> 236", "(20 - 5) --> (15 * 14) --> (210 + 19) --> (229 + 7) --> 236", "(20 - 4) --> (16 * 14) --> (224 + 7) --> (231 + 5) --> 236"]}, "target": 236, "n_ways": 17, "round": 2}, "r3": {"n": [3, 9, 13, 14, 17, 20], "how": {"278": ["(14 * 3) --> (42 - 13) --> (29 * 9) --> (261 + 17) --> 278", "(14 * 3) --> (42 - 20) --> (22 * 13) --> (286 + 9) --> (295 - 17) --> 278", "(14 + 3) --> (17 * 17) --> (289 + 9) --> (298 - 20) --> 278", "(14 + 13) --> (27 / 3) --> (9.0 + 20) --> (29.0 * 9) --> (261.0 + 17) --> 278", "(14 * 20) --> (280 + 3) --> (283 - 9) --> (274 - 13) --> (261 + 17) --> 278", "(3 + 13) --> (16 * 17) --> (272 - 14) --> (258 + 20) --> 278", "(3 + 17) --> (20 * 9) --> (180 * 20) --> (3600 + 14) --> (3614 / 13) --> 278", "(9 / 3) --> (3.0 + 13) --> (16.0 * 17) --> (272.0 - 14) --> (258.0 + 20) --> 278", "(13 - 9) --> (4 * 17) --> (68 + 20) --> (88 * 3) --> (264 + 14) --> 278", "(17 - 9) --> (8 * 3) --> (24 * 13) --> (312 - 14) --> (298 - 20) --> 278"]}, "target": 278, "n_ways": 10, "round": 3}, "r4": {"n": [7, 9, 12, 13, 17, 20], "how": {"453": ["(12 + 17) --> (29 - 7) --> (22 * 20) --> (440 + 13) --> 453", "(9 - 7) --> (2 * 17) --> (34 - 12) --> (22 * 20) --> (440 + 13) --> 453", "(13 + 17) --> (30 + 7) --> (37 * 12) --> (444 + 9) --> 453", "(17 + 20) --> (37 * 12) --> (444 + 9) --> 453", "(17 + 20) --> (37 * 13) --> (481 - 12) --> (469 - 9) --> (460 - 7) --> 453", "(20 - 13) --> (7 * 9) --> (63 * 7) --> (441 + 12) --> 453"]}, "target": 453, "n_ways": 6, "round": 4}, "r5": {"n": [9, 11, 12, 19, 22, 25], "how": {"567": ["(22 / 11) --> (2.0 * 19) --> (38.0 + 25) --> (63.0 * 9) --> 567", "(22 + 12) --> (34 + 19) --> (53 * 11) --> (583 + 9) --> (592 - 25) --> 567", "(22 - 19) --> (3 * 25) --> (75 - 12) --> (63 * 9) --> 567", "(22 * 25) --> (550 - 11) --> (539 + 9) --> (548 + 19) --> 567", "(11 + 12) --> (23 - 19) --> (4 * 22) --> (88 - 25) --> (63 * 9) --> 567"]}, "target": 567, "n_ways": 5, "round": 5}}