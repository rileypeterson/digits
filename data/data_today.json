{"puzzleDate": "2025-10-20", "r1": {"n": [4, 5, 8, 10, 12, 15], "how": {"158": ["(12 + 4) --> (16 * 8) --> (128 + 10) --> (138 + 15) --> (153 + 5) --> 158", "(12 - 4) --> (8 * 8) --> (64 + 15) --> (79 * 10) --> (790 / 5) --> 158", "(12 + 4) --> (16 * 10) --> (160 + 8) --> (168 - 15) --> (153 + 5) --> 158", "(12 / 4) --> (3.0 * 10) --> (30.0 * 5) --> (150.0 + 8) --> 158", "(12 + 4) --> (16 + 5) --> (21 * 8) --> (168 - 10) --> 158", "(12 * 8) --> (96 - 15) --> (81 * 10) --> (810 / 5) --> (162.0 - 4) --> 158", "(12 - 10) --> (2 * 15) --> (30 * 5) --> (150 + 8) --> 158", "(12 * 15) --> (180 - 4) --> (176 - 8) --> (168 - 10) --> 158", "(12 * 5) --> (60 - 8) --> (52 - 15) --> (37 * 4) --> (148 + 10) --> 158", "(12 + 5) --> (17 * 10) --> (170 - 4) --> (166 - 8) --> 158", "(12 * 5) --> (60 / 10) --> (6.0 + 4) --> (10.0 * 15) --> (150.0 + 8) --> 158", "(4 + 8) --> (12 * 15) --> (180 - 12) --> (168 - 10) --> 158", "(4 * 8) --> (32 - 15) --> (17 * 10) --> (170 - 12) --> 158", "(4 * 8) --> (32 * 5) --> (160 - 12) --> (148 + 10) --> 158", "(4 + 10) --> (14 - 12) --> (2 * 15) --> (30 * 5) --> (150 + 8) --> 158", "(4 + 10) --> (14 * 12) --> (168 - 15) --> (153 + 5) --> 158", "(4 + 15) --> (19 - 5) --> (14 * 12) --> (168 - 10) --> 158", "(4 * 5) --> (20 - 8) --> (12 * 15) --> (180 - 12) --> (168 - 10) --> 158", "(4 * 5) --> (20 - 10) --> (10 * 15) --> (150 + 8) --> 158", "(8 - 4) --> (4 + 10) --> (14 * 12) --> (168 - 15) --> (153 + 5) --> 158", "(8 / 4) --> (2.0 + 15) --> (17.0 * 10) --> (170.0 - 12) --> 158", "(8 - 4) --> (4 + 15) --> (19 - 5) --> (14 * 12) --> (168 - 10) --> 158", "(10 * 15) --> (150 + 12) --> (162 + 4) --> (166 - 8) --> 158", "(10 * 15) --> (150 + 12) --> (162 - 4) --> 158", "(10 * 15) --> (150 + 8) --> 158", "(10 / 5) --> (2.0 + 12) --> (14.0 - 4) --> (10.0 * 15) --> (150.0 + 8) --> 158", "(15 / 5) --> (3.0 + 12) --> (15.0 * 10) --> (150.0 + 8) --> 158", "(15 + 5) --> (20 * 8) --> (160 - 12) --> (148 + 10) --> 158"]}, "target": 158, "n_ways": 28, "round": 1}, "r2": {"n": [3, 4, 6, 11, 16, 18], "how": {"221": ["(3 + 18) --> (21 * 11) --> (231 - 4) --> (227 - 6) --> 221", "(3 + 18) --> (21 * 11) --> (231 + 6) --> (237 - 16) --> 221", "(3 * 18) --> (54 * 4) --> (216 + 11) --> (227 - 6) --> 221", "(3 * 18) --> (54 * 4) --> (216 - 11) --> (205 + 16) --> 221", "(3 * 18) --> (54 * 16) --> (864 / 4) --> (216.0 + 11) --> (227.0 - 6) --> 221", "(3 * 18) --> (54 - 16) --> (38 * 6) --> (228 - 11) --> (217 + 4) --> 221", "(3 * 4) --> (12 * 16) --> (192 + 11) --> (203 + 18) --> 221", "(11 * 18) --> (198 - 3) --> (195 + 4) --> (199 + 6) --> (205 + 16) --> 221", "(11 * 18) --> (198 + 3) --> (201 + 4) --> (205 + 16) --> 221", "(11 - 4) --> (7 + 6) --> (13 * 18) --> (234 + 3) --> (237 - 16) --> 221", "(11 * 6) --> (66 - 16) --> (50 * 4) --> (200 + 3) --> (203 + 18) --> 221", "(18 - 4) --> (14 * 16) --> (224 - 3) --> 221", "(18 - 4) --> (14 * 16) --> (224 + 3) --> (227 - 6) --> 221", "(18 / 6) --> (3.0 + 11) --> (14.0 * 16) --> (224.0 - 3) --> 221", "(18 - 6) --> (12 / 4) --> (3.0 + 11) --> (14.0 * 16) --> (224.0 - 3) --> 221", "(4 * 16) --> (64 + 6) --> (70 * 3) --> (210 + 11) --> 221", "(6 + 16) --> (22 * 11) --> (242 - 3) --> (239 - 18) --> 221", "(16 - 3) --> (13 * 18) --> (234 - 11) --> (223 + 4) --> (227 - 6) --> 221", "(16 - 4) --> (12 * 18) --> (216 + 11) --> (227 - 6) --> 221"]}, "target": 221, "n_ways": 19, "round": 2}, "r3": {"n": [3, 8, 10, 15, 17, 19], "how": {"222": ["(10 - 8) --> (2 * 17) --> (34 - 19) --> (15 * 15) --> (225 - 3) --> 222", "(10 + 8) --> (18 - 15) --> (3 * 19) --> (57 + 17) --> (74 * 3) --> 222", "(10 + 17) --> (27 + 19) --> (46 * 15) --> (690 / 3) --> (230.0 - 8) --> 222", "(10 + 3) --> (13 * 19) --> (247 - 8) --> (239 - 17) --> 222", "(10 + 3) --> (13 + 15) --> (28 * 8) --> (224 + 17) --> (241 - 19) --> 222", "(10 + 3) --> (13 * 15) --> (195 + 8) --> (203 + 19) --> 222", "(10 * 19) --> (190 + 17) --> (207 + 15) --> 222", "(8 + 17) --> (25 - 10) --> (15 * 15) --> (225 - 3) --> 222", "(3 + 19) --> (22 * 10) --> (220 + 17) --> (237 - 15) --> 222", "(19 - 10) --> (9 * 8) --> (72 + 17) --> (89 - 15) --> (74 * 3) --> 222", "(19 - 3) --> (16 * 15) --> (240 - 10) --> (230 - 8) --> 222", "(15 - 3) --> (12 * 17) --> (204 + 10) --> (214 + 8) --> 222"]}, "target": 222, "n_ways": 12, "round": 3}, "r4": {"n": [4, 7, 11, 13, 18, 23], "how": {"426": ["(11 - 4) --> (7 * 7) --> (49 - 18) --> (31 * 13) --> (403 + 23) --> 426", "(23 - 18) --> (5 * 11) --> (55 + 4) --> (59 * 7) --> (413 + 13) --> 426", "(7 * 13) --> (91 + 11) --> (102 * 4) --> (408 + 18) --> 426"]}, "target": 426, "n_ways": 3, "round": 4}, "r5": {"n": [7, 8, 10, 12, 19, 24], "how": {"477": ["(7 + 24) --> (31 + 8) --> (39 * 12) --> (468 - 10) --> (458 + 19) --> 477", "(24 - 7) --> (17 + 8) --> (25 * 19) --> (475 + 12) --> (487 - 10) --> 477", "(24 - 19) --> (5 * 8) --> (40 * 12) --> (480 + 7) --> (487 - 10) --> 477", "(8 + 12) --> (20 * 24) --> (480 + 7) --> (487 - 10) --> 477", "(12 - 10) --> (2 * 24) --> (48 + 19) --> (67 * 7) --> (469 + 8) --> 477"]}, "target": 477, "n_ways": 5, "round": 5}}