{"puzzleDate": "2023-10-10", "r1": {"n": [2, 4, 8, 10, 12, 15], "how": {"126": ["(10 - 4) --> (6 + 15) --> (21 * 12) --> (252 / 2) --> 126", "(10 * 4) --> (40 + 15) --> (55 + 12) --> (67 * 2) --> (134 - 8) --> 126", "(10 + 4) --> (14 + 15) --> (29 - 8) --> (21 * 12) --> (252 / 2) --> 126", "(10 * 4) --> (40 * 15) --> (600 / 8) --> (75.0 - 12) --> (63.0 * 2) --> 126", "(10 * 4) --> (40 + 15) --> (55 + 8) --> (63 * 2) --> 126", "(10 - 4) --> (6 * 8) --> (48 + 15) --> (63 * 2) --> 126", "(10 + 4) --> (14 * 8) --> (112 + 12) --> (124 + 2) --> 126", "(10 * 15) --> (150 - 4) --> (146 - 12) --> (134 - 8) --> 126", "(10 * 15) --> (150 / 2) --> (75.0 - 12) --> (63.0 * 8) --> (504.0 / 4) --> 126", "(10 + 15) --> (25 * 2) --> (50 - 8) --> (42 * 12) --> (504 / 4) --> 126", "(10 * 12) --> (120 - 4) --> (116 + 8) --> (124 + 2) --> 126", "(10 * 12) --> (120 + 4) --> (124 + 2) --> 126", "(10 * 12) --> (120 + 8) --> (128 - 2) --> 126", "(10 * 8) --> (80 + 4) --> (84 - 15) --> (69 * 2) --> (138 - 12) --> 126", "(10 * 8) --> (80 - 15) --> (65 * 2) --> (130 - 4) --> 126", "(4 + 15) --> (19 - 2) --> (17 * 8) --> (136 - 10) --> 126", "(4 * 12) --> (48 + 15) --> (63 * 2) --> 126", "(4 + 12) --> (16 * 8) --> (128 - 2) --> 126", "(4 * 8) --> (32 + 10) --> (42 + 15) --> (57 * 2) --> (114 + 12) --> 126", "(4 / 2) --> (2.0 + 15) --> (17.0 * 8) --> (136.0 - 10) --> 126", "(15 - 4) --> (11 * 12) --> (132 - 8) --> (124 + 2) --> 126", "(15 - 4) --> (11 + 2) --> (13 * 10) --> (130 - 12) --> (118 + 8) --> 126", "(15 - 4) --> (11 + 2) --> (13 * 8) --> (104 + 10) --> (114 + 12) --> 126", "(15 + 12) --> (27 * 4) --> (108 + 10) --> (118 + 8) --> 126", "(15 * 12) --> (180 / 4) --> (45.0 + 10) --> (55.0 + 8) --> (63.0 * 2) --> 126", "(15 + 12) --> (27 + 2) --> (29 * 4) --> (116 + 10) --> 126", "(15 * 8) --> (120 + 10) --> (130 - 4) --> 126", "(15 * 8) --> (120 - 10) --> (110 + 4) --> (114 + 12) --> 126", "(15 * 8) --> (120 + 4) --> (124 + 2) --> 126", "(15 + 8) --> (23 * 12) --> (276 - 4) --> (272 / 2) --> (136.0 - 10) --> 126", "(15 - 2) --> (13 * 10) --> (130 - 4) --> 126", "(15 - 2) --> (13 * 10) --> (130 - 12) --> (118 + 8) --> 126", "(15 + 2) --> (17 * 8) --> (136 - 10) --> 126", "(15 - 2) --> (13 * 8) --> (104 + 10) --> (114 + 12) --> 126", "(12 / 2) --> (6.0 + 15) --> (21.0 + 8) --> (29.0 * 4) --> (116.0 + 10) --> 126", "(8 - 4) --> (4 * 12) --> (48 + 15) --> (63 * 2) --> 126"]}, "target": 126, "n_ways": 36, "round": 1}, "r2": {"n": [3, 7, 10, 14, 16, 19], "how": {"243": ["(3 + 16) --> (19 - 10) --> (9 + 7) --> (16 * 14) --> (224 + 19) --> 243", "(3 + 14) --> (17 * 16) --> (272 - 10) --> (262 - 19) --> 243", "(3 * 14) --> (42 - 10) --> (32 * 7) --> (224 + 19) --> 243", "(3 * 10) --> (30 + 16) --> (46 - 14) --> (32 * 7) --> (224 + 19) --> 243", "(3 * 10) --> (30 * 7) --> (210 + 14) --> (224 + 19) --> 243", "(3 + 19) --> (22 * 10) --> (220 + 16) --> (236 + 7) --> 243", "(3 + 7) --> (10 * 16) --> (160 * 14) --> (2240 / 10) --> (224.0 + 19) --> 243", "(16 - 3) --> (13 + 10) --> (23 - 7) --> (16 * 14) --> (224 + 19) --> 243", "(16 - 14) --> (2 * 3) --> (6 + 19) --> (25 * 10) --> (250 - 7) --> 243", "(16 * 14) --> (224 + 19) --> 243", "(14 * 19) --> (266 - 16) --> (250 - 7) --> 243", "(10 - 3) --> (7 * 16) --> (112 * 14) --> (1568 / 7) --> (224.0 + 19) --> 243", "(10 - 3) --> (7 + 7) --> (14 * 16) --> (224 + 19) --> 243", "(10 + 19) --> (29 - 14) --> (15 * 16) --> (240 + 3) --> 243", "(19 + 7) --> (26 * 10) --> (260 - 3) --> (257 - 14) --> 243"]}, "target": 243, "n_ways": 15, "round": 2}, "r3": {"n": [3, 5, 7, 11, 14, 16], "how": {"332": ["(16 + 5) --> (21 + 3) --> (24 * 14) --> (336 - 11) --> (325 + 7) --> 332", "(16 + 5) --> (21 * 3) --> (63 - 14) --> (49 * 7) --> (343 - 11) --> 332", "(16 + 14) --> (30 * 11) --> (330 - 5) --> (325 + 7) --> 332", "(16 * 14) --> (224 + 11) --> (235 / 5) --> (47.0 * 7) --> (329.0 + 3) --> 332", "(16 + 14) --> (30 * 11) --> (330 + 5) --> (335 - 3) --> 332", "(16 * 7) --> (112 - 11) --> (101 + 5) --> (106 * 3) --> (318 + 14) --> 332", "(16 * 7) --> (112 - 5) --> (107 * 3) --> (321 + 11) --> 332", "(11 + 7) --> (18 * 5) --> (90 + 16) --> (106 * 3) --> (318 + 14) --> 332", "(14 * 7) --> (98 + 11) --> (109 * 3) --> (327 + 5) --> 332"]}, "target": 332, "n_ways": 9, "round": 3}, "r4": {"n": [7, 10, 13, 17, 22, 24], "how": {"465": ["(10 + 13) --> (23 * 22) --> (506 - 24) --> (482 - 17) --> 465", "(22 - 17) --> (5 * 10) --> (50 + 13) --> (63 * 7) --> (441 + 24) --> 465", "(22 - 17) --> (5 * 13) --> (65 * 7) --> (455 + 10) --> 465", "(17 - 10) --> (7 + 13) --> (20 * 24) --> (480 - 22) --> (458 + 7) --> 465", "(13 - 10) --> (3 * 24) --> (72 * 7) --> (504 - 22) --> (482 - 17) --> 465"]}, "target": 465, "n_ways": 5, "round": 4}, "r5": {"n": [5, 7, 11, 18, 20, 24], "how": {"472": ["(24 + 20) --> (44 * 11) --> (484 - 7) --> (477 - 5) --> 472"]}, "target": 472, "n_ways": 1, "round": 5}}