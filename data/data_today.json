{"puzzleDate": "2025-01-11", "r1": {"n": [2, 5, 8, 9, 11, 13], "how": {"98": ["(11 * 8) --> (88 - 5) --> (83 + 2) --> (85 + 13) --> 98", "(11 + 8) --> (19 - 13) --> (6 * 9) --> (54 - 5) --> (49 * 2) --> 98", "(11 + 5) --> (16 + 9) --> (25 - 13) --> (12 * 8) --> (96 + 2) --> 98", "(11 - 2) --> (9 + 9) --> (18 * 5) --> (90 + 8) --> 98", "(11 * 2) --> (22 + 9) --> (31 - 13) --> (18 * 5) --> (90 + 8) --> 98", "(11 + 9) --> (20 * 8) --> (160 / 2) --> (80.0 + 5) --> (85.0 + 13) --> 98", "(11 + 9) --> (20 * 5) --> (100 - 2) --> 98", "(11 + 13) --> (24 * 8) --> (192 - 5) --> (187 + 9) --> (196 / 2) --> 98", "(8 * 5) --> (40 + 9) --> (49 * 2) --> 98", "(8 + 2) --> (10 * 9) --> (90 - 5) --> (85 + 13) --> 98", "(8 - 2) --> (6 * 13) --> (78 + 11) --> (89 + 9) --> 98", "(8 * 9) --> (72 + 11) --> (83 + 2) --> (85 + 13) --> 98", "(8 + 9) --> (17 * 5) --> (85 + 11) --> (96 + 2) --> 98", "(8 + 9) --> (17 * 5) --> (85 + 13) --> 98", "(8 * 13) --> (104 - 11) --> (93 + 5) --> 98", "(8 * 13) --> (104 + 5) --> (109 - 2) --> (107 - 9) --> 98", "(5 + 2) --> (7 * 11) --> (77 + 8) --> (85 + 13) --> 98", "(5 - 2) --> (3 + 9) --> (12 * 8) --> (96 - 11) --> (85 + 13) --> 98", "(9 * 13) --> (117 - 11) --> (106 - 8) --> 98", "(13 - 11) --> (2 * 5) --> (10 * 9) --> (90 + 8) --> 98", "(13 - 9) --> (4 * 11) --> (44 + 5) --> (49 * 2) --> 98"]}, "target": 98, "n_ways": 21, "round": 1}, "r2": {"n": [3, 5, 7, 14, 16, 19], "how": {"254": ["(3 + 19) --> (22 - 7) --> (15 * 16) --> (240 + 14) --> 254", "(3 * 19) --> (57 + 7) --> (64 - 16) --> (48 * 5) --> (240 + 14) --> 254", "(3 + 19) --> (22 - 5) --> (17 * 14) --> (238 + 16) --> 254", "(3 * 7) --> (21 * 14) --> (294 - 19) --> (275 - 16) --> (259 - 5) --> 254", "(3 + 7) --> (10 + 5) --> (15 * 16) --> (240 + 14) --> 254", "(3 * 14) --> (42 + 19) --> (61 - 7) --> (54 * 5) --> (270 - 16) --> 254", "(3 + 16) --> (19 * 14) --> (266 - 7) --> (259 - 5) --> 254", "(3 * 16) --> (48 * 5) --> (240 + 14) --> 254", "(3 * 5) --> (15 + 19) --> (34 * 7) --> (238 + 16) --> 254", "(19 - 3) --> (16 * 16) --> (256 + 7) --> (263 - 14) --> (249 + 5) --> 254", "(19 - 3) --> (16 * 16) --> (256 - 7) --> (249 + 5) --> 254", "(19 - 7) --> (12 + 5) --> (17 * 14) --> (238 + 16) --> 254", "(19 * 14) --> (266 - 3) --> (263 + 7) --> (270 - 16) --> 254", "(19 * 14) --> (266 - 7) --> (259 - 5) --> 254", "(19 + 5) --> (24 / 3) --> (8.0 + 7) --> (15.0 * 16) --> (240.0 + 14) --> 254", "(16 - 3) --> (13 * 19) --> (247 + 7) --> 254"]}, "target": 254, "n_ways": 16, "round": 2}, "r3": {"n": [4, 6, 10, 15, 17, 20], "how": {"314": ["(4 + 10) --> (14 + 17) --> (31 - 15) --> (16 * 20) --> (320 - 6) --> 314", "(15 - 6) --> (9 * 17) --> (153 + 4) --> (157 * 20) --> (3140 / 10) --> 314", "(15 - 10) --> (5 * 4) --> (20 * 17) --> (340 - 6) --> (334 - 20) --> 314", "(15 + 17) --> (32 * 10) --> (320 - 6) --> 314", "(15 * 20) --> (300 + 4) --> (304 + 10) --> 314", "(17 - 6) --> (11 + 20) --> (31 * 10) --> (310 + 4) --> 314", "(20 / 4) --> (5.0 + 17) --> (22.0 * 15) --> (330.0 - 6) --> (324.0 - 10) --> 314"]}, "target": 314, "n_ways": 7, "round": 3}, "r4": {"n": [11, 12, 16, 20, 23, 24], "how": {"462": ["(24 * 23) --> (552 / 12) --> (46.0 + 16) --> (62.0 - 20) --> (42.0 * 11) --> 462", "(24 * 20) --> (480 - 23) --> (457 + 16) --> (473 - 11) --> 462", "(24 * 20) --> (480 / 16) --> (30.0 + 12) --> (42.0 * 11) --> 462", "(23 + 12) --> (35 * 24) --> (840 / 20) --> (42.0 * 11) --> 462"]}, "target": 462, "n_ways": 4, "round": 4}, "r5": {"n": [4, 5, 8, 13, 22, 24], "how": {"431": ["(4 * 24) --> (96 - 8) --> (88 * 5) --> (440 + 13) --> (453 - 22) --> 431", "(8 + 22) --> (30 + 5) --> (35 * 13) --> (455 - 24) --> 431", "(24 / 4) --> (6.0 + 8) --> (14.0 + 5) --> (19.0 * 22) --> (418.0 + 13) --> 431", "(24 / 8) --> (3.0 * 5) --> (15.0 + 4) --> (19.0 * 22) --> (418.0 + 13) --> 431", "(24 - 5) --> (19 * 22) --> (418 + 13) --> 431"]}, "target": 431, "n_ways": 5, "round": 5}}