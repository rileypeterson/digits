{"puzzleDate": "2025-03-30", "r1": {"n": [2, 4, 6, 8, 9, 11], "how": {"111": ["(6 * 9) --> (54 * 2) --> (108 + 11) --> (119 - 8) --> 111", "(6 * 9) --> (54 / 2) --> (27.0 * 4) --> (108.0 + 11) --> (119.0 - 8) --> 111", "(6 + 9) --> (15 - 2) --> (13 * 8) --> (104 + 11) --> (115 - 4) --> 111", "(6 + 9) --> (15 + 2) --> (17 + 8) --> (25 * 4) --> (100 + 11) --> 111", "(6 * 9) --> (54 - 4) --> (50 * 2) --> (100 + 11) --> 111", "(6 + 9) --> (15 - 4) --> (11 * 11) --> (121 - 2) --> (119 - 8) --> 111", "(6 * 9) --> (54 + 4) --> (58 - 8) --> (50 * 2) --> (100 + 11) --> 111", "(6 + 9) --> (15 * 8) --> (120 + 2) --> (122 - 11) --> 111", "(6 / 2) --> (3.0 + 9) --> (12.0 * 8) --> (96.0 + 11) --> (107.0 + 4) --> 111", "(6 * 2) --> (12 * 11) --> (132 - 9) --> (123 - 4) --> (119 - 8) --> 111", "(6 - 2) --> (4 + 11) --> (15 * 8) --> (120 - 9) --> 111", "(6 + 2) --> (8 + 4) --> (12 * 9) --> (108 + 11) --> (119 - 8) --> 111", "(6 * 2) --> (12 * 8) --> (96 + 11) --> (107 + 4) --> 111", "(6 + 11) --> (17 * 4) --> (68 - 8) --> (60 * 2) --> (120 - 9) --> 111", "(6 + 4) --> (10 * 11) --> (110 + 9) --> (119 - 8) --> 111", "(6 + 8) --> (14 * 9) --> (126 - 11) --> (115 - 4) --> 111", "(9 + 2) --> (11 * 11) --> (121 - 6) --> (115 - 4) --> 111", "(9 * 11) --> (99 + 6) --> (105 + 2) --> (107 + 4) --> 111", "(9 * 11) --> (99 + 4) --> (103 + 8) --> 111", "(9 * 4) --> (36 + 6) --> (42 + 8) --> (50 * 2) --> (100 + 11) --> 111", "(9 * 8) --> (72 + 2) --> (74 * 6) --> (444 / 4) --> 111", "(2 + 11) --> (13 * 9) --> (117 - 6) --> 111", "(2 * 11) --> (22 + 8) --> (30 * 4) --> (120 - 9) --> 111", "(2 + 4) --> (6 * 11) --> (66 + 8) --> (74 * 9) --> (666 / 6) --> 111", "(2 * 8) --> (16 + 9) --> (25 * 4) --> (100 + 11) --> 111", "(2 * 8) --> (16 - 11) --> (5 * 6) --> (30 * 4) --> (120 - 9) --> 111", "(2 * 8) --> (16 + 4) --> (20 * 6) --> (120 - 9) --> 111", "(11 + 4) --> (15 * 8) --> (120 - 9) --> 111", "(11 * 8) --> (88 / 4) --> (22.0 - 2) --> (20.0 * 6) --> (120.0 - 9) --> 111", "(4 / 2) --> (2.0 + 11) --> (13.0 * 9) --> (117.0 - 6) --> 111", "(8 - 4) --> (4 / 2) --> (2.0 + 11) --> (13.0 * 9) --> (117.0 - 6) --> 111", "(8 / 4) --> (2.0 + 11) --> (13.0 * 9) --> (117.0 - 6) --> 111"]}, "target": 111, "n_ways": 32, "round": 1}, "r2": {"n": [4, 6, 8, 11, 16, 17], "how": {"227": ["(17 + 6) --> (23 + 4) --> (27 * 8) --> (216 + 11) --> 227", "(17 - 6) --> (11 + 16) --> (27 * 8) --> (216 + 11) --> 227", "(17 - 4) --> (13 + 16) --> (29 * 8) --> (232 + 6) --> (238 - 11) --> 227", "(17 - 4) --> (13 * 16) --> (208 + 8) --> (216 + 11) --> 227", "(17 - 16) --> (1 + 8) --> (9 * 6) --> (54 * 4) --> (216 + 11) --> 227", "(17 - 8) --> (9 * 6) --> (54 * 4) --> (216 + 11) --> 227", "(17 - 8) --> (9 * 6) --> (54 * 16) --> (864 / 4) --> (216.0 + 11) --> 227", "(17 + 11) --> (28 * 16) --> (448 + 6) --> (454 * 4) --> (1816 / 8) --> 227", "(6 + 16) --> (22 - 8) --> (14 * 17) --> (238 - 11) --> 227", "(6 + 8) --> (14 * 17) --> (238 - 11) --> 227", "(4 + 16) --> (20 - 6) --> (14 * 17) --> (238 - 11) --> 227", "(16 - 6) --> (10 - 4) --> (6 + 8) --> (14 * 17) --> (238 - 11) --> 227", "(16 / 4) --> (4.0 + 17) --> (21.0 + 6) --> (27.0 * 8) --> (216.0 + 11) --> 227", "(16 + 8) --> (24 / 6) --> (4.0 + 17) --> (21.0 * 11) --> (231.0 - 4) --> 227", "(16 / 8) --> (2.0 + 11) --> (13.0 * 17) --> (221.0 + 6) --> 227", "(16 + 8) --> (24 + 11) --> (35 * 6) --> (210 + 17) --> 227", "(16 - 11) --> (5 * 6) --> (30 * 8) --> (240 - 17) --> (223 + 4) --> 227", "(8 / 4) --> (2.0 + 11) --> (13.0 * 17) --> (221.0 + 6) --> 227"]}, "target": 227, "n_ways": 18, "round": 2}, "r3": {"n": [5, 11, 12, 14, 16, 18], "how": {"278": ["(5 + 11) --> (16 / 16) --> (1.0 + 18) --> (19.0 * 14) --> (266.0 + 12) --> 278", "(5 + 11) --> (16 * 18) --> (288 - 14) --> (274 + 16) --> (290 - 12) --> 278", "(5 + 18) --> (23 * 12) --> (276 - 14) --> (262 + 16) --> 278", "(14 - 11) --> (3 * 12) --> (36 + 16) --> (52 * 5) --> (260 + 18) --> 278", "(11 - 5) --> (6 + 16) --> (22 * 14) --> (308 - 18) --> (290 - 12) --> 278", "(11 - 5) --> (6 + 16) --> (22 * 12) --> (264 + 14) --> 278", "(11 * 16) --> (176 * 18) --> (3168 / 12) --> (264.0 + 14) --> 278", "(16 - 5) --> (11 / 11) --> (1.0 + 18) --> (19.0 * 14) --> (266.0 + 12) --> 278", "(18 - 11) --> (7 * 5) --> (35 - 16) --> (19 * 14) --> (266 + 12) --> 278", "(18 - 16) --> (2 * 11) --> (22 * 12) --> (264 + 14) --> 278"]}, "target": 278, "n_ways": 10, "round": 3}, "r4": {"n": [6, 8, 11, 14, 16, 23], "how": {"457": ["(8 + 11) --> (19 - 14) --> (5 * 6) --> (30 * 16) --> (480 - 23) --> 457", "(8 + 11) --> (19 * 23) --> (437 + 6) --> (443 + 14) --> 457", "(6 + 14) --> (20 * 23) --> (460 - 8) --> (452 + 16) --> (468 - 11) --> 457", "(6 + 14) --> (20 * 23) --> (460 + 8) --> (468 - 11) --> 457", "(6 + 14) --> (20 + 23) --> (43 * 11) --> (473 - 16) --> 457", "(16 - 8) --> (8 + 11) --> (19 * 23) --> (437 + 6) --> (443 + 14) --> 457", "(16 + 23) --> (39 * 11) --> (429 + 8) --> (437 + 6) --> (443 + 14) --> 457"]}, "target": 457, "n_ways": 7, "round": 4}, "r5": {"n": [5, 6, 10, 12, 16, 19], "how": {"477": ["(16 + 10) --> (26 * 19) --> (494 - 12) --> (482 - 5) --> 477", "(16 + 6) --> (22 + 19) --> (41 * 12) --> (492 - 10) --> (482 - 5) --> 477", "(16 * 6) --> (96 * 5) --> (480 - 10) --> (470 - 12) --> (458 + 19) --> 477", "(10 + 19) --> (29 * 16) --> (464 + 6) --> (470 + 12) --> (482 - 5) --> 477", "(6 * 5) --> (30 + 10) --> (40 * 12) --> (480 + 16) --> (496 - 19) --> 477"]}, "target": 477, "n_ways": 5, "round": 5}}