{"puzzleDate": "2024-03-07", "r1": {"n": [3, 4, 6, 10, 13, 14], "how": {"112": ["(6 + 10) --> (16 + 13) --> (29 + 3) --> (32 / 4) --> (8.0 * 14) --> 112", "(6 * 4) --> (24 * 14) --> (336 / 3) --> 112", "(6 * 4) --> (24 * 13) --> (312 + 10) --> (322 + 14) --> (336 / 3) --> 112", "(6 - 4) --> (2 + 13) --> (15 - 10) --> (5 + 3) --> (8 * 14) --> 112", "(6 * 4) --> (24 - 13) --> (11 - 3) --> (8 * 14) --> 112", "(6 + 13) --> (19 + 3) --> (22 * 4) --> (88 + 10) --> (98 + 14) --> 112", "(6 * 3) --> (18 + 10) --> (28 * 4) --> 112", "(6 / 3) --> (2.0 + 10) --> (12.0 - 4) --> (8.0 * 14) --> 112", "(6 * 3) --> (18 - 10) --> (8 * 14) --> 112", "(6 + 3) --> (9 * 14) --> (126 - 10) --> (116 - 4) --> 112", "(10 - 6) --> (4 + 4) --> (8 * 14) --> 112", "(10 - 6) --> (4 * 3) --> (12 - 4) --> (8 * 14) --> 112", "(10 * 4) --> (40 * 3) --> (120 + 6) --> (126 - 14) --> 112", "(10 + 14) --> (24 * 4) --> (96 + 6) --> (102 + 13) --> (115 - 3) --> 112", "(10 + 14) --> (24 * 4) --> (96 + 13) --> (109 + 3) --> 112", "(10 * 14) --> (140 / 4) --> (35.0 * 3) --> (105.0 - 6) --> (99.0 + 13) --> 112", "(10 + 13) --> (23 * 4) --> (92 + 6) --> (98 + 14) --> 112", "(10 * 13) --> (130 - 4) --> (126 - 14) --> 112", "(10 + 13) --> (23 * 14) --> (322 - 4) --> (318 / 3) --> (106.0 + 6) --> 112", "(10 * 3) --> (30 + 4) --> (34 - 13) --> (21 * 6) --> (126 - 14) --> 112", "(4 + 13) --> (17 * 6) --> (102 + 10) --> 112", "(4 + 13) --> (17 - 6) --> (11 - 3) --> (8 * 14) --> 112", "(4 * 13) --> (52 - 10) --> (42 / 3) --> (14.0 - 6) --> (8.0 * 14) --> 112", "(4 * 13) --> (52 - 10) --> (42 * 3) --> (126 - 14) --> 112", "(14 - 10) --> (4 * 6) --> (24 * 4) --> (96 + 13) --> (109 + 3) --> 112", "(14 - 13) --> (1 * 6) --> (6 * 3) --> (18 + 10) --> (28 * 4) --> 112", "(14 + 13) --> (27 * 4) --> (108 - 6) --> (102 + 10) --> 112", "(14 + 3) --> (17 * 6) --> (102 + 10) --> 112"]}, "target": 112, "n_ways": 28, "round": 1}, "r2": {"n": [7, 10, 12, 16, 17, 20], "how": {"254": ["(20 + 16) --> (36 * 7) --> (252 - 10) --> (242 + 12) --> 254", "(20 / 10) --> (2.0 + 12) --> (14.0 * 17) --> (238.0 + 16) --> 254", "(20 / 10) --> (2.0 * 7) --> (14.0 * 17) --> (238.0 + 16) --> 254", "(20 * 12) --> (240 - 10) --> (230 + 7) --> (237 + 17) --> 254", "(20 + 7) --> (27 * 10) --> (270 - 16) --> 254", "(20 - 17) --> (3 * 16) --> (48 - 10) --> (38 * 7) --> (266 - 12) --> 254", "(16 * 17) --> (272 - 20) --> (252 - 10) --> (242 + 12) --> 254", "(10 + 12) --> (22 - 20) --> (2 * 7) --> (14 * 17) --> (238 + 16) --> 254", "(12 - 10) --> (2 * 7) --> (14 * 17) --> (238 + 16) --> 254"]}, "target": 254, "n_ways": 9, "round": 2}, "r3": {"n": [3, 5, 7, 9, 12, 14], "how": {"356": ["(14 * 9) --> (126 - 5) --> (121 * 3) --> (363 - 7) --> 356", "(14 + 12) --> (26 * 5) --> (130 - 9) --> (121 * 3) --> (363 - 7) --> 356", "(14 * 7) --> (98 - 9) --> (89 * 12) --> (1068 / 3) --> 356", "(5 * 7) --> (35 + 3) --> (38 * 9) --> (342 + 14) --> 356", "(3 * 12) --> (36 - 5) --> (31 + 7) --> (38 * 9) --> (342 + 14) --> 356", "(3 * 7) --> (21 + 5) --> (26 + 12) --> (38 * 9) --> (342 + 14) --> 356", "(12 - 3) --> (9 * 9) --> (81 - 7) --> (74 * 5) --> (370 - 14) --> 356"]}, "target": 356, "n_ways": 7, "round": 3}, "r4": {"n": [7, 10, 14, 18, 21, 22], "how": {"429": ["(22 - 14) --> (8 + 10) --> (18 + 7) --> (25 * 18) --> (450 - 21) --> 429", "(22 - 10) --> (12 * 14) --> (168 * 18) --> (3024 - 21) --> (3003 / 7) --> 429", "(22 + 10) --> (32 - 7) --> (25 * 18) --> (450 - 21) --> 429", "(21 + 18) --> (39 * 22) --> (858 * 7) --> (6006 / 14) --> 429", "(14 + 7) --> (21 * 21) --> (441 - 22) --> (419 + 10) --> 429", "(14 / 7) --> (2.0 + 18) --> (20.0 * 22) --> (440.0 - 21) --> (419.0 + 10) --> 429"]}, "target": 429, "n_ways": 6, "round": 4}, "r5": {"n": [5, 13, 20, 22, 23, 25], "how": {"564": ["(20 + 23) --> (43 * 13) --> (559 + 5) --> 564", "(20 + 22) --> (42 * 13) --> (546 - 5) --> (541 + 23) --> 564", "(5 + 25) --> (30 * 20) --> (600 - 13) --> (587 - 23) --> 564", "(23 * 25) --> (575 - 20) --> (555 - 13) --> (542 + 22) --> 564", "(23 * 22) --> (506 + 20) --> (526 + 13) --> (539 + 25) --> 564"]}, "target": 564, "n_ways": 5, "round": 5}}