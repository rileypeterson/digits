{"puzzleDate": "2024-12-23", "r1": {"n": [4, 5, 8, 10, 13, 15], "how": {"89": ["(13 + 15) --> (28 * 4) --> (112 - 8) --> (104 - 5) --> (99 - 10) --> 89", "(13 * 8) --> (104 - 15) --> 89", "(13 - 8) --> (5 * 15) --> (75 + 10) --> (85 + 4) --> 89", "(13 - 8) --> (5 + 5) --> (10 * 10) --> (100 - 15) --> (85 + 4) --> 89", "(13 * 8) --> (104 - 5) --> (99 - 10) --> 89", "(13 + 8) --> (21 + 5) --> (26 * 4) --> (104 - 15) --> 89", "(13 + 8) --> (21 - 5) --> (16 * 4) --> (64 + 15) --> (79 + 10) --> 89", "(13 + 8) --> (21 + 10) --> (31 * 15) --> (465 / 5) --> (93.0 - 4) --> 89", "(13 + 8) --> (21 * 4) --> (84 + 5) --> 89", "(13 + 8) --> (21 * 4) --> (84 - 5) --> (79 + 10) --> 89", "(13 - 5) --> (8 * 8) --> (64 + 15) --> (79 + 10) --> 89", "(13 * 10) --> (130 / 5) --> (26.0 * 4) --> (104.0 - 15) --> 89", "(13 + 10) --> (23 + 4) --> (27 * 15) --> (405 / 5) --> (81.0 + 8) --> 89", "(15 - 8) --> (7 + 10) --> (17 * 5) --> (85 + 4) --> 89", "(15 - 5) --> (10 * 8) --> (80 + 13) --> (93 - 4) --> 89", "(15 * 5) --> (75 + 10) --> (85 + 4) --> 89", "(15 + 4) --> (19 * 8) --> (152 * 5) --> (760 / 10) --> (76.0 + 13) --> 89", "(15 - 4) --> (11 * 10) --> (110 - 13) --> (97 - 8) --> 89", "(8 * 5) --> (40 / 10) --> (4.0 + 4) --> (8.0 * 13) --> (104.0 - 15) --> 89", "(8 * 10) --> (80 + 13) --> (93 - 4) --> 89", "(8 * 10) --> (80 + 5) --> (85 + 4) --> 89", "(8 - 4) --> (4 * 13) --> (52 * 10) --> (520 / 5) --> (104.0 - 15) --> 89", "(5 - 4) --> (1 * 13) --> (13 * 8) --> (104 - 15) --> 89", "(10 - 8) --> (2 * 13) --> (26 * 4) --> (104 - 15) --> 89", "(10 - 8) --> (2 * 15) --> (30 - 13) --> (17 * 5) --> (85 + 4) --> 89", "(10 - 5) --> (5 - 4) --> (1 * 13) --> (13 * 8) --> (104 - 15) --> 89"]}, "target": 89, "n_ways": 26, "round": 1}, "r2": {"n": [3, 4, 9, 12, 16, 18], "how": {"143": ["(16 + 12) --> (28 + 18) --> (46 * 3) --> (138 - 4) --> (134 + 9) --> 143", "(16 - 3) --> (13 * 12) --> (156 - 18) --> (138 - 4) --> (134 + 9) --> 143", "(16 - 3) --> (13 * 12) --> (156 - 4) --> (152 - 9) --> 143", "(16 - 3) --> (13 * 9) --> (117 + 12) --> (129 + 18) --> (147 - 4) --> 143", "(16 + 18) --> (34 * 12) --> (408 + 9) --> (417 / 3) --> (139.0 + 4) --> 143", "(16 + 18) --> (34 + 4) --> (38 * 12) --> (456 / 3) --> (152.0 - 9) --> 143", "(16 * 18) --> (288 * 4) --> (1152 / 9) --> (128.0 + 12) --> (140.0 + 3) --> 143", "(16 * 9) --> (144 + 3) --> (147 - 4) --> 143", "(12 * 3) --> (36 - 16) --> (20 + 18) --> (38 * 4) --> (152 - 9) --> 143", "(12 - 4) --> (8 * 16) --> (128 - 3) --> (125 + 18) --> 143", "(3 * 18) --> (54 - 16) --> (38 * 4) --> (152 - 9) --> 143", "(3 * 18) --> (54 - 12) --> (42 * 4) --> (168 - 16) --> (152 - 9) --> 143", "(18 - 3) --> (15 * 9) --> (135 + 12) --> (147 - 4) --> 143", "(18 - 4) --> (14 * 12) --> (168 - 16) --> (152 - 9) --> 143", "(18 * 9) --> (162 - 16) --> (146 - 3) --> 143", "(18 + 9) --> (27 * 16) --> (432 - 3) --> (429 * 4) --> (1716 / 12) --> 143", "(18 - 9) --> (9 * 16) --> (144 + 3) --> (147 - 4) --> 143", "(18 * 9) --> (162 - 12) --> (150 - 3) --> (147 - 4) --> 143", "(4 + 9) --> (13 * 12) --> (156 - 16) --> (140 + 3) --> 143"]}, "target": 143, "n_ways": 19, "round": 2}, "r3": {"n": [3, 6, 13, 15, 16, 18], "how": {"353": ["(3 * 18) --> (54 * 6) --> (324 + 16) --> (340 + 13) --> 353", "(3 + 15) --> (18 * 18) --> (324 + 16) --> (340 + 13) --> 353", "(3 * 15) --> (45 - 16) --> (29 * 13) --> (377 - 18) --> (359 - 6) --> 353", "(3 * 15) --> (45 + 16) --> (61 * 6) --> (366 - 13) --> 353", "(3 + 15) --> (18 + 6) --> (24 * 16) --> (384 - 18) --> (366 - 13) --> 353", "(3 * 16) --> (48 / 6) --> (8.0 + 18) --> (26.0 * 13) --> (338.0 + 15) --> 353", "(3 * 6) --> (18 + 18) --> (36 - 13) --> (23 * 16) --> (368 - 15) --> 353", "(18 / 3) --> (6.0 * 6) --> (36.0 - 13) --> (23.0 * 16) --> (368.0 - 15) --> 353", "(18 * 6) --> (108 + 15) --> (123 * 3) --> (369 - 16) --> 353", "(18 + 6) --> (24 * 16) --> (384 - 3) --> (381 - 15) --> (366 - 13) --> 353", "(15 - 3) --> (12 + 6) --> (18 * 18) --> (324 + 16) --> (340 + 13) --> 353", "(15 * 6) --> (90 + 18) --> (108 * 3) --> (324 + 16) --> (340 + 13) --> 353", "(16 * 6) --> (96 - 18) --> (78 / 3) --> (26.0 * 13) --> (338.0 + 15) --> 353"]}, "target": 353, "n_ways": 13, "round": 3}, "r4": {"n": [5, 10, 12, 17, 18, 20], "how": {"431": ["(20 + 5) --> (25 * 17) --> (425 - 12) --> (413 + 18) --> 431", "(20 - 5) --> (15 + 10) --> (25 * 17) --> (425 - 12) --> (413 + 18) --> 431", "(20 + 5) --> (25 + 10) --> (35 - 12) --> (23 * 18) --> (414 + 17) --> 431", "(20 - 5) --> (15 + 12) --> (27 * 17) --> (459 - 10) --> (449 - 18) --> 431", "(20 * 17) --> (340 / 10) --> (34.0 * 12) --> (408.0 + 5) --> (413.0 + 18) --> 431", "(5 + 18) --> (23 * 20) --> (460 - 17) --> (443 - 12) --> 431"]}, "target": 431, "n_ways": 6, "round": 4}, "r5": {"n": [8, 10, 19, 21, 23, 25], "how": {"518": ["(8 + 25) --> (33 + 19) --> (52 * 10) --> (520 + 21) --> (541 - 23) --> 518", "(8 + 21) --> (29 * 19) --> (551 - 23) --> (528 - 10) --> 518", "(21 * 23) --> (483 + 25) --> (508 + 10) --> 518"]}, "target": 518, "n_ways": 3, "round": 5}}