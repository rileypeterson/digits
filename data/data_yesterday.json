{"puzzleDate": "2025-10-01", "r1": {"n": [3, 4, 8, 12, 14, 15], "how": {"113": ["(3 * 14) --> (42 * 12) --> (504 + 8) --> (512 / 4) --> (128.0 - 15) --> 113", "(3 * 14) --> (42 - 12) --> (30 * 4) --> (120 + 8) --> (128 - 15) --> 113", "(3 + 14) --> (17 * 8) --> (136 - 12) --> (124 + 4) --> (128 - 15) --> 113", "(3 + 12) --> (15 - 8) --> (7 * 14) --> (98 + 15) --> 113", "(3 * 12) --> (36 / 4) --> (9.0 * 15) --> (135.0 - 14) --> (121.0 - 8) --> 113", "(3 + 12) --> (15 + 15) --> (30 * 14) --> (420 / 4) --> (105.0 + 8) --> 113", "(3 + 8) --> (11 * 12) --> (132 - 4) --> (128 - 15) --> 113", "(3 * 8) --> (24 * 4) --> (96 + 14) --> (110 - 12) --> (98 + 15) --> 113", "(3 + 8) --> (11 - 4) --> (7 * 14) --> (98 + 15) --> 113", "(3 + 8) --> (11 - 4) --> (7 * 12) --> (84 + 14) --> (98 + 15) --> 113", "(3 + 4) --> (7 * 14) --> (98 + 15) --> 113", "(3 + 4) --> (7 * 12) --> (84 + 14) --> (98 + 15) --> 113", "(3 + 4) --> (7 * 15) --> (105 + 8) --> 113", "(14 - 3) --> (11 * 12) --> (132 - 8) --> (124 + 4) --> (128 - 15) --> 113", "(14 - 3) --> (11 * 12) --> (132 - 4) --> (128 - 15) --> 113", "(14 - 3) --> (11 - 4) --> (7 * 15) --> (105 + 8) --> 113", "(14 + 12) --> (26 + 4) --> (30 * 3) --> (90 + 8) --> (98 + 15) --> 113", "(14 * 8) --> (112 - 3) --> (109 + 4) --> 113", "(14 * 8) --> (112 + 12) --> (124 + 4) --> (128 - 15) --> 113", "(14 + 8) --> (22 * 4) --> (88 * 15) --> (1320 / 12) --> (110.0 + 3) --> 113", "(14 - 4) --> (10 * 12) --> (120 + 8) --> (128 - 15) --> 113", "(14 + 15) --> (29 * 4) --> (116 - 3) --> 113", "(12 / 3) --> (4.0 * 8) --> (32.0 * 4) --> (128.0 - 15) --> 113", "(12 - 3) --> (9 * 15) --> (135 - 14) --> (121 - 8) --> 113", "(12 * 8) --> (96 + 3) --> (99 + 14) --> 113", "(12 + 4) --> (16 * 8) --> (128 - 15) --> 113", "(12 * 4) --> (48 - 15) --> (33 * 3) --> (99 + 14) --> 113", "(12 + 15) --> (27 * 4) --> (108 - 3) --> (105 + 8) --> 113", "(8 * 15) --> (120 - 3) --> (117 - 4) --> 113"]}, "target": 113, "n_ways": 29, "round": 1}, "r2": {"n": [3, 5, 10, 13, 19, 20], "how": {"157": ["(10 / 5) --> (2.0 + 19) --> (21.0 - 13) --> (8.0 * 20) --> (160.0 - 3) --> 157", "(10 + 5) --> (15 - 3) --> (12 * 13) --> (156 - 19) --> (137 + 20) --> 157", "(10 * 5) --> (50 * 3) --> (150 - 13) --> (137 + 20) --> 157", "(10 / 5) --> (2.0 * 13) --> (26.0 + 20) --> (46.0 * 3) --> (138.0 + 19) --> 157", "(10 * 19) --> (190 - 13) --> (177 - 20) --> 157", "(10 + 13) --> (23 * 5) --> (115 + 19) --> (134 + 3) --> (137 + 20) --> 157", "(10 * 13) --> (130 + 5) --> (135 + 19) --> (154 + 3) --> 157", "(5 + 19) --> (24 / 3) --> (8.0 * 20) --> (160.0 + 10) --> (170.0 - 13) --> 157", "(5 + 3) --> (8 * 20) --> (160 + 10) --> (170 - 13) --> 157", "(5 + 13) --> (18 * 10) --> (180 - 3) --> (177 - 20) --> 157", "(19 - 5) --> (14 * 10) --> (140 - 3) --> (137 + 20) --> 157", "(19 - 5) --> (14 + 3) --> (17 * 10) --> (170 - 13) --> 157", "(19 - 3) --> (16 + 20) --> (36 * 5) --> (180 - 10) --> (170 - 13) --> 157", "(19 + 13) --> (32 * 5) --> (160 - 3) --> 157", "(13 - 5) --> (8 * 20) --> (160 - 3) --> 157", "(20 - 10) --> (10 * 13) --> (130 + 5) --> (135 + 19) --> (154 + 3) --> 157", "(20 - 3) --> (17 * 10) --> (170 - 13) --> 157", "(20 - 13) --> (7 * 5) --> (35 - 19) --> (16 * 10) --> (160 - 3) --> 157"]}, "target": 157, "n_ways": 18, "round": 2}, "r3": {"n": [4, 7, 13, 16, 18, 20], "how": {"239": ["(4 + 20) --> (24 - 7) --> (17 * 13) --> (221 + 18) --> 239", "(4 * 18) --> (72 - 16) --> (56 - 20) --> (36 * 7) --> (252 - 13) --> 239", "(16 / 4) --> (4.0 + 20) --> (24.0 - 7) --> (17.0 * 13) --> (221.0 + 18) --> 239", "(16 * 13) --> (208 + 4) --> (212 + 20) --> (232 + 7) --> 239", "(16 * 13) --> (208 + 20) --> (228 + 18) --> (246 - 7) --> 239", "(16 + 20) --> (36 * 7) --> (252 - 13) --> 239", "(13 * 20) --> (260 + 4) --> (264 - 18) --> (246 - 7) --> 239", "(13 * 18) --> (234 - 4) --> (230 + 16) --> (246 - 7) --> 239", "(20 / 4) --> (5.0 + 16) --> (21.0 - 7) --> (14.0 * 18) --> (252.0 - 13) --> 239", "(20 - 18) --> (2 * 16) --> (32 + 4) --> (36 * 7) --> (252 - 13) --> 239"]}, "target": 239, "n_ways": 10, "round": 3}, "r4": {"n": [6, 12, 15, 17, 20, 24], "how": {"451": ["(12 / 6) --> (2.0 + 17) --> (19.0 * 24) --> (456.0 + 15) --> (471.0 - 20) --> 451", "(12 - 6) --> (6 + 17) --> (23 * 20) --> (460 - 24) --> (436 + 15) --> 451", "(6 + 17) --> (23 * 20) --> (460 - 24) --> (436 + 15) --> 451", "(17 + 24) --> (41 * 12) --> (492 - 6) --> (486 - 15) --> (471 - 20) --> 451", "(24 + 15) --> (39 * 12) --> (468 - 17) --> 451", "(24 * 20) --> (480 - 12) --> (468 - 17) --> 451", "(24 - 20) --> (4 * 6) --> (24 + 15) --> (39 * 12) --> (468 - 17) --> 451"]}, "target": 451, "n_ways": 7, "round": 4}, "r5": {"n": [6, 8, 10, 15, 17, 18], "how": {"598": ["(6 * 18) --> (108 - 17) --> (91 - 15) --> (76 * 8) --> (608 - 10) --> 598", "(6 * 10) --> (60 + 17) --> (77 * 8) --> (616 - 18) --> 598", "(18 - 8) --> (10 * 6) --> (60 * 10) --> (600 - 17) --> (583 + 15) --> 598"]}, "target": 598, "n_ways": 3, "round": 5}}