{"puzzleDate": "2023-12-09", "r1": {"n": [3, 5, 7, 8, 10, 13], "how": {"152": ["(7 - 5) --> (2 * 3) --> (6 + 13) --> (19 * 8) --> 152", "(7 * 5) --> (35 - 3) --> (32 - 13) --> (19 * 8) --> 152", "(7 + 5) --> (12 - 3) --> (9 + 10) --> (19 * 8) --> 152", "(7 * 5) --> (35 + 8) --> (43 * 3) --> (129 + 13) --> (142 + 10) --> 152", "(7 * 5) --> (35 + 13) --> (48 * 3) --> (144 + 8) --> 152", "(7 - 5) --> (2 * 13) --> (26 + 3) --> (29 - 10) --> (19 * 8) --> 152", "(7 * 5) --> (35 + 13) --> (48 / 3) --> (16.0 * 10) --> (160.0 - 8) --> 152", "(7 + 5) --> (12 - 10) --> (2 * 3) --> (6 + 13) --> (19 * 8) --> 152", "(7 * 3) --> (21 - 5) --> (16 * 10) --> (160 - 8) --> 152", "(7 + 3) --> (10 / 10) --> (1.0 + 5) --> (6.0 + 13) --> (19.0 * 8) --> 152", "(7 + 3) --> (10 + 10) --> (20 * 8) --> (160 + 5) --> (165 - 13) --> 152", "(7 + 13) --> (20 * 8) --> (160 + 5) --> (165 - 3) --> (162 - 10) --> 152", "(7 + 13) --> (20 * 8) --> (160 - 5) --> (155 - 3) --> 152", "(7 + 10) --> (17 * 8) --> (136 + 3) --> (139 + 13) --> 152", "(7 * 10) --> (70 - 13) --> (57 / 3) --> (19.0 * 8) --> 152", "(5 + 8) --> (13 * 13) --> (169 - 7) --> (162 - 10) --> 152", "(5 * 10) --> (50 + 7) --> (57 / 3) --> (19.0 * 8) --> 152", "(3 * 8) --> (24 - 7) --> (17 * 10) --> (170 - 5) --> (165 - 13) --> 152", "(3 + 8) --> (11 + 10) --> (21 * 7) --> (147 + 5) --> 152", "(3 + 13) --> (16 - 7) --> (9 + 10) --> (19 * 8) --> 152", "(3 * 13) --> (39 - 10) --> (29 * 5) --> (145 + 7) --> 152", "(3 + 13) --> (16 * 10) --> (160 - 8) --> 152", "(3 * 10) --> (30 / 5) --> (6.0 + 13) --> (19.0 * 8) --> 152", "(8 + 13) --> (21 * 7) --> (147 + 5) --> 152", "(8 + 13) --> (21 * 7) --> (147 - 5) --> (142 + 10) --> 152", "(8 + 13) --> (21 + 10) --> (31 * 5) --> (155 - 3) --> 152", "(13 - 3) --> (10 / 5) --> (2.0 + 7) --> (9.0 + 10) --> (19.0 * 8) --> 152", "(13 * 10) --> (130 / 5) --> (26.0 - 7) --> (19.0 * 8) --> 152", "(13 * 10) --> (130 + 3) --> (133 / 7) --> (19.0 * 8) --> 152"]}, "target": 152, "n_ways": 29, "round": 1}, "r2": {"n": [3, 4, 6, 11, 13, 16], "how": {"229": ["(13 + 4) --> (17 - 3) --> (14 * 16) --> (224 + 11) --> (235 - 6) --> 229", "(13 - 4) --> (9 + 6) --> (15 * 16) --> (240 - 11) --> 229", "(13 - 3) --> (10 * 4) --> (40 * 6) --> (240 - 11) --> 229", "(13 - 3) --> (10 * 16) --> (160 / 4) --> (40.0 * 6) --> (240.0 - 11) --> 229", "(13 * 3) --> (39 * 6) --> (234 + 11) --> (245 - 16) --> 229", "(13 * 16) --> (208 + 4) --> (212 + 11) --> (223 + 6) --> 229", "(13 * 6) --> (78 + 4) --> (82 - 11) --> (71 * 3) --> (213 + 16) --> 229", "(4 - 3) --> (1 * 16) --> (16 + 6) --> (22 * 11) --> (242 - 13) --> 229", "(4 * 3) --> (12 / 6) --> (2.0 + 13) --> (15.0 * 16) --> (240.0 - 11) --> 229", "(4 + 16) --> (20 * 11) --> (220 + 3) --> (223 + 6) --> 229", "(11 + 16) --> (27 * 4) --> (108 / 3) --> (36.0 * 6) --> (216.0 + 13) --> 229", "(3 * 16) --> (48 + 6) --> (54 * 4) --> (216 + 13) --> 229", "(3 * 6) --> (18 + 4) --> (22 * 11) --> (242 - 13) --> 229", "(16 - 4) --> (12 * 3) --> (36 * 6) --> (216 + 13) --> 229", "(16 + 6) --> (22 * 11) --> (242 - 13) --> 229", "(6 / 3) --> (2.0 + 13) --> (15.0 * 16) --> (240.0 - 11) --> 229", "(6 / 3) --> (2.0 + 4) --> (6.0 + 16) --> (22.0 * 11) --> (242.0 - 13) --> 229"]}, "target": 229, "n_ways": 17, "round": 2}, "r3": {"n": [4, 8, 10, 13, 15, 16], "how": {"269": ["(15 + 8) --> (23 * 13) --> (299 - 4) --> (295 - 10) --> (285 - 16) --> 269", "(15 * 8) --> (120 / 10) --> (12.0 + 4) --> (16.0 * 16) --> (256.0 + 13) --> 269", "(15 - 10) --> (5 + 16) --> (21 * 13) --> (273 + 4) --> (277 - 8) --> 269", "(15 - 10) --> (5 + 16) --> (21 * 13) --> (273 - 4) --> 269", "(13 + 4) --> (17 * 15) --> (255 + 8) --> (263 - 10) --> (253 + 16) --> 269", "(4 * 8) --> (32 - 15) --> (17 * 16) --> (272 - 13) --> (259 + 10) --> 269", "(4 * 8) --> (32 - 13) --> (19 * 15) --> (285 - 16) --> 269", "(4 * 10) --> (40 - 13) --> (27 - 8) --> (19 * 15) --> (285 - 16) --> 269", "(8 / 4) --> (2.0 + 15) --> (17.0 * 16) --> (272.0 - 13) --> (259.0 + 10) --> 269", "(8 + 10) --> (18 * 13) --> (234 + 15) --> (249 + 4) --> (253 + 16) --> 269", "(8 + 10) --> (18 * 16) --> (288 - 15) --> (273 - 4) --> 269", "(8 * 10) --> (80 - 16) --> (64 * 4) --> (256 + 13) --> 269"]}, "target": 269, "n_ways": 12, "round": 3}, "r4": {"n": [5, 6, 16, 18, 21, 23], "how": {"452": ["(23 + 16) --> (39 - 18) --> (21 * 21) --> (441 + 6) --> (447 + 5) --> 452", "(16 * 6) --> (96 - 23) --> (73 + 21) --> (94 * 5) --> (470 - 18) --> 452", "(16 + 6) --> (22 * 21) --> (462 - 23) --> (439 + 18) --> (457 - 5) --> 452", "(5 + 21) --> (26 * 18) --> (468 - 16) --> 452", "(21 - 6) --> (15 / 5) --> (3.0 + 23) --> (26.0 * 18) --> (468.0 - 16) --> 452"]}, "target": 452, "n_ways": 5, "round": 4}, "r5": {"n": [13, 14, 16, 20, 24, 25], "how": {"530": ["(13 + 20) --> (33 + 25) --> (58 - 24) --> (34 * 16) --> (544 - 14) --> 530", "(13 * 24) --> (312 - 16) --> (296 * 25) --> (7400 + 20) --> (7420 / 14) --> 530", "(20 * 25) --> (500 + 16) --> (516 + 14) --> 530", "(16 + 25) --> (41 * 14) --> (574 - 20) --> (554 - 24) --> 530", "(16 * 24) --> (384 - 13) --> (371 * 20) --> (7420 / 14) --> 530", "(14 + 24) --> (38 * 13) --> (494 + 20) --> (514 + 16) --> 530"]}, "target": 530, "n_ways": 6, "round": 5}}