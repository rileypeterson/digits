{"puzzleDate": "2024-09-24", "r1": {"n": [3, 5, 7, 10, 14, 15], "how": {"128": ["(7 * 10) --> (70 - 14) --> (56 - 15) --> (41 * 3) --> (123 + 5) --> 128", "(7 * 14) --> (98 + 10) --> (108 + 15) --> (123 + 5) --> 128", "(10 * 14) --> (140 - 7) --> (133 - 5) --> 128", "(10 * 14) --> (140 + 3) --> (143 - 15) --> 128", "(10 + 14) --> (24 + 3) --> (27 * 5) --> (135 - 7) --> 128", "(10 + 14) --> (24 * 5) --> (120 - 7) --> (113 + 15) --> 128", "(10 * 3) --> (30 * 5) --> (150 - 7) --> (143 - 15) --> 128", "(10 * 15) --> (150 - 14) --> (136 - 3) --> (133 - 5) --> 128", "(10 + 15) --> (25 * 5) --> (125 + 3) --> 128", "(14 - 10) --> (4 + 15) --> (19 * 7) --> (133 - 5) --> 128", "(14 * 3) --> (42 + 7) --> (49 + 15) --> (64 * 10) --> (640 / 5) --> 128", "(14 * 3) --> (42 * 15) --> (630 + 10) --> (640 / 5) --> 128", "(14 * 3) --> (42 - 15) --> (27 * 5) --> (135 - 7) --> 128", "(14 + 3) --> (17 - 5) --> (12 * 10) --> (120 - 7) --> (113 + 15) --> 128", "(14 * 5) --> (70 - 10) --> (60 - 15) --> (45 * 3) --> (135 - 7) --> 128", "(14 - 5) --> (9 * 15) --> (135 - 7) --> 128", "(14 - 5) --> (9 * 15) --> (135 - 10) --> (125 + 3) --> 128", "(15 / 3) --> (5.0 + 14) --> (19.0 * 7) --> (133.0 - 10) --> (123.0 + 5) --> 128", "(15 / 3) --> (5.0 + 14) --> (19.0 * 7) --> (133.0 - 5) --> 128"]}, "target": 128, "n_ways": 19, "round": 1}, "r2": {"n": [3, 5, 8, 16, 17, 19], "how": {"218": ["(3 * 17) --> (51 - 8) --> (43 * 5) --> (215 + 19) --> (234 - 16) --> 218", "(17 - 3) --> (14 * 16) --> (224 + 5) --> (229 + 8) --> (237 - 19) --> 218", "(17 + 16) --> (33 - 19) --> (14 * 3) --> (42 * 5) --> (210 + 8) --> 218", "(5 + 8) --> (13 * 17) --> (221 - 3) --> 218", "(5 + 8) --> (13 * 17) --> (221 - 19) --> (202 + 16) --> 218", "(5 * 19) --> (95 - 3) --> (92 + 17) --> (109 * 16) --> (1744 / 8) --> 218", "(5 * 19) --> (95 - 17) --> (78 * 3) --> (234 - 16) --> 218", "(5 + 16) --> (21 - 8) --> (13 * 17) --> (221 - 3) --> 218", "(8 + 19) --> (27 + 16) --> (43 * 5) --> (215 + 3) --> 218", "(16 - 5) --> (11 * 19) --> (209 + 17) --> (226 - 8) --> 218"]}, "target": 218, "n_ways": 10, "round": 2}, "r3": {"n": [5, 7, 10, 13, 14, 18], "how": {"313": ["(5 + 18) --> (23 + 7) --> (30 * 10) --> (300 + 13) --> 313", "(5 + 18) --> (23 - 7) --> (16 + 14) --> (30 * 10) --> (300 + 13) --> 313", "(5 + 18) --> (23 * 13) --> (299 + 14) --> 313", "(5 + 14) --> (19 + 13) --> (32 * 10) --> (320 - 7) --> 313", "(5 + 13) --> (18 * 18) --> (324 - 7) --> (317 + 10) --> (327 - 14) --> 313", "(18 - 5) --> (13 + 10) --> (23 * 13) --> (299 + 14) --> 313", "(18 + 14) --> (32 * 10) --> (320 - 7) --> 313", "(18 - 13) --> (5 * 10) --> (50 + 14) --> (64 * 5) --> (320 - 7) --> 313", "(7 + 13) --> (20 * 14) --> (280 + 5) --> (285 + 18) --> (303 + 10) --> 313", "(10 - 7) --> (3 * 14) --> (42 + 18) --> (60 * 5) --> (300 + 13) --> 313", "(14 - 10) --> (4 + 13) --> (17 * 18) --> (306 + 7) --> 313"]}, "target": 313, "n_ways": 11, "round": 3}, "r4": {"n": [4, 6, 12, 13, 20, 23], "how": {"450": ["(12 + 23) --> (35 - 13) --> (22 * 20) --> (440 + 4) --> (444 + 6) --> 450", "(23 * 20) --> (460 - 12) --> (448 - 4) --> (444 + 6) --> 450", "(23 * 20) --> (460 - 4) --> (456 - 6) --> 450", "(4 + 20) --> (24 + 13) --> (37 * 12) --> (444 + 6) --> 450", "(4 * 13) --> (52 + 23) --> (75 * 6) --> 450", "(6 * 13) --> (78 + 12) --> (90 * 20) --> (1800 / 4) --> 450", "(20 - 12) --> (8 - 4) --> (4 * 13) --> (52 + 23) --> (75 * 6) --> 450", "(13 - 12) --> (1 * 23) --> (23 * 20) --> (460 - 4) --> (456 - 6) --> 450"]}, "target": 450, "n_ways": 8, "round": 4}, "r5": {"n": [10, 12, 14, 21, 22, 25], "how": {"431": ["(10 + 21) --> (31 * 14) --> (434 - 25) --> (409 + 22) --> 431", "(10 + 25) --> (35 - 14) --> (21 * 21) --> (441 + 12) --> (453 - 22) --> 431", "(12 * 21) --> (252 * 22) --> (5544 / 14) --> (396.0 + 10) --> (406.0 + 25) --> 431", "(21 + 22) --> (43 * 10) --> (430 + 12) --> (442 - 25) --> (417 + 14) --> 431", "(25 - 12) --> (13 + 22) --> (35 - 14) --> (21 * 21) --> (441 - 10) --> 431"]}, "target": 431, "n_ways": 5, "round": 5}}