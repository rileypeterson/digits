{"puzzleDate": "2024-04-28", "r1": {"n": [2, 4, 6, 10, 11, 15], "how": {"133": ["(2 + 15) --> (17 - 4) --> (13 * 11) --> (143 - 10) --> 133", "(2 * 15) --> (30 + 4) --> (34 - 10) --> (24 * 6) --> (144 - 11) --> 133", "(2 * 15) --> (30 + 6) --> (36 * 4) --> (144 - 11) --> 133", "(2 * 11) --> (22 - 4) --> (18 * 6) --> (108 + 15) --> (123 + 10) --> 133", "(2 * 10) --> (20 + 4) --> (24 * 6) --> (144 - 11) --> 133", "(15 - 2) --> (13 * 11) --> (143 - 4) --> (139 - 6) --> 133", "(15 - 2) --> (13 * 11) --> (143 - 10) --> 133", "(15 + 11) --> (26 * 10) --> (260 + 6) --> (266 * 2) --> (532 / 4) --> 133", "(15 + 11) --> (26 * 10) --> (260 + 6) --> (266 / 2) --> 133", "(15 - 4) --> (11 * 11) --> (121 + 2) --> (123 + 10) --> 133", "(15 + 4) --> (19 * 6) --> (114 - 2) --> (112 + 11) --> (123 + 10) --> 133", "(15 + 4) --> (19 - 6) --> (13 * 11) --> (143 - 10) --> 133", "(15 * 10) --> (150 - 2) --> (148 - 11) --> (137 - 4) --> 133", "(15 * 10) --> (150 - 11) --> (139 - 6) --> 133", "(15 + 10) --> (25 * 6) --> (150 - 2) --> (148 - 11) --> (137 - 4) --> 133", "(11 - 2) --> (9 * 15) --> (135 + 4) --> (139 - 6) --> 133", "(11 + 4) --> (15 * 15) --> (225 * 6) --> (1350 / 10) --> (135.0 - 2) --> 133", "(11 + 4) --> (15 + 10) --> (25 * 6) --> (150 - 2) --> (148 - 15) --> 133", "(11 * 10) --> (110 + 2) --> (112 + 15) --> (127 + 6) --> 133", "(4 * 10) --> (40 + 15) --> (55 + 6) --> (61 * 2) --> (122 + 11) --> 133", "(10 / 2) --> (5.0 + 15) --> (20.0 + 4) --> (24.0 * 6) --> (144.0 - 11) --> 133", "(10 - 2) --> (8 * 6) --> (48 - 11) --> (37 * 4) --> (148 - 15) --> 133", "(10 + 6) --> (16 * 15) --> (240 + 4) --> (244 / 2) --> (122.0 + 11) --> 133"]}, "target": 133, "n_ways": 23, "round": 1}, "r2": {"n": [4, 6, 13, 17, 18, 20], "how": {"251": ["(4 + 13) --> (17 * 17) --> (289 - 18) --> (271 - 20) --> 251", "(4 + 17) --> (21 + 20) --> (41 * 6) --> (246 - 13) --> (233 + 18) --> 251", "(4 * 17) --> (68 + 20) --> (88 * 18) --> (1584 / 6) --> (264.0 - 13) --> 251", "(4 * 18) --> (72 - 13) --> (59 - 20) --> (39 * 6) --> (234 + 17) --> 251", "(4 + 20) --> (24 - 6) --> (18 * 13) --> (234 + 17) --> 251", "(13 * 17) --> (221 + 4) --> (225 + 6) --> (231 + 20) --> 251", "(13 * 18) --> (234 + 17) --> 251", "(13 * 20) --> (260 - 4) --> (256 - 6) --> (250 - 17) --> (233 + 18) --> 251", "(6 + 20) --> (26 - 13) --> (13 * 18) --> (234 + 17) --> 251", "(17 + 20) --> (37 - 18) --> (19 * 13) --> (247 + 4) --> 251", "(18 - 4) --> (14 * 17) --> (238 + 13) --> 251", "(18 - 4) --> (14 * 17) --> (238 - 13) --> (225 + 6) --> (231 + 20) --> 251", "(20 - 6) --> (14 * 17) --> (238 + 13) --> 251", "(20 - 18) --> (2 * 4) --> (8 + 6) --> (14 * 17) --> (238 + 13) --> 251"]}, "target": 251, "n_ways": 14, "round": 2}, "r3": {"n": [5, 8, 10, 15, 19, 20], "how": {"339": ["(5 + 20) --> (25 + 15) --> (40 - 8) --> (32 * 10) --> (320 + 19) --> 339", "(5 + 20) --> (25 + 15) --> (40 * 8) --> (320 + 19) --> 339", "(5 + 15) --> (20 * 20) --> (400 * 8) --> (3200 / 10) --> (320.0 + 19) --> 339", "(20 / 5) --> (4.0 * 8) --> (32.0 * 10) --> (320.0 + 19) --> 339", "(20 + 15) --> (35 * 10) --> (350 + 8) --> (358 - 19) --> 339"]}, "target": 339, "n_ways": 5, "round": 3}, "r4": {"n": [8, 17, 20, 22, 23, 25], "how": {"415": ["(17 * 25) --> (425 - 8) --> (417 - 22) --> (395 + 20) --> 415", "(17 + 25) --> (42 - 22) --> (20 * 20) --> (400 - 8) --> (392 + 23) --> 415", "(17 + 23) --> (40 - 20) --> (20 * 22) --> (440 - 25) --> 415", "(22 * 20) --> (440 - 17) --> (423 - 8) --> 415", "(22 * 20) --> (440 - 25) --> 415", "(23 - 17) --> (6 * 25) --> (150 * 22) --> (3300 + 20) --> (3320 / 8) --> 415"]}, "target": 415, "n_ways": 6, "round": 4}, "r5": {"n": [9, 14, 17, 20, 21, 23], "how": {"515": ["(23 + 21) --> (44 + 17) --> (61 * 9) --> (549 - 20) --> (529 - 14) --> 515", "(23 * 21) --> (483 + 17) --> (500 + 9) --> (509 + 20) --> (529 - 14) --> 515", "(23 - 21) --> (2 * 9) --> (18 + 20) --> (38 * 14) --> (532 - 17) --> 515", "(21 * 14) --> (294 - 20) --> (274 * 17) --> (4658 - 23) --> (4635 / 9) --> 515"]}, "target": 515, "n_ways": 4, "round": 5}}