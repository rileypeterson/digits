{"puzzleDate": "2025-09-05", "r1": {"n": [3, 6, 7, 10, 13, 15], "how": {"92": ["(15 + 10) --> (25 - 7) --> (18 * 6) --> (108 - 13) --> (95 - 3) --> 92", "(15 - 10) --> (5 * 7) --> (35 * 3) --> (105 - 13) --> 92", "(15 * 10) --> (150 * 13) --> (1950 / 3) --> (650.0 - 6) --> (644.0 / 7) --> 92", "(15 * 7) --> (105 - 10) --> (95 - 6) --> (89 + 3) --> 92", "(15 * 7) --> (105 - 10) --> (95 - 3) --> 92", "(15 * 7) --> (105 - 13) --> 92", "(15 + 7) --> (22 * 13) --> (286 - 10) --> (276 / 3) --> 92", "(15 + 6) --> (21 * 13) --> (273 + 10) --> (283 - 7) --> (276 / 3) --> 92", "(15 + 6) --> (21 + 13) --> (34 * 3) --> (102 - 10) --> 92", "(15 - 13) --> (2 * 7) --> (14 + 3) --> (17 * 6) --> (102 - 10) --> 92", "(15 + 3) --> (18 * 6) --> (108 - 10) --> (98 + 7) --> (105 - 13) --> 92", "(15 - 3) --> (12 * 6) --> (72 + 7) --> (79 + 13) --> 92", "(10 * 7) --> (70 + 15) --> (85 - 6) --> (79 + 13) --> 92", "(10 + 7) --> (17 * 6) --> (102 - 13) --> (89 + 3) --> 92", "(10 * 7) --> (70 + 6) --> (76 + 13) --> (89 + 3) --> 92", "(10 - 7) --> (3 / 3) --> (1.0 + 6) --> (7.0 * 15) --> (105.0 - 13) --> 92", "(10 * 6) --> (60 + 15) --> (75 + 7) --> (82 + 13) --> (95 - 3) --> 92", "(10 * 6) --> (60 - 15) --> (45 * 7) --> (315 / 3) --> (105.0 - 13) --> 92", "(10 - 6) --> (4 - 3) --> (1 * 15) --> (15 * 7) --> (105 - 13) --> 92", "(10 - 6) --> (4 + 3) --> (7 * 15) --> (105 - 13) --> 92", "(10 - 3) --> (7 * 15) --> (105 - 7) --> (98 - 6) --> 92", "(10 - 3) --> (7 * 15) --> (105 - 13) --> 92", "(10 - 3) --> (7 * 13) --> (91 + 7) --> (98 - 6) --> 92", "(7 + 13) --> (20 + 3) --> (23 * 10) --> (230 * 6) --> (1380 / 15) --> 92", "(6 * 3) --> (18 - 13) --> (5 * 15) --> (75 + 10) --> (85 + 7) --> 92", "(13 - 6) --> (7 * 15) --> (105 - 10) --> (95 - 3) --> 92", "(13 - 3) --> (10 * 10) --> (100 - 15) --> (85 + 7) --> 92"]}, "target": 92, "n_ways": 27, "round": 1}, "r2": {"n": [5, 6, 11, 15, 18, 19], "how": {"215": ["(15 + 6) --> (21 - 19) --> (2 + 18) --> (20 * 11) --> (220 - 5) --> 215", "(15 + 19) --> (34 * 6) --> (204 + 11) --> 215", "(15 * 18) --> (270 - 6) --> (264 / 11) --> (24.0 + 19) --> (43.0 * 5) --> 215", "(15 + 18) --> (33 - 19) --> (14 + 5) --> (19 * 11) --> (209 + 6) --> 215", "(15 - 11) --> (4 * 6) --> (24 + 19) --> (43 * 5) --> 215", "(6 + 19) --> (25 + 18) --> (43 * 5) --> 215", "(6 + 19) --> (25 - 11) --> (14 * 15) --> (210 + 5) --> 215", "(19 * 18) --> (342 / 6) --> (57.0 - 11) --> (46.0 * 5) --> (230.0 - 15) --> 215", "(19 * 11) --> (209 + 6) --> 215", "(19 - 5) --> (14 * 15) --> (210 - 6) --> (204 + 11) --> 215", "(18 - 15) --> (3 * 5) --> (15 + 19) --> (34 * 6) --> (204 + 11) --> 215", "(18 / 6) --> (3.0 + 11) --> (14.0 * 15) --> (210.0 + 5) --> 215", "(18 - 5) --> (13 * 19) --> (247 - 15) --> (232 - 6) --> (226 - 11) --> 215"]}, "target": 215, "n_ways": 13, "round": 2}, "r3": {"n": [4, 5, 10, 13, 15, 19], "how": {"314": ["(19 + 13) --> (32 * 10) --> (320 + 5) --> (325 - 15) --> (310 + 4) --> 314", "(19 - 15) --> (4 * 13) --> (52 + 10) --> (62 * 5) --> (310 + 4) --> 314", "(19 + 4) --> (23 * 13) --> (299 + 5) --> (304 + 10) --> 314", "(19 + 4) --> (23 * 13) --> (299 + 15) --> 314", "(13 * 5) --> (65 - 19) --> (46 - 15) --> (31 * 10) --> (310 + 4) --> 314", "(5 + 15) --> (20 - 4) --> (16 * 19) --> (304 + 10) --> 314", "(15 / 5) --> (3.0 + 13) --> (16.0 * 19) --> (304.0 + 10) --> 314", "(10 / 5) --> (2.0 + 15) --> (17.0 * 19) --> (323.0 - 13) --> (310.0 + 4) --> 314"]}, "target": 314, "n_ways": 8, "round": 3}, "r4": {"n": [5, 8, 18, 20, 21, 24], "how": {"435": ["(20 + 8) --> (28 - 5) --> (23 * 18) --> (414 + 21) --> 435", "(20 + 18) --> (38 + 24) --> (62 - 5) --> (57 * 8) --> (456 - 21) --> 435", "(18 * 24) --> (432 + 8) --> (440 - 5) --> 435", "(18 * 21) --> (378 + 20) --> (398 + 8) --> (406 + 24) --> (430 + 5) --> 435", "(24 / 8) --> (3.0 + 20) --> (23.0 * 18) --> (414.0 + 21) --> 435", "(21 - 20) --> (1 * 18) --> (18 * 24) --> (432 + 8) --> (440 - 5) --> 435"]}, "target": 435, "n_ways": 6, "round": 4}, "r5": {"n": [4, 10, 15, 18, 21, 24], "how": {"545": ["(24 + 18) --> (42 + 15) --> (57 * 10) --> (570 - 4) --> (566 - 21) --> 545", "(24 + 10) --> (34 * 15) --> (510 + 18) --> (528 - 4) --> (524 + 21) --> 545", "(24 + 4) --> (28 * 21) --> (588 - 18) --> (570 - 10) --> (560 - 15) --> 545", "(10 + 15) --> (25 * 21) --> (525 + 24) --> (549 - 4) --> 545"]}, "target": 545, "n_ways": 4, "round": 5}}