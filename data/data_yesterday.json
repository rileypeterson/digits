{"puzzleDate": "2024-01-29", "r1": {"n": [3, 5, 8, 11, 13, 14], "how": {"113": ["(13 - 5) --> (8 * 11) --> (88 + 3) --> (91 + 14) --> (105 + 8) --> 113", "(13 - 5) --> (8 + 3) --> (11 * 11) --> (121 - 8) --> 113", "(13 + 5) --> (18 - 8) --> (10 * 11) --> (110 + 3) --> 113", "(13 * 11) --> (143 - 5) --> (138 - 3) --> (135 - 14) --> (121 - 8) --> 113", "(13 + 11) --> (24 + 3) --> (27 * 5) --> (135 - 14) --> (121 - 8) --> 113", "(13 + 11) --> (24 * 14) --> (336 - 5) --> (331 + 8) --> (339 / 3) --> 113", "(13 - 11) --> (2 * 14) --> (28 + 8) --> (36 * 3) --> (108 + 5) --> 113", "(13 + 3) --> (16 * 5) --> (80 + 11) --> (91 + 14) --> (105 + 8) --> 113", "(13 * 3) --> (39 * 14) --> (546 + 11) --> (557 + 8) --> (565 / 5) --> 113", "(13 + 14) --> (27 * 5) --> (135 - 11) --> (124 - 3) --> (121 - 8) --> 113", "(13 - 8) --> (5 * 5) --> (25 * 14) --> (350 - 11) --> (339 / 3) --> 113", "(13 * 8) --> (104 - 5) --> (99 + 14) --> 113", "(5 * 8) --> (40 - 13) --> (27 * 11) --> (297 / 3) --> (99.0 + 14) --> 113", "(11 - 5) --> (6 + 3) --> (9 * 14) --> (126 - 13) --> 113", "(11 + 3) --> (14 * 8) --> (112 - 13) --> (99 + 14) --> 113", "(11 - 8) --> (3 * 3) --> (9 * 14) --> (126 - 13) --> 113", "(14 - 3) --> (11 * 11) --> (121 - 8) --> 113", "(14 + 8) --> (22 * 5) --> (110 + 3) --> 113", "(8 - 5) --> (3 * 11) --> (33 * 3) --> (99 + 14) --> 113", "(8 - 5) --> (3 * 3) --> (9 * 14) --> (126 - 13) --> 113"]}, "target": 113, "n_ways": 20, "round": 1}, "r2": {"n": [4, 8, 9, 11, 14, 16], "how": {"203": ["(16 + 4) --> (20 * 11) --> (220 - 9) --> (211 - 8) --> 203", "(16 / 4) --> (4.0 * 8) --> (32.0 - 11) --> (21.0 * 9) --> (189.0 + 14) --> 203", "(16 * 11) --> (176 - 4) --> (172 + 9) --> (181 + 8) --> (189 + 14) --> 203", "(16 * 11) --> (176 + 4) --> (180 + 9) --> (189 + 14) --> 203", "(16 + 9) --> (25 * 8) --> (200 - 11) --> (189 + 14) --> 203", "(16 - 9) --> (7 + 8) --> (15 * 14) --> (210 + 4) --> (214 - 11) --> 203", "(16 - 8) --> (8 * 4) --> (32 - 11) --> (21 * 9) --> (189 + 14) --> 203", "(16 * 14) --> (224 - 4) --> (220 - 9) --> (211 - 8) --> 203", "(4 + 11) --> (15 * 14) --> (210 - 16) --> (194 + 9) --> 203", "(4 * 9) --> (36 - 14) --> (22 * 8) --> (176 + 16) --> (192 + 11) --> 203", "(4 + 8) --> (12 * 16) --> (192 + 11) --> 203", "(4 * 8) --> (32 - 11) --> (21 * 9) --> (189 + 14) --> 203", "(9 + 8) --> (17 * 11) --> (187 + 16) --> 203", "(8 / 4) --> (2.0 + 16) --> (18.0 * 11) --> (198.0 - 9) --> (189.0 + 14) --> 203"]}, "target": 203, "n_ways": 14, "round": 2}, "r3": {"n": [5, 8, 12, 16, 17, 20], "how": {"351": ["(8 * 12) --> (96 * 20) --> (1920 / 5) --> (384.0 - 16) --> (368.0 - 17) --> 351", "(8 + 12) --> (20 * 17) --> (340 + 16) --> (356 - 5) --> 351", "(8 + 20) --> (28 - 5) --> (23 * 16) --> (368 - 17) --> 351", "(8 + 16) --> (24 + 5) --> (29 * 12) --> (348 + 20) --> (368 - 17) --> 351", "(8 + 16) --> (24 - 5) --> (19 * 20) --> (380 - 12) --> (368 - 17) --> 351", "(12 - 8) --> (4 + 17) --> (21 * 16) --> (336 + 20) --> (356 - 5) --> 351", "(20 * 17) --> (340 + 16) --> (356 - 5) --> 351"]}, "target": 351, "n_ways": 7, "round": 3}, "r4": {"n": [6, 11, 12, 14, 19, 25], "how": {"447": ["(25 + 14) --> (39 * 11) --> (429 + 6) --> (435 + 12) --> 447", "(6 + 12) --> (18 * 25) --> (450 + 11) --> (461 - 14) --> 447"]}, "target": 447, "n_ways": 2, "round": 4}, "r5": {"n": [7, 9, 12, 20, 22, 23], "how": {"579": ["(23 + 7) --> (30 * 20) --> (600 - 12) --> (588 - 9) --> 579", "(23 + 12) --> (35 - 9) --> (26 * 22) --> (572 + 7) --> 579", "(7 + 20) --> (27 + 22) --> (49 * 12) --> (588 - 9) --> 579", "(12 * 9) --> (108 - 22) --> (86 * 7) --> (602 - 23) --> 579", "(12 - 9) --> (3 * 22) --> (66 + 20) --> (86 * 7) --> (602 - 23) --> 579"]}, "target": 579, "n_ways": 5, "round": 5}}