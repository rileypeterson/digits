{"puzzleDate": "2025-04-24", "r1": {"n": [2, 3, 6, 8, 10, 13], "how": {"122": ["(10 + 13) --> (23 - 3) --> (20 * 6) --> (120 + 2) --> 122", "(10 * 13) --> (130 * 3) --> (390 / 6) --> (65.0 * 2) --> (130.0 - 8) --> 122", "(10 + 13) --> (23 * 3) --> (69 - 8) --> (61 * 2) --> 122", "(10 * 13) --> (130 * 6) --> (780 / 3) --> (260.0 / 2) --> (130.0 - 8) --> 122", "(10 * 13) --> (130 - 6) --> (124 - 2) --> 122", "(10 * 13) --> (130 - 8) --> 122", "(10 * 3) --> (30 - 13) --> (17 + 2) --> (19 * 6) --> (114 + 8) --> 122", "(10 + 3) --> (13 * 6) --> (78 - 13) --> (65 * 2) --> (130 - 8) --> 122", "(10 + 6) --> (16 * 3) --> (48 + 13) --> (61 * 2) --> 122", "(10 - 6) --> (4 * 3) --> (12 - 2) --> (10 * 13) --> (130 - 8) --> 122", "(10 * 6) --> (60 - 3) --> (57 * 2) --> (114 + 8) --> 122", "(10 + 6) --> (16 - 2) --> (14 * 8) --> (112 + 13) --> (125 - 3) --> 122", "(10 + 2) --> (12 / 3) --> (4.0 + 6) --> (10.0 * 13) --> (130.0 - 8) --> 122", "(10 * 8) --> (80 - 13) --> (67 - 6) --> (61 * 2) --> 122", "(10 + 8) --> (18 * 6) --> (108 + 13) --> (121 + 3) --> (124 - 2) --> 122", "(13 + 3) --> (16 * 10) --> (160 * 6) --> (960 / 8) --> (120.0 + 2) --> 122", "(13 * 3) --> (39 - 10) --> (29 * 8) --> (232 / 2) --> (116.0 + 6) --> 122", "(13 * 3) --> (39 * 6) --> (234 + 10) --> (244 / 2) --> 122", "(13 * 3) --> (39 - 6) --> (33 * 8) --> (264 / 2) --> (132.0 - 10) --> 122", "(13 + 3) --> (16 / 2) --> (8.0 + 6) --> (14.0 * 8) --> (112.0 + 10) --> 122", "(13 + 3) --> (16 - 2) --> (14 * 8) --> (112 + 10) --> 122", "(13 + 3) --> (16 * 8) --> (128 - 6) --> 122", "(13 + 6) --> (19 * 3) --> (57 * 2) --> (114 + 8) --> 122", "(13 - 6) --> (7 * 2) --> (14 * 8) --> (112 + 10) --> 122", "(13 * 2) --> (26 + 10) --> (36 * 3) --> (108 + 6) --> (114 + 8) --> 122", "(13 * 8) --> (104 + 10) --> (114 + 6) --> (120 + 2) --> 122", "(3 - 2) --> (1 * 10) --> (10 * 13) --> (130 - 8) --> 122", "(3 * 8) --> (24 - 13) --> (11 * 6) --> (66 * 2) --> (132 - 10) --> 122", "(3 * 8) --> (24 - 2) --> (22 * 6) --> (132 - 10) --> 122", "(6 / 3) --> (2.0 + 10) --> (12.0 - 2) --> (10.0 * 13) --> (130.0 - 8) --> 122", "(6 / 3) --> (2.0 + 13) --> (15.0 * 8) --> (120.0 + 2) --> 122", "(6 / 3) --> (2.0 / 2) --> (1.0 + 13) --> (14.0 * 8) --> (112.0 + 10) --> 122", "(6 + 8) --> (14 * 10) --> (140 - 13) --> (127 - 3) --> (124 - 2) --> 122", "(6 * 8) --> (48 + 10) --> (58 + 3) --> (61 * 2) --> 122", "(6 * 8) --> (48 + 13) --> (61 * 2) --> 122", "(2 + 8) --> (10 * 10) --> (100 + 13) --> (113 + 3) --> (116 + 6) --> 122"]}, "target": 122, "n_ways": 36, "round": 1}, "r2": {"n": [3, 6, 8, 10, 11, 16], "how": {"253": ["(11 - 8) --> (3 + 16) --> (19 + 6) --> (25 * 10) --> (250 + 3) --> 253", "(11 + 8) --> (19 + 6) --> (25 * 10) --> (250 + 3) --> 253", "(11 + 16) --> (27 * 10) --> (270 - 3) --> (267 - 8) --> (259 - 6) --> 253", "(3 + 10) --> (13 + 8) --> (21 * 11) --> (231 + 16) --> (247 + 6) --> 253", "(3 + 10) --> (13 + 16) --> (29 - 6) --> (23 * 11) --> 253", "(3 + 8) --> (11 + 16) --> (27 * 10) --> (270 - 11) --> (259 - 6) --> 253", "(3 + 16) --> (19 * 10) --> (190 - 6) --> (184 * 11) --> (2024 / 8) --> 253", "(10 - 3) --> (7 + 16) --> (23 * 11) --> 253", "(10 - 8) --> (2 * 11) --> (22 - 6) --> (16 * 16) --> (256 - 3) --> 253", "(10 * 8) --> (80 + 6) --> (86 * 3) --> (258 + 11) --> (269 - 16) --> 253", "(10 * 16) --> (160 / 8) --> (20.0 + 3) --> (23.0 * 11) --> 253", "(10 + 16) --> (26 + 6) --> (32 * 8) --> (256 - 3) --> 253", "(10 * 6) --> (60 + 11) --> (71 + 8) --> (79 * 3) --> (237 + 16) --> 253", "(10 + 6) --> (16 * 16) --> (256 - 11) --> (245 + 8) --> 253", "(10 + 6) --> (16 * 16) --> (256 - 3) --> 253", "(8 * 16) --> (128 + 10) --> (138 * 11) --> (1518 / 6) --> 253", "(8 - 6) --> (2 * 10) --> (20 + 3) --> (23 * 11) --> 253", "(16 - 8) --> (8 - 6) --> (2 * 10) --> (20 + 3) --> (23 * 11) --> 253", "(16 + 6) --> (22 * 11) --> (242 + 3) --> (245 + 8) --> 253", "(16 * 6) --> (96 - 8) --> (88 * 3) --> (264 - 11) --> 253"]}, "target": 253, "n_ways": 20, "round": 2}, "r3": {"n": [7, 8, 12, 15, 18, 19], "how": {"292": ["(8 + 18) --> (26 - 7) --> (19 * 15) --> (285 - 12) --> (273 + 19) --> 292", "(8 + 18) --> (26 + 12) --> (38 - 19) --> (19 * 15) --> (285 + 7) --> 292", "(8 - 7) --> (1 + 15) --> (16 * 19) --> (304 - 12) --> 292", "(18 + 7) --> (25 * 12) --> (300 - 8) --> 292", "(18 + 12) --> (30 - 15) --> (15 * 19) --> (285 + 7) --> 292", "(15 * 19) --> (285 + 7) --> 292"]}, "target": 292, "n_ways": 6, "round": 3}, "r4": {"n": [6, 9, 12, 15, 18, 23], "how": {"442": ["(12 + 18) --> (30 * 15) --> (450 + 6) --> (456 + 9) --> (465 - 23) --> 442", "(12 * 15) --> (180 / 9) --> (20.0 * 23) --> (460.0 - 18) --> 442", "(15 * 23) --> (345 - 18) --> (327 * 12) --> (3924 / 9) --> (436.0 + 6) --> 442"]}, "target": 442, "n_ways": 3, "round": 4}, "r5": {"n": [10, 13, 15, 18, 21, 22], "how": {"519": ["(18 + 15) --> (33 - 10) --> (23 * 22) --> (506 + 13) --> 519", "(18 + 21) --> (39 * 13) --> (507 - 10) --> (497 + 22) --> 519", "(15 + 10) --> (25 * 22) --> (550 - 18) --> (532 - 13) --> 519", "(13 + 10) --> (23 - 15) --> (8 + 22) --> (30 * 18) --> (540 - 21) --> 519", "(10 + 22) --> (32 * 15) --> (480 + 18) --> (498 + 21) --> 519"]}, "target": 519, "n_ways": 5, "round": 5}}