{"puzzleDate": "2025-02-02", "r1": {"n": [2, 4, 6, 7, 11, 15], "how": {"94": ["(15 * 4) --> (60 * 11) --> (660 - 2) --> (658 / 7) --> 94", "(15 + 4) --> (19 + 2) --> (21 - 6) --> (15 * 7) --> (105 - 11) --> 94", "(15 - 4) --> (11 - 2) --> (9 + 6) --> (15 * 7) --> (105 - 11) --> 94", "(15 * 4) --> (60 - 6) --> (54 - 7) --> (47 * 2) --> 94", "(15 - 4) --> (11 - 7) --> (4 * 11) --> (44 * 2) --> (88 + 6) --> 94", "(15 - 4) --> (11 * 7) --> (77 + 11) --> (88 + 6) --> 94", "(15 - 11) --> (4 * 4) --> (16 * 6) --> (96 - 2) --> 94", "(15 * 11) --> (165 + 4) --> (169 + 7) --> (176 / 2) --> (88.0 + 6) --> 94", "(15 * 11) --> (165 - 2) --> (163 * 4) --> (652 + 6) --> (658 / 7) --> 94", "(15 - 11) --> (4 * 2) --> (8 + 7) --> (15 * 6) --> (90 + 4) --> 94", "(15 + 11) --> (26 * 7) --> (182 + 6) --> (188 / 4) --> (47.0 * 2) --> 94", "(15 + 11) --> (26 * 7) --> (182 + 6) --> (188 / 2) --> 94", "(15 - 2) --> (13 + 6) --> (19 * 4) --> (76 + 11) --> (87 + 7) --> 94", "(15 - 6) --> (9 * 4) --> (36 + 11) --> (47 * 2) --> 94", "(15 * 6) --> (90 + 4) --> 94", "(15 - 6) --> (9 * 11) --> (99 + 2) --> (101 - 7) --> 94", "(15 * 6) --> (90 + 11) --> (101 - 7) --> 94", "(15 + 7) --> (22 * 4) --> (88 + 6) --> 94", "(15 - 7) --> (8 * 11) --> (88 + 4) --> (92 + 2) --> 94", "(15 * 7) --> (105 - 11) --> 94", "(15 - 7) --> (8 / 2) --> (4.0 + 4) --> (8.0 * 11) --> (88.0 + 6) --> 94", "(4 * 11) --> (44 * 2) --> (88 + 6) --> 94", "(4 + 2) --> (6 * 11) --> (66 + 15) --> (81 + 6) --> (87 + 7) --> 94", "(4 * 6) --> (24 - 11) --> (13 * 15) --> (195 - 7) --> (188 / 2) --> 94", "(4 * 7) --> (28 + 6) --> (34 * 2) --> (68 + 15) --> (83 + 11) --> 94", "(11 - 4) --> (7 + 6) --> (13 * 15) --> (195 - 7) --> (188 / 2) --> 94", "(11 * 2) --> (22 - 7) --> (15 * 6) --> (90 + 4) --> 94", "(11 + 6) --> (17 + 7) --> (24 * 4) --> (96 - 2) --> 94", "(11 * 7) --> (77 + 15) --> (92 + 2) --> 94", "(11 - 7) --> (4 * 4) --> (16 * 6) --> (96 - 2) --> 94", "(6 / 2) --> (3.0 + 4) --> (7.0 * 15) --> (105.0 - 11) --> 94", "(6 / 2) --> (3.0 + 11) --> (14.0 * 7) --> (98.0 - 4) --> 94", "(7 - 2) --> (5 * 4) --> (20 * 6) --> (120 - 15) --> (105 - 11) --> 94"]}, "target": 94, "n_ways": 33, "round": 1}, "r2": {"n": [6, 10, 12, 15, 19, 20], "how": {"245": ["(15 + 12) --> (27 * 10) --> (270 - 6) --> (264 - 19) --> 245", "(15 * 20) --> (300 - 6) --> (294 * 10) --> (2940 / 12) --> 245", "(12 * 20) --> (240 + 15) --> (255 - 10) --> 245", "(12 + 20) --> (32 - 6) --> (26 * 10) --> (260 - 15) --> 245", "(12 + 6) --> (18 + 19) --> (37 - 20) --> (17 * 15) --> (255 - 10) --> 245", "(12 / 6) --> (2.0 + 19) --> (21.0 * 10) --> (210.0 + 15) --> (225.0 + 20) --> 245", "(20 - 12) --> (8 + 10) --> (18 * 15) --> (270 - 6) --> (264 - 19) --> 245", "(20 + 6) --> (26 * 10) --> (260 - 15) --> 245", "(20 / 10) --> (2.0 + 12) --> (14.0 * 19) --> (266.0 - 15) --> (251.0 - 6) --> 245", "(20 - 10) --> (10 * 19) --> (190 + 6) --> (196 * 15) --> (2940 / 12) --> 245", "(6 + 19) --> (25 - 12) --> (13 * 20) --> (260 - 15) --> 245", "(6 + 19) --> (25 - 10) --> (15 * 15) --> (225 + 20) --> 245", "(10 * 19) --> (190 + 6) --> (196 * 15) --> (2940 / 12) --> 245", "(19 - 6) --> (13 * 20) --> (260 - 15) --> 245"]}, "target": 245, "n_ways": 14, "round": 2}, "r3": {"n": [3, 4, 6, 10, 12, 17], "how": {"305": ["(6 * 17) --> (102 + 3) --> (105 * 12) --> (1260 / 4) --> (315.0 - 10) --> 305", "(6 * 3) --> (18 + 10) --> (28 - 4) --> (24 * 12) --> (288 + 17) --> 305", "(6 / 3) --> (2.0 * 10) --> (20.0 + 4) --> (24.0 * 12) --> (288.0 + 17) --> 305", "(6 + 12) --> (18 * 17) --> (306 + 3) --> (309 - 4) --> 305", "(6 * 12) --> (72 * 4) --> (288 + 17) --> 305", "(6 * 10) --> (60 + 17) --> (77 * 4) --> (308 - 3) --> 305", "(6 * 10) --> (60 + 12) --> (72 * 4) --> (288 + 17) --> 305", "(3 * 10) --> (30 - 6) --> (24 * 12) --> (288 + 17) --> 305", "(12 - 6) --> (6 * 10) --> (60 + 17) --> (77 * 4) --> (308 - 3) --> 305", "(12 * 10) --> (120 - 17) --> (103 * 3) --> (309 - 4) --> 305", "(12 + 10) --> (22 * 3) --> (66 + 6) --> (72 * 4) --> (288 + 17) --> 305", "(12 + 4) --> (16 * 6) --> (96 * 3) --> (288 + 17) --> 305"]}, "target": 305, "n_ways": 12, "round": 3}, "r4": {"n": [4, 7, 8, 11, 19, 25], "how": {"347": ["(19 + 7) --> (26 + 4) --> (30 * 11) --> (330 - 8) --> (322 + 25) --> 347", "(19 + 4) --> (23 + 25) --> (48 * 7) --> (336 + 11) --> 347", "(7 * 25) --> (175 - 11) --> (164 / 4) --> (41.0 * 8) --> (328.0 + 19) --> 347", "(8 + 25) --> (33 * 11) --> (363 - 19) --> (344 + 7) --> (351 - 4) --> 347", "(25 - 19) --> (6 * 7) --> (42 * 8) --> (336 + 11) --> 347", "(11 - 7) --> (4 * 4) --> (16 + 25) --> (41 * 8) --> (328 + 19) --> 347"]}, "target": 347, "n_ways": 6, "round": 4}, "r5": {"n": [4, 6, 8, 11, 16, 19], "how": {"466": ["(8 + 16) --> (24 * 19) --> (456 + 6) --> (462 + 4) --> 466", "(4 * 11) --> (44 + 19) --> (63 + 16) --> (79 * 6) --> (474 - 8) --> 466", "(19 + 11) --> (30 * 16) --> (480 - 6) --> (474 - 8) --> 466"]}, "target": 466, "n_ways": 3, "round": 5}}