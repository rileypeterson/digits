{"puzzleDate": "2024-10-01", "r1": {"n": [2, 4, 6, 9, 10, 13], "how": {"151": ["(4 + 13) --> (17 * 9) --> (153 + 6) --> (159 + 2) --> (161 - 10) --> 151", "(4 + 13) --> (17 * 9) --> (153 - 2) --> 151", "(4 * 13) --> (52 * 6) --> (312 - 10) --> (302 / 2) --> 151", "(4 + 13) --> (17 + 10) --> (27 * 6) --> (162 - 9) --> (153 - 2) --> 151", "(4 + 9) --> (13 * 13) --> (169 - 6) --> (163 - 2) --> (161 - 10) --> 151", "(4 + 9) --> (13 * 10) --> (130 + 13) --> (143 + 6) --> (149 + 2) --> 151", "(4 + 9) --> (13 + 10) --> (23 * 6) --> (138 + 13) --> 151", "(4 * 9) --> (36 + 10) --> (46 * 6) --> (276 / 2) --> (138.0 + 13) --> 151", "(4 / 2) --> (2.0 + 13) --> (15.0 * 9) --> (135.0 + 6) --> (141.0 + 10) --> 151", "(4 * 2) --> (8 + 9) --> (17 * 10) --> (170 - 13) --> (157 - 6) --> 151", "(4 * 10) --> (40 - 13) --> (27 * 6) --> (162 - 9) --> (153 - 2) --> 151", "(4 + 10) --> (14 * 6) --> (84 - 13) --> (71 * 2) --> (142 + 9) --> 151", "(13 * 6) --> (78 * 2) --> (156 + 4) --> (160 - 9) --> 151", "(13 * 6) --> (78 - 10) --> (68 / 4) --> (17.0 * 9) --> (153.0 - 2) --> 151", "(13 - 6) --> (7 + 10) --> (17 * 9) --> (153 - 2) --> 151", "(13 + 2) --> (15 * 9) --> (135 + 6) --> (141 + 10) --> 151", "(13 - 2) --> (11 * 9) --> (99 * 6) --> (594 + 10) --> (604 / 4) --> 151", "(6 - 2) --> (4 * 4) --> (16 * 10) --> (160 - 9) --> 151", "(6 * 2) --> (12 + 4) --> (16 * 10) --> (160 - 9) --> 151", "(6 / 2) --> (3.0 + 13) --> (16.0 * 10) --> (160.0 - 9) --> 151", "(6 + 10) --> (16 / 4) --> (4.0 + 13) --> (17.0 * 9) --> (153.0 - 2) --> 151", "(6 * 10) --> (60 + 9) --> (69 * 2) --> (138 + 13) --> 151", "(2 + 10) --> (12 * 13) --> (156 + 4) --> (160 - 9) --> 151"]}, "target": 151, "n_ways": 23, "round": 1}, "r2": {"n": [3, 5, 6, 8, 11, 17], "how": {"172": ["(6 * 5) --> (30 - 11) --> (19 * 8) --> (152 + 17) --> (169 + 3) --> 172", "(6 * 11) --> (66 + 5) --> (71 - 8) --> (63 * 3) --> (189 - 17) --> 172", "(6 + 11) --> (17 + 3) --> (20 * 8) --> (160 - 5) --> (155 + 17) --> 172", "(6 * 11) --> (66 * 8) --> (528 + 5) --> (533 - 17) --> (516 / 3) --> 172", "(6 + 3) --> (9 * 17) --> (153 + 11) --> (164 + 8) --> 172", "(6 * 3) --> (18 * 8) --> (144 + 11) --> (155 + 17) --> 172", "(6 * 8) --> (48 + 11) --> (59 * 3) --> (177 - 5) --> 172", "(5 + 11) --> (16 + 17) --> (33 - 3) --> (30 * 6) --> (180 - 8) --> 172", "(5 * 11) --> (55 + 8) --> (63 * 3) --> (189 - 17) --> 172", "(17 - 5) --> (12 * 11) --> (132 - 3) --> (129 * 8) --> (1032 / 6) --> 172", "(17 - 11) --> (6 * 6) --> (36 * 5) --> (180 - 8) --> 172"]}, "target": 172, "n_ways": 11, "round": 2}, "r3": {"n": [3, 11, 13, 14, 16, 18], "how": {"335": ["(14 + 16) --> (30 * 11) --> (330 - 13) --> (317 + 18) --> 335", "(14 * 3) --> (42 - 13) --> (29 * 11) --> (319 + 16) --> 335", "(14 + 3) --> (17 * 18) --> (306 + 13) --> (319 + 16) --> 335", "(14 - 3) --> (11 + 18) --> (29 * 11) --> (319 + 16) --> 335", "(14 - 11) --> (3 * 3) --> (9 + 18) --> (27 * 13) --> (351 - 16) --> 335", "(13 + 16) --> (29 - 14) --> (15 + 3) --> (18 * 18) --> (324 + 11) --> 335", "(13 + 16) --> (29 - 3) --> (26 * 14) --> (364 - 11) --> (353 - 18) --> 335", "(13 + 16) --> (29 - 11) --> (18 * 18) --> (324 + 14) --> (338 - 3) --> 335", "(3 * 11) --> (33 - 14) --> (19 * 16) --> (304 + 13) --> (317 + 18) --> 335", "(3 + 18) --> (21 * 16) --> (336 - 14) --> (322 + 13) --> 335"]}, "target": 335, "n_ways": 10, "round": 3}, "r4": {"n": [4, 5, 7, 10, 21, 23], "how": {"449": ["(4 * 5) --> (20 * 23) --> (460 - 21) --> (439 + 10) --> 449", "(4 * 10) --> (40 - 21) --> (19 * 23) --> (437 + 7) --> (444 + 5) --> 449", "(21 + 23) --> (44 * 10) --> (440 + 4) --> (444 + 5) --> 449"]}, "target": 449, "n_ways": 3, "round": 4}, "r5": {"n": [4, 11, 13, 16, 21, 24], "how": {"562": ["(16 + 24) --> (40 + 4) --> (44 * 13) --> (572 - 21) --> (551 + 11) --> 562", "(16 + 24) --> (40 + 13) --> (53 * 11) --> (583 - 21) --> 562", "(16 * 4) --> (64 - 24) --> (40 + 13) --> (53 * 11) --> (583 - 21) --> 562", "(24 + 21) --> (45 * 13) --> (585 - 16) --> (569 + 4) --> (573 - 11) --> 562"]}, "target": 562, "n_ways": 4, "round": 5}}