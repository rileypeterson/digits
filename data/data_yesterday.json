{"puzzleDate": "2025-09-23", "r1": {"n": [4, 8, 10, 12, 13, 15], "how": {"126": ["(15 * 8) --> (120 / 12) --> (10.0 * 13) --> (130.0 - 4) --> 126", "(15 * 8) --> (120 + 12) --> (132 + 4) --> (136 - 10) --> 126", "(15 + 8) --> (23 - 13) --> (10 * 12) --> (120 - 4) --> (116 + 10) --> 126", "(15 + 8) --> (23 * 4) --> (92 + 13) --> (105 * 12) --> (1260 / 10) --> 126", "(15 * 8) --> (120 - 4) --> (116 + 10) --> 126", "(15 + 12) --> (27 - 13) --> (14 * 8) --> (112 + 4) --> (116 + 10) --> 126", "(15 + 12) --> (27 * 4) --> (108 + 8) --> (116 + 10) --> 126", "(15 * 12) --> (180 / 10) --> (18.0 - 8) --> (10.0 * 13) --> (130.0 - 4) --> 126", "(15 * 13) --> (195 + 4) --> (199 - 10) --> (189 * 8) --> (1512 / 12) --> 126", "(15 * 10) --> (150 - 8) --> (142 - 12) --> (130 - 4) --> 126", "(8 + 12) --> (20 - 10) --> (10 * 13) --> (130 - 4) --> 126", "(8 + 13) --> (21 * 15) --> (315 * 4) --> (1260 / 10) --> 126", "(8 * 13) --> (104 + 12) --> (116 + 10) --> 126", "(12 + 4) --> (16 * 8) --> (128 - 15) --> (113 + 13) --> 126", "(12 * 10) --> (120 - 15) --> (105 + 8) --> (113 + 13) --> 126", "(12 * 10) --> (120 + 15) --> (135 - 13) --> (122 + 4) --> 126", "(13 - 12) --> (1 * 15) --> (15 * 8) --> (120 - 4) --> (116 + 10) --> 126", "(13 + 4) --> (17 * 8) --> (136 - 10) --> 126", "(13 - 4) --> (9 * 12) --> (108 + 8) --> (116 + 10) --> 126", "(13 * 10) --> (130 + 8) --> (138 - 12) --> 126", "(13 * 10) --> (130 - 4) --> 126"]}, "target": 126, "n_ways": 21, "round": 1}, "r2": {"n": [5, 10, 13, 15, 16, 18], "how": {"197": ["(5 + 16) --> (21 * 10) --> (210 - 13) --> 197", "(5 + 13) --> (18 * 10) --> (180 - 16) --> (164 + 18) --> (182 + 15) --> 197", "(5 + 10) --> (15 * 13) --> (195 - 16) --> (179 + 18) --> 197", "(5 + 15) --> (20 * 10) --> (200 - 16) --> (184 + 13) --> 197", "(16 * 18) --> (288 * 10) --> (2880 / 15) --> (192.0 + 5) --> 197", "(16 - 13) --> (3 * 5) --> (15 * 15) --> (225 - 18) --> (207 - 10) --> 197", "(16 * 10) --> (160 / 5) --> (32.0 - 18) --> (14.0 * 13) --> (182.0 + 15) --> 197", "(16 * 10) --> (160 / 5) --> (32.0 - 18) --> (14.0 * 15) --> (210.0 - 13) --> 197", "(13 * 15) --> (195 - 16) --> (179 + 18) --> 197", "(10 * 15) --> (150 + 16) --> (166 + 18) --> (184 + 13) --> 197", "(15 / 5) --> (3.0 + 18) --> (21.0 * 10) --> (210.0 - 13) --> 197"]}, "target": 197, "n_ways": 11, "round": 2}, "r3": {"n": [3, 4, 10, 13, 18, 19], "how": {"235": ["(3 + 13) --> (16 - 4) --> (12 * 18) --> (216 + 19) --> 235", "(3 * 4) --> (12 * 18) --> (216 + 19) --> 235", "(13 * 19) --> (247 + 10) --> (257 - 4) --> (253 - 18) --> 235", "(13 - 10) --> (3 * 4) --> (12 * 18) --> (216 + 19) --> 235", "(13 - 4) --> (9 * 10) --> (90 - 18) --> (72 * 3) --> (216 + 19) --> 235", "(13 * 18) --> (234 - 3) --> (231 + 4) --> 235", "(19 + 4) --> (23 * 10) --> (230 - 13) --> (217 + 18) --> 235"]}, "target": 235, "n_ways": 7, "round": 3}, "r4": {"n": [4, 9, 17, 19, 20, 22], "how": {"364": ["(17 * 20) --> (340 + 19) --> (359 + 9) --> (368 - 4) --> 364", "(17 + 20) --> (37 - 19) --> (18 + 22) --> (40 * 9) --> (360 + 4) --> 364", "(17 * 22) --> (374 + 19) --> (393 - 20) --> (373 - 9) --> 364", "(17 * 22) --> (374 - 19) --> (355 + 9) --> 364", "(19 - 17) --> (2 * 20) --> (40 * 9) --> (360 + 4) --> 364", "(22 - 17) --> (5 * 19) --> (95 - 9) --> (86 * 4) --> (344 + 20) --> 364", "(22 - 17) --> (5 * 20) --> (100 - 9) --> (91 * 4) --> 364"]}, "target": 364, "n_ways": 7, "round": 4}, "r5": {"n": [4, 9, 16, 21, 22, 25], "how": {"590": ["(4 * 16) --> (64 + 25) --> (89 - 21) --> (68 * 9) --> (612 - 22) --> 590", "(4 * 21) --> (84 - 16) --> (68 * 9) --> (612 - 22) --> 590", "(21 - 4) --> (17 + 22) --> (39 * 16) --> (624 - 25) --> (599 - 9) --> 590"]}, "target": 590, "n_ways": 3, "round": 5}}