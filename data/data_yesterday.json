{"puzzleDate": "2025-08-10", "r1": {"n": [2, 4, 6, 10, 11, 15], "how": {"145": ["(15 - 6) --> (9 + 4) --> (13 * 11) --> (143 + 2) --> 145", "(15 * 6) --> (90 / 10) --> (9.0 + 4) --> (13.0 * 11) --> (143.0 + 2) --> 145", "(15 * 6) --> (90 - 10) --> (80 * 2) --> (160 - 4) --> (156 - 11) --> 145", "(15 * 4) --> (60 + 10) --> (70 * 2) --> (140 - 6) --> (134 + 11) --> 145", "(15 * 2) --> (30 - 4) --> (26 * 6) --> (156 - 11) --> 145", "(15 - 2) --> (13 + 10) --> (23 * 6) --> (138 - 4) --> (134 + 11) --> 145", "(15 - 2) --> (13 * 10) --> (130 + 4) --> (134 + 11) --> 145", "(15 - 2) --> (13 * 11) --> (143 + 6) --> (149 - 4) --> 145", "(15 + 10) --> (25 * 6) --> (150 + 4) --> (154 + 2) --> (156 - 11) --> 145", "(15 * 10) --> (150 + 6) --> (156 - 11) --> 145", "(15 * 11) --> (165 - 6) --> (159 - 4) --> (155 - 10) --> 145", "(6 + 4) --> (10 / 2) --> (5.0 + 11) --> (16.0 * 10) --> (160.0 - 15) --> 145", "(6 - 4) --> (2 + 11) --> (13 * 10) --> (130 + 15) --> 145", "(6 * 4) --> (24 - 11) --> (13 * 10) --> (130 + 15) --> 145", "(6 + 2) --> (8 * 15) --> (120 + 4) --> (124 + 10) --> (134 + 11) --> 145", "(6 - 2) --> (4 * 4) --> (16 * 10) --> (160 - 15) --> 145", "(6 * 2) --> (12 + 4) --> (16 * 10) --> (160 - 15) --> 145", "(6 + 2) --> (8 / 4) --> (2.0 + 11) --> (13.0 * 10) --> (130.0 + 15) --> 145", "(6 * 11) --> (66 - 2) --> (64 / 4) --> (16.0 * 10) --> (160.0 - 15) --> 145", "(4 / 2) --> (2.0 + 11) --> (13.0 * 10) --> (130.0 + 15) --> 145", "(4 * 10) --> (40 - 11) --> (29 * 15) --> (435 * 2) --> (870 / 6) --> 145", "(4 * 11) --> (44 - 15) --> (29 * 10) --> (290 / 2) --> 145", "(4 + 11) --> (15 * 6) --> (90 - 10) --> (80 * 2) --> (160 - 15) --> 145", "(2 * 10) --> (20 + 11) --> (31 * 4) --> (124 + 15) --> (139 + 6) --> 145", "(2 * 11) --> (22 - 6) --> (16 * 10) --> (160 - 15) --> 145", "(2 + 11) --> (13 * 10) --> (130 + 15) --> 145", "(10 + 11) --> (21 * 6) --> (126 + 15) --> (141 + 4) --> 145", "(11 - 2) --> (9 * 15) --> (135 + 10) --> 145"]}, "target": 145, "n_ways": 28, "round": 1}, "r2": {"n": [3, 6, 7, 9, 16, 18], "how": {"245": ["(3 * 18) --> (54 + 6) --> (60 - 9) --> (51 - 16) --> (35 * 7) --> 245", "(3 * 6) --> (18 + 18) --> (36 * 7) --> (252 + 9) --> (261 - 16) --> 245", "(3 + 6) --> (9 / 9) --> (1.0 + 18) --> (19.0 + 16) --> (35.0 * 7) --> 245", "(3 + 9) --> (12 * 18) --> (216 + 6) --> (222 + 7) --> (229 + 16) --> 245", "(3 + 9) --> (12 * 16) --> (192 + 18) --> (210 / 6) --> (35.0 * 7) --> 245", "(3 * 7) --> (21 - 6) --> (15 * 18) --> (270 - 9) --> (261 - 16) --> 245", "(18 / 3) --> (6.0 * 6) --> (36.0 - 7) --> (29.0 * 9) --> (261.0 - 16) --> 245", "(18 / 3) --> (6.0 * 6) --> (36.0 * 7) --> (252.0 + 9) --> (261.0 - 16) --> 245", "(18 / 3) --> (6.0 + 6) --> (12.0 + 16) --> (28.0 * 9) --> (252.0 - 7) --> 245", "(18 - 6) --> (12 + 16) --> (28 * 9) --> (252 - 7) --> 245", "(18 / 9) --> (2.0 * 16) --> (32.0 + 3) --> (35.0 * 7) --> 245", "(6 * 9) --> (54 - 3) --> (51 - 16) --> (35 * 7) --> 245", "(6 * 16) --> (96 + 9) --> (105 / 3) --> (35.0 * 7) --> 245"]}, "target": 245, "n_ways": 13, "round": 2}, "r3": {"n": [5, 6, 10, 12, 18, 19], "how": {"344": ["(19 * 18) --> (342 - 10) --> (332 + 12) --> 344", "(19 * 10) --> (190 - 18) --> (172 * 12) --> (2064 / 6) --> 344", "(19 - 12) --> (7 * 10) --> (70 * 5) --> (350 - 6) --> 344", "(18 + 10) --> (28 * 12) --> (336 + 19) --> (355 - 6) --> (349 - 5) --> 344", "(18 * 5) --> (90 - 19) --> (71 - 12) --> (59 * 6) --> (354 - 10) --> 344", "(18 + 5) --> (23 + 12) --> (35 * 10) --> (350 - 6) --> 344", "(6 - 5) --> (1 * 19) --> (19 * 18) --> (342 - 10) --> (332 + 12) --> 344", "(6 * 12) --> (72 + 18) --> (90 * 19) --> (1710 + 10) --> (1720 / 5) --> 344"]}, "target": 344, "n_ways": 8, "round": 3}, "r4": {"n": [12, 15, 17, 21, 23, 24], "how": {"411": ["(24 * 17) --> (408 - 12) --> (396 + 15) --> 411", "(12 + 23) --> (35 - 17) --> (18 * 24) --> (432 - 21) --> 411", "(15 + 23) --> (38 * 12) --> (456 - 24) --> (432 - 21) --> 411"]}, "target": 411, "n_ways": 3, "round": 4}, "r5": {"n": [10, 15, 17, 21, 24, 25], "how": {"471": ["(17 + 15) --> (32 - 24) --> (8 + 10) --> (18 * 25) --> (450 + 21) --> 471", "(17 + 24) --> (41 * 10) --> (410 + 15) --> (425 + 21) --> (446 + 25) --> 471", "(17 * 25) --> (425 + 15) --> (440 + 10) --> (450 + 21) --> 471", "(15 + 21) --> (36 - 17) --> (19 * 24) --> (456 - 10) --> (446 + 25) --> 471", "(24 * 21) --> (504 + 17) --> (521 - 15) --> (506 - 10) --> (496 - 25) --> 471"]}, "target": 471, "n_ways": 5, "round": 5}}