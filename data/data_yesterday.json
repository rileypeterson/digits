{"puzzleDate": "2023-12-28", "r1": {"n": [3, 7, 9, 11, 12, 14], "how": {"101": ["(3 + 7) --> (10 * 9) --> (90 + 11) --> 101", "(3 + 7) --> (10 * 11) --> (110 - 9) --> 101", "(3 + 14) --> (17 - 7) --> (10 * 9) --> (90 + 11) --> 101", "(3 + 14) --> (17 - 7) --> (10 * 11) --> (110 - 9) --> 101", "(3 * 9) --> (27 - 7) --> (20 - 12) --> (8 * 14) --> (112 - 11) --> 101", "(3 + 9) --> (12 + 11) --> (23 - 14) --> (9 * 12) --> (108 - 7) --> 101", "(3 + 9) --> (12 / 12) --> (1.0 + 7) --> (8.0 * 14) --> (112.0 - 11) --> 101", "(3 + 11) --> (14 * 7) --> (98 - 9) --> (89 + 12) --> 101", "(3 + 11) --> (14 / 14) --> (1.0 * 9) --> (9.0 * 12) --> (108.0 - 7) --> 101", "(3 + 12) --> (15 - 7) --> (8 * 14) --> (112 - 11) --> 101", "(3 * 12) --> (36 + 9) --> (45 * 14) --> (630 / 7) --> (90.0 + 11) --> 101", "(7 * 14) --> (98 + 3) --> 101", "(7 + 14) --> (21 + 9) --> (30 * 3) --> (90 + 11) --> 101", "(7 * 14) --> (98 - 9) --> (89 + 12) --> 101", "(7 + 14) --> (21 + 12) --> (33 * 3) --> (99 - 9) --> (90 + 11) --> 101", "(7 * 11) --> (77 + 3) --> (80 + 9) --> (89 + 12) --> 101", "(7 * 12) --> (84 + 3) --> (87 + 14) --> 101", "(14 - 3) --> (11 + 9) --> (20 - 11) --> (9 * 12) --> (108 - 7) --> 101", "(14 - 3) --> (11 * 9) --> (99 / 11) --> (9.0 * 12) --> (108.0 - 7) --> 101", "(14 - 11) --> (3 * 3) --> (9 * 12) --> (108 - 7) --> 101", "(9 / 3) --> (3.0 + 12) --> (15.0 - 7) --> (8.0 * 14) --> (112.0 - 11) --> 101", "(9 * 11) --> (99 - 3) --> (96 - 7) --> (89 + 12) --> 101", "(9 * 11) --> (99 + 14) --> (113 - 12) --> 101", "(9 + 11) --> (20 * 12) --> (240 / 3) --> (80.0 + 7) --> (87.0 + 14) --> 101", "(9 * 12) --> (108 - 7) --> 101", "(11 - 3) --> (8 * 12) --> (96 + 14) --> (110 - 9) --> 101", "(12 - 11) --> (1 * 7) --> (7 * 14) --> (98 + 3) --> 101"]}, "target": 101, "n_ways": 27, "round": 1}, "r2": {"n": [3, 8, 9, 12, 14, 16], "how": {"247": ["(16 - 8) --> (8 + 12) --> (20 - 3) --> (17 * 14) --> (238 + 9) --> 247", "(16 / 8) --> (2.0 + 12) --> (14.0 + 3) --> (17.0 * 14) --> (238.0 + 9) --> 247", "(16 - 8) --> (8 * 12) --> (96 - 9) --> (87 * 3) --> (261 - 14) --> 247", "(16 + 12) --> (28 * 8) --> (224 + 14) --> (238 + 9) --> 247", "(16 + 12) --> (28 - 3) --> (25 * 9) --> (225 + 8) --> (233 + 14) --> 247", "(16 + 12) --> (28 * 9) --> (252 - 8) --> (244 + 3) --> 247", "(16 * 14) --> (224 + 8) --> (232 + 12) --> (244 + 3) --> 247", "(16 + 14) --> (30 * 9) --> (270 - 8) --> (262 - 12) --> (250 - 3) --> 247", "(8 + 12) --> (20 - 3) --> (17 * 14) --> (238 + 9) --> 247", "(8 * 12) --> (96 - 9) --> (87 * 3) --> (261 - 14) --> 247", "(8 * 3) --> (24 / 12) --> (2.0 + 14) --> (16.0 * 16) --> (256.0 - 9) --> 247", "(12 + 14) --> (26 * 9) --> (234 + 16) --> (250 - 3) --> 247", "(12 * 9) --> (108 + 14) --> (122 * 16) --> (1952 / 8) --> (244.0 + 3) --> 247", "(14 - 12) --> (2 * 16) --> (32 * 8) --> (256 - 9) --> 247", "(14 * 3) --> (42 - 12) --> (30 * 8) --> (240 + 16) --> (256 - 9) --> 247"]}, "target": 247, "n_ways": 15, "round": 2}, "r3": {"n": [4, 5, 7, 9, 17, 20], "how": {"296": ["(5 * 7) --> (35 - 4) --> (31 * 9) --> (279 + 17) --> 296", "(5 * 9) --> (45 + 7) --> (52 + 17) --> (69 * 4) --> (276 + 20) --> 296", "(5 * 17) --> (85 - 7) --> (78 - 9) --> (69 * 4) --> (276 + 20) --> 296", "(5 + 17) --> (22 - 7) --> (15 * 20) --> (300 - 4) --> 296", "(5 * 17) --> (85 + 9) --> (94 - 20) --> (74 * 4) --> 296", "(5 * 20) --> (100 - 9) --> (91 - 17) --> (74 * 4) --> 296", "(7 + 9) --> (16 * 17) --> (272 + 20) --> (292 + 4) --> 296", "(7 + 17) --> (24 - 9) --> (15 * 20) --> (300 - 4) --> 296", "(9 - 5) --> (4 * 20) --> (80 * 4) --> (320 - 7) --> (313 - 17) --> 296", "(9 + 4) --> (13 * 7) --> (91 - 17) --> (74 * 20) --> (1480 / 5) --> 296", "(17 * 4) --> (68 - 7) --> (61 * 5) --> (305 - 9) --> 296", "(20 / 5) --> (4.0 + 9) --> (13.0 + 4) --> (17.0 * 17) --> (289.0 + 7) --> 296", "(20 - 7) --> (13 * 5) --> (65 + 9) --> (74 * 4) --> 296"]}, "target": 296, "n_ways": 13, "round": 3}, "r4": {"n": [6, 8, 11, 15, 19, 21], "how": {"457": ["(8 * 11) --> (88 - 15) --> (73 * 6) --> (438 + 19) --> 457", "(11 + 19) --> (30 * 15) --> (450 - 8) --> (442 - 6) --> (436 + 21) --> 457", "(15 + 19) --> (34 + 21) --> (55 * 8) --> (440 + 11) --> (451 + 6) --> 457", "(15 + 6) --> (21 * 21) --> (441 + 8) --> (449 - 11) --> (438 + 19) --> 457"]}, "target": 457, "n_ways": 4, "round": 4}, "r5": {"n": [4, 10, 11, 13, 16, 18], "how": {"519": ["(10 + 11) --> (21 + 18) --> (39 * 13) --> (507 + 16) --> (523 - 4) --> 519", "(10 * 4) --> (40 - 11) --> (29 * 18) --> (522 + 13) --> (535 - 16) --> 519", "(13 + 16) --> (29 * 18) --> (522 - 10) --> (512 + 11) --> (523 - 4) --> 519", "(16 * 4) --> (64 - 18) --> (46 * 11) --> (506 + 13) --> 519"]}, "target": 519, "n_ways": 4, "round": 5}}