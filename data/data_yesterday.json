{"puzzleDate": "2023-11-16", "r1": {"n": [3, 6, 8, 10, 12, 15], "how": {"109": ["(10 - 6) --> (4 + 3) --> (7 * 15) --> (105 + 12) --> (117 - 8) --> 109", "(10 + 15) --> (25 + 12) --> (37 * 3) --> (111 + 6) --> (117 - 8) --> 109", "(10 * 15) --> (150 * 8) --> (1200 / 12) --> (100.0 + 6) --> (106.0 + 3) --> 109", "(10 - 3) --> (7 * 15) --> (105 + 12) --> (117 - 8) --> 109", "(10 + 12) --> (22 * 6) --> (132 - 15) --> (117 - 8) --> 109", "(10 * 12) --> (120 - 6) --> (114 + 3) --> (117 - 8) --> 109", "(10 * 12) --> (120 / 15) --> (8.0 + 6) --> (14.0 * 8) --> (112.0 - 3) --> 109", "(10 * 12) --> (120 - 3) --> (117 - 8) --> 109", "(6 * 15) --> (90 + 10) --> (100 - 3) --> (97 + 12) --> 109", "(6 + 15) --> (21 + 12) --> (33 * 3) --> (99 + 10) --> 109", "(6 + 15) --> (21 + 8) --> (29 * 3) --> (87 + 10) --> (97 + 12) --> 109", "(6 + 12) --> (18 - 10) --> (8 * 15) --> (120 - 3) --> (117 - 8) --> 109", "(6 * 8) --> (48 - 15) --> (33 * 3) --> (99 + 10) --> 109", "(12 - 6) --> (6 * 8) --> (48 - 15) --> (33 * 3) --> (99 + 10) --> 109", "(12 * 8) --> (96 + 10) --> (106 + 6) --> (112 - 3) --> 109", "(12 * 8) --> (96 + 10) --> (106 + 3) --> 109"]}, "target": 109, "n_ways": 16, "round": 1}, "r2": {"n": [4, 8, 11, 13, 15, 19], "how": {"219": ["(13 + 15) --> (28 / 4) --> (7.0 + 19) --> (26.0 * 8) --> (208.0 + 11) --> 219", "(13 + 8) --> (21 + 11) --> (32 + 19) --> (51 * 4) --> (204 + 15) --> 219", "(15 - 13) --> (2 + 19) --> (21 * 11) --> (231 - 8) --> (223 - 4) --> 219", "(15 - 8) --> (7 + 11) --> (18 * 13) --> (234 + 4) --> (238 - 19) --> 219", "(15 - 8) --> (7 * 11) --> (77 - 19) --> (58 * 4) --> (232 - 13) --> 219", "(15 + 8) --> (23 - 19) --> (4 * 13) --> (52 * 4) --> (208 + 11) --> 219", "(15 - 11) --> (4 * 13) --> (52 * 4) --> (208 - 8) --> (200 + 19) --> 219", "(8 / 4) --> (2.0 + 11) --> (13.0 * 19) --> (247.0 - 13) --> (234.0 - 15) --> 219", "(8 + 4) --> (12 + 19) --> (31 - 15) --> (16 * 13) --> (208 + 11) --> 219", "(11 + 4) --> (15 * 15) --> (225 + 13) --> (238 - 19) --> 219", "(11 * 4) --> (44 - 15) --> (29 * 8) --> (232 - 13) --> 219", "(11 * 19) --> (209 - 13) --> (196 + 15) --> (211 + 8) --> 219", "(19 - 15) --> (4 * 13) --> (52 * 4) --> (208 + 11) --> 219"]}, "target": 219, "n_ways": 13, "round": 2}, "r3": {"n": [4, 6, 8, 10, 12, 17], "how": {"233": ["(4 + 8) --> (12 + 6) --> (18 * 12) --> (216 + 17) --> 233", "(4 * 10) --> (40 + 8) --> (48 - 12) --> (36 * 6) --> (216 + 17) --> 233", "(4 * 12) --> (48 - 8) --> (40 * 6) --> (240 - 17) --> (223 + 10) --> 233", "(4 * 6) --> (24 / 8) --> (3.0 + 10) --> (13.0 * 17) --> (221.0 + 12) --> 233", "(17 * 6) --> (102 - 12) --> (90 * 10) --> (900 / 4) --> (225.0 + 8) --> 233", "(8 / 4) --> (2.0 + 10) --> (12.0 + 6) --> (18.0 * 12) --> (216.0 + 17) --> 233", "(8 + 10) --> (18 * 12) --> (216 + 17) --> 233"]}, "target": 233, "n_ways": 7, "round": 3}, "r4": {"n": [4, 6, 11, 14, 16, 23], "how": {"369": ["(16 * 23) --> (368 - 6) --> (362 + 4) --> (366 - 11) --> (355 + 14) --> 369", "(16 * 23) --> (368 - 6) --> (362 - 4) --> (358 + 11) --> 369", "(16 * 23) --> (368 + 4) --> (372 + 11) --> (383 - 14) --> 369", "(16 / 4) --> (4.0 * 14) --> (56.0 - 23) --> (33.0 * 11) --> (363.0 + 6) --> 369", "(23 - 4) --> (19 + 14) --> (33 * 11) --> (363 + 6) --> 369", "(4 * 11) --> (44 + 16) --> (60 * 6) --> (360 + 23) --> (383 - 14) --> 369", "(4 * 11) --> (44 - 16) --> (28 * 14) --> (392 - 23) --> 369", "(4 + 11) --> (15 * 23) --> (345 + 16) --> (361 - 6) --> (355 + 14) --> 369", "(4 * 14) --> (56 - 23) --> (33 * 11) --> (363 + 6) --> 369"]}, "target": 369, "n_ways": 9, "round": 4}, "r5": {"n": [6, 9, 13, 16, 23, 25], "how": {"479": ["(6 * 13) --> (78 - 23) --> (55 * 9) --> (495 - 16) --> 479", "(25 - 6) --> (19 + 13) --> (32 + 23) --> (55 * 9) --> (495 - 16) --> 479", "(13 * 9) --> (117 - 25) --> (92 - 16) --> (76 * 6) --> (456 + 23) --> 479", "(23 * 9) --> (207 + 16) --> (223 * 13) --> (2899 - 25) --> (2874 / 6) --> 479"]}, "target": 479, "n_ways": 4, "round": 5}}