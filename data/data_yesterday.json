{"puzzleDate": "2025-03-22", "r1": {"n": [3, 5, 8, 10, 11, 13], "how": {"135": ["(10 * 13) --> (130 + 11) --> (141 + 5) --> (146 - 8) --> (138 - 3) --> 135", "(10 * 13) --> (130 - 11) --> (119 + 5) --> (124 + 8) --> (132 + 3) --> 135", "(10 * 13) --> (130 + 5) --> 135", "(10 * 13) --> (130 / 5) --> (26.0 + 11) --> (37.0 + 8) --> (45.0 * 3) --> 135", "(10 * 13) --> (130 + 8) --> (138 - 3) --> 135", "(10 * 5) --> (50 - 13) --> (37 + 8) --> (45 * 3) --> 135", "(10 + 5) --> (15 - 11) --> (4 * 8) --> (32 + 13) --> (45 * 3) --> 135", "(10 - 8) --> (2 * 11) --> (22 - 13) --> (9 * 5) --> (45 * 3) --> 135", "(10 + 3) --> (13 * 11) --> (143 - 13) --> (130 + 5) --> 135", "(10 + 3) --> (13 * 11) --> (143 - 8) --> 135", "(10 * 3) --> (30 - 11) --> (19 + 8) --> (27 * 5) --> 135", "(13 * 11) --> (143 - 10) --> (133 + 5) --> (138 - 3) --> 135", "(13 + 11) --> (24 * 10) --> (240 / 8) --> (30.0 - 3) --> (27.0 * 5) --> 135", "(13 * 11) --> (143 - 5) --> (138 - 3) --> 135", "(13 * 11) --> (143 - 8) --> 135", "(13 - 11) --> (2 * 8) --> (16 - 3) --> (13 * 10) --> (130 + 5) --> 135", "(13 + 11) --> (24 + 3) --> (27 * 5) --> 135", "(13 - 8) --> (5 * 10) --> (50 - 5) --> (45 * 3) --> 135", "(13 - 8) --> (5 * 11) --> (55 - 10) --> (45 * 3) --> 135", "(13 + 3) --> (16 / 8) --> (2.0 + 11) --> (13.0 * 10) --> (130.0 + 5) --> 135", "(11 * 5) --> (55 - 10) --> (45 * 3) --> 135", "(11 + 5) --> (16 * 8) --> (128 + 10) --> (138 - 3) --> 135", "(11 - 8) --> (3 * 10) --> (30 - 3) --> (27 * 5) --> 135", "(11 - 8) --> (3 / 3) --> (1.0 + 13) --> (14.0 * 10) --> (140.0 - 5) --> 135", "(11 + 3) --> (14 * 10) --> (140 - 13) --> (127 + 8) --> 135", "(11 + 3) --> (14 * 10) --> (140 - 5) --> 135", "(11 + 3) --> (14 * 8) --> (112 + 10) --> (122 + 13) --> 135", "(8 + 3) --> (11 / 11) --> (1.0 + 13) --> (14.0 * 10) --> (140.0 - 5) --> 135"]}, "target": 135, "n_ways": 28, "round": 1}, "r2": {"n": [7, 10, 12, 17, 18, 20], "how": {"208": ["(20 * 17) --> (340 + 18) --> (358 * 7) --> (2506 - 10) --> (2496 / 12) --> 208", "(20 * 17) --> (340 / 10) --> (34.0 * 7) --> (238.0 - 12) --> (226.0 - 18) --> 208", "(20 * 12) --> (240 - 17) --> (223 - 18) --> (205 + 10) --> (215 - 7) --> 208", "(20 + 18) --> (38 - 10) --> (28 * 7) --> (196 + 12) --> 208", "(20 * 10) --> (200 - 17) --> (183 + 18) --> (201 + 7) --> 208", "(17 + 18) --> (35 - 20) --> (15 + 7) --> (22 * 10) --> (220 - 12) --> 208", "(17 * 10) --> (170 + 20) --> (190 + 18) --> 208", "(17 - 10) --> (7 / 7) --> (1.0 + 18) --> (19.0 * 12) --> (228.0 - 20) --> 208", "(17 - 7) --> (10 * 20) --> (200 + 18) --> (218 - 10) --> 208", "(17 + 7) --> (24 * 10) --> (240 - 20) --> (220 - 12) --> 208", "(12 + 7) --> (19 * 10) --> (190 + 18) --> 208", "(18 - 17) --> (1 + 10) --> (11 * 20) --> (220 - 12) --> 208", "(18 - 7) --> (11 * 20) --> (220 - 12) --> 208", "(10 + 7) --> (17 / 17) --> (1.0 + 18) --> (19.0 * 12) --> (228.0 - 20) --> 208"]}, "target": 208, "n_ways": 14, "round": 2}, "r3": {"n": [3, 6, 11, 16, 17, 19], "how": {"300": ["(16 + 17) --> (33 - 6) --> (27 * 11) --> (297 + 3) --> 300", "(16 * 17) --> (272 + 6) --> (278 + 19) --> (297 + 3) --> 300", "(16 * 3) --> (48 - 17) --> (31 + 19) --> (50 * 6) --> 300", "(16 * 3) --> (48 - 11) --> (37 - 19) --> (18 * 17) --> (306 - 6) --> 300", "(17 - 11) --> (6 * 19) --> (114 - 16) --> (98 * 3) --> (294 + 6) --> 300", "(17 + 11) --> (28 + 19) --> (47 + 3) --> (50 * 6) --> 300", "(11 * 3) --> (33 + 17) --> (50 * 6) --> 300", "(19 - 16) --> (3 * 11) --> (33 + 17) --> (50 * 6) --> 300", "(19 - 17) --> (2 * 11) --> (22 * 3) --> (66 - 16) --> (50 * 6) --> 300", "(19 + 3) --> (22 * 17) --> (374 / 11) --> (34.0 + 16) --> (50.0 * 6) --> 300", "(19 + 3) --> (22 / 11) --> (2.0 + 16) --> (18.0 * 17) --> (306.0 - 6) --> 300"]}, "target": 300, "n_ways": 11, "round": 3}, "r4": {"n": [6, 8, 12, 15, 20, 21], "how": {"427": ["(12 + 8) --> (20 * 20) --> (400 + 6) --> (406 + 21) --> 427", "(15 + 20) --> (35 * 12) --> (420 - 6) --> (414 - 8) --> (406 + 21) --> 427", "(15 + 8) --> (23 * 20) --> (460 - 12) --> (448 - 21) --> 427", "(20 * 21) --> (420 / 12) --> (35.0 - 6) --> (29.0 * 15) --> (435.0 - 8) --> 427", "(20 * 21) --> (420 + 15) --> (435 - 8) --> 427", "(8 + 21) --> (29 * 15) --> (435 + 12) --> (447 - 20) --> 427", "(21 - 12) --> (9 * 6) --> (54 * 8) --> (432 + 15) --> (447 - 20) --> 427"]}, "target": 427, "n_ways": 7, "round": 4}, "r5": {"n": [6, 9, 10, 13, 19, 21], "how": {"548": ["(9 * 6) --> (54 * 10) --> (540 + 21) --> (561 - 13) --> 548", "(13 - 10) --> (3 * 9) --> (27 * 21) --> (567 - 19) --> 548", "(13 - 10) --> (3 * 6) --> (18 + 9) --> (27 * 21) --> (567 - 19) --> 548", "(6 + 19) --> (25 * 21) --> (525 + 13) --> (538 + 10) --> 548"]}, "target": 548, "n_ways": 4, "round": 5}}