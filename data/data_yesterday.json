{"puzzleDate": "2024-05-24", "r1": {"n": [2, 3, 6, 8, 10, 13], "how": {"143": ["(3 * 8) --> (24 * 6) --> (144 + 10) --> (154 - 13) --> (141 + 2) --> 143", "(3 * 8) --> (24 + 10) --> (34 / 2) --> (17.0 - 6) --> (11.0 * 13) --> 143", "(3 + 8) --> (11 * 13) --> 143", "(3 * 8) --> (24 * 13) --> (312 - 6) --> (306 / 2) --> (153.0 - 10) --> 143", "(3 * 8) --> (24 + 2) --> (26 * 6) --> (156 - 13) --> 143", "(3 + 8) --> (11 + 2) --> (13 * 10) --> (130 + 13) --> 143", "(3 + 6) --> (9 - 8) --> (1 + 10) --> (11 * 13) --> 143", "(3 * 6) --> (18 + 8) --> (26 * 10) --> (260 / 2) --> (130.0 + 13) --> 143", "(3 + 6) --> (9 + 2) --> (11 * 13) --> 143", "(3 * 10) --> (30 - 8) --> (22 * 6) --> (132 + 13) --> (145 - 2) --> 143", "(3 * 10) --> (30 - 8) --> (22 * 13) --> (286 / 2) --> 143", "(3 + 10) --> (13 * 6) --> (78 * 2) --> (156 - 13) --> 143", "(3 + 10) --> (13 - 2) --> (11 * 13) --> 143", "(3 * 2) --> (6 / 6) --> (1.0 + 10) --> (11.0 * 13) --> 143", "(8 - 3) --> (5 + 6) --> (11 * 13) --> 143", "(8 - 3) --> (5 + 6) --> (11 + 2) --> (13 * 10) --> (130 + 13) --> 143", "(8 - 3) --> (5 + 10) --> (15 - 6) --> (9 + 2) --> (11 * 13) --> 143", "(8 + 6) --> (14 * 10) --> (140 + 3) --> 143", "(8 - 6) --> (2 / 2) --> (1.0 + 10) --> (11.0 * 13) --> 143", "(8 + 6) --> (14 - 2) --> (12 * 13) --> (156 - 3) --> (153 - 10) --> 143", "(8 - 6) --> (2 / 2) --> (1.0 + 13) --> (14.0 * 10) --> (140.0 + 3) --> 143", "(8 / 2) --> (4.0 + 3) --> (7.0 + 6) --> (13.0 * 10) --> (130.0 + 13) --> 143", "(8 * 2) --> (16 - 3) --> (13 * 10) --> (130 + 13) --> 143", "(8 / 2) --> (4.0 - 3) --> (1.0 + 10) --> (11.0 * 13) --> 143", "(8 * 2) --> (16 + 10) --> (26 * 6) --> (156 - 13) --> 143", "(6 - 3) --> (3 + 10) --> (13 - 2) --> (11 * 13) --> 143", "(6 / 3) --> (2.0 / 2) --> (1.0 + 10) --> (11.0 * 13) --> 143", "(6 * 10) --> (60 - 8) --> (52 * 3) --> (156 - 13) --> 143", "(6 + 10) --> (16 * 8) --> (128 + 13) --> (141 + 2) --> 143", "(6 + 10) --> (16 / 2) --> (8.0 + 3) --> (11.0 * 13) --> 143", "(6 + 10) --> (16 * 2) --> (32 + 13) --> (45 * 3) --> (135 + 8) --> 143", "(6 * 13) --> (78 * 2) --> (156 - 3) --> (153 - 10) --> 143", "(6 + 2) --> (8 / 8) --> (1.0 + 10) --> (11.0 * 13) --> 143", "(6 / 2) --> (3.0 + 8) --> (11.0 * 13) --> 143", "(10 + 13) --> (23 * 6) --> (138 + 3) --> (141 + 2) --> 143", "(10 / 2) --> (5.0 + 6) --> (11.0 * 13) --> 143"]}, "target": 143, "n_ways": 36, "round": 1}, "r2": {"n": [4, 7, 14, 17, 19, 20], "how": {"227": ["(17 * 19) --> (323 + 7) --> (330 * 14) --> (4620 / 20) --> (231.0 - 4) --> 227", "(17 + 19) --> (36 + 14) --> (50 * 4) --> (200 + 7) --> (207 + 20) --> 227", "(17 + 19) --> (36 - 20) --> (16 * 14) --> (224 + 7) --> (231 - 4) --> 227", "(17 - 4) --> (13 * 19) --> (247 - 20) --> 227", "(17 - 4) --> (13 * 20) --> (260 - 19) --> (241 - 14) --> 227", "(17 * 14) --> (238 - 7) --> (231 - 4) --> 227", "(19 - 7) --> (12 * 20) --> (240 - 17) --> (223 + 4) --> 227", "(19 - 4) --> (15 * 14) --> (210 + 17) --> 227", "(19 + 14) --> (33 * 7) --> (231 - 4) --> 227", "(19 + 14) --> (33 + 20) --> (53 * 17) --> (901 + 7) --> (908 / 4) --> 227", "(14 - 4) --> (10 * 19) --> (190 + 17) --> (207 + 20) --> 227", "(14 - 4) --> (10 + 20) --> (30 * 7) --> (210 + 17) --> 227", "(20 - 19) --> (1 * 17) --> (17 * 14) --> (238 - 7) --> (231 - 4) --> 227", "(20 - 14) --> (6 * 7) --> (42 + 19) --> (61 * 4) --> (244 - 17) --> 227"]}, "target": 227, "n_ways": 14, "round": 2}, "r3": {"n": [3, 9, 10, 12, 17, 19], "how": {"269": ["(3 + 9) --> (12 + 19) --> (31 - 10) --> (21 * 12) --> (252 + 17) --> 269", "(3 * 10) --> (30 - 9) --> (21 * 12) --> (252 + 17) --> 269", "(3 + 17) --> (20 + 12) --> (32 * 9) --> (288 - 19) --> 269", "(3 + 17) --> (20 * 12) --> (240 + 19) --> (259 + 10) --> 269", "(3 + 12) --> (15 * 19) --> (285 - 9) --> (276 + 10) --> (286 - 17) --> 269", "(9 / 3) --> (3.0 + 17) --> (20.0 * 12) --> (240.0 + 19) --> (259.0 + 10) --> 269", "(9 + 19) --> (28 - 12) --> (16 * 17) --> (272 - 3) --> 269", "(9 + 17) --> (26 * 10) --> (260 - 3) --> (257 + 12) --> 269", "(19 + 12) --> (31 * 9) --> (279 - 10) --> 269", "(10 - 3) --> (7 + 17) --> (24 * 12) --> (288 - 19) --> 269", "(17 - 9) --> (8 * 3) --> (24 * 12) --> (288 - 19) --> 269"]}, "target": 269, "n_ways": 11, "round": 3}, "r4": {"n": [7, 10, 12, 14, 21, 24], "how": {"344": ["(10 + 12) --> (22 * 14) --> (308 - 7) --> (301 * 24) --> (7224 / 21) --> 344", "(14 * 24) --> (336 + 7) --> (343 + 10) --> (353 - 21) --> (332 + 12) --> 344", "(21 - 7) --> (14 * 24) --> (336 + 10) --> (346 - 14) --> (332 + 12) --> 344", "(21 + 12) --> (33 * 10) --> (330 + 14) --> 344", "(21 - 12) --> (9 + 24) --> (33 * 10) --> (330 + 14) --> 344", "(24 - 21) --> (3 * 7) --> (21 + 12) --> (33 * 10) --> (330 + 14) --> 344"]}, "target": 344, "n_ways": 6, "round": 4}, "r5": {"n": [11, 13, 14, 16, 18, 21], "how": {"433": ["(18 - 14) --> (4 + 16) --> (20 * 21) --> (420 + 13) --> 433", "(11 + 16) --> (27 - 18) --> (9 + 21) --> (30 * 14) --> (420 + 13) --> 433", "(11 + 21) --> (32 * 14) --> (448 - 18) --> (430 - 13) --> (417 + 16) --> 433", "(21 - 18) --> (3 * 14) --> (42 * 11) --> (462 - 13) --> (449 - 16) --> 433"]}, "target": 433, "n_ways": 4, "round": 5}}