{"puzzleDate": "2023-11-21", "r1": {"n": [3, 5, 7, 9, 11, 13], "how": {"96": ["(13 * 7) --> (91 + 11) --> (102 - 9) --> (93 + 3) --> 96", "(13 + 7) --> (20 - 3) --> (17 * 5) --> (85 + 11) --> 96", "(13 - 7) --> (6 - 5) --> (1 * 11) --> (11 * 9) --> (99 - 3) --> 96", "(13 - 7) --> (6 * 5) --> (30 + 11) --> (41 - 9) --> (32 * 3) --> 96", "(13 * 7) --> (91 + 5) --> 96", "(13 - 7) --> (6 + 5) --> (11 * 9) --> (99 - 3) --> 96", "(13 + 11) --> (24 - 3) --> (21 * 5) --> (105 - 9) --> 96", "(13 + 11) --> (24 + 5) --> (29 * 3) --> (87 + 9) --> 96", "(13 * 9) --> (117 - 7) --> (110 - 11) --> (99 - 3) --> 96", "(13 + 3) --> (16 * 7) --> (112 - 11) --> (101 - 5) --> 96", "(13 - 3) --> (10 * 11) --> (110 - 9) --> (101 - 5) --> 96", "(13 + 3) --> (16 * 5) --> (80 + 7) --> (87 + 9) --> 96", "(13 + 5) --> (18 / 9) --> (2.0 + 7) --> (9.0 * 11) --> (99.0 - 3) --> 96", "(7 + 11) --> (18 + 9) --> (27 + 5) --> (32 * 3) --> 96", "(7 + 11) --> (18 + 3) --> (21 * 5) --> (105 - 9) --> 96", "(7 * 3) --> (21 - 13) --> (8 + 9) --> (17 * 5) --> (85 + 11) --> 96", "(7 + 3) --> (10 * 11) --> (110 - 9) --> (101 - 5) --> 96", "(7 * 3) --> (21 * 5) --> (105 - 9) --> 96", "(11 * 9) --> (99 - 3) --> 96", "(11 - 5) --> (6 / 3) --> (2.0 + 13) --> (15.0 * 7) --> (105.0 - 9) --> 96", "(9 * 5) --> (45 - 13) --> (32 * 3) --> 96", "(9 + 5) --> (14 * 7) --> (98 - 13) --> (85 + 11) --> 96"]}, "target": 96, "n_ways": 22, "round": 1}, "r2": {"n": [6, 8, 11, 14, 16, 18], "how": {"197": ["(11 + 18) --> (29 * 14) --> (406 * 8) --> (3248 / 16) --> (203.0 - 6) --> 197", "(18 + 6) --> (24 - 14) --> (10 + 16) --> (26 * 8) --> (208 - 11) --> 197", "(18 / 6) --> (3.0 * 14) --> (42.0 - 16) --> (26.0 * 8) --> (208.0 - 11) --> 197", "(18 - 6) --> (12 + 14) --> (26 * 8) --> (208 - 11) --> 197", "(18 + 6) --> (24 * 8) --> (192 - 11) --> (181 + 16) --> 197", "(18 + 6) --> (24 - 8) --> (16 * 14) --> (224 - 11) --> (213 - 16) --> 197", "(18 + 14) --> (32 * 6) --> (192 - 11) --> (181 + 16) --> 197", "(18 - 14) --> (4 * 6) --> (24 * 8) --> (192 - 11) --> (181 + 16) --> 197", "(18 + 8) --> (26 * 6) --> (156 + 11) --> (167 + 14) --> (181 + 16) --> 197", "(6 * 14) --> (84 * 16) --> (1344 / 8) --> (168.0 + 11) --> (179.0 + 18) --> 197", "(6 + 16) --> (22 * 8) --> (176 - 11) --> (165 + 18) --> (183 + 14) --> 197", "(16 - 14) --> (2 * 18) --> (36 * 6) --> (216 - 11) --> (205 - 8) --> 197"]}, "target": 197, "n_ways": 12, "round": 2}, "r3": {"n": [4, 6, 10, 12, 18, 20], "how": {"243": ["(18 - 10) --> (8 * 6) --> (48 * 20) --> (960 + 12) --> (972 / 4) --> 243", "(6 * 20) --> (120 - 18) --> (102 * 10) --> (1020 / 4) --> (255.0 - 12) --> 243", "(20 + 10) --> (30 * 4) --> (120 * 12) --> (1440 + 18) --> (1458 / 6) --> 243"]}, "target": 243, "n_ways": 3, "round": 3}, "r4": {"n": [4, 7, 10, 17, 21, 23], "how": {"454": ["(7 + 17) --> (24 + 21) --> (45 * 10) --> (450 + 4) --> 454", "(17 + 23) --> (40 + 4) --> (44 * 10) --> (440 - 7) --> (433 + 21) --> 454", "(17 + 4) --> (21 * 21) --> (441 + 23) --> (464 - 10) --> 454", "(17 * 4) --> (68 - 21) --> (47 * 10) --> (470 + 7) --> (477 - 23) --> 454", "(10 * 4) --> (40 - 21) --> (19 * 23) --> (437 + 17) --> 454", "(4 * 21) --> (84 - 23) --> (61 * 7) --> (427 + 17) --> (444 + 10) --> 454", "(21 / 7) --> (3.0 + 17) --> (20.0 * 23) --> (460.0 - 10) --> (450.0 + 4) --> 454"]}, "target": 454, "n_ways": 7, "round": 4}, "r5": {"n": [6, 9, 12, 16, 22, 25], "how": {"552": ["(12 * 9) --> (108 - 16) --> (92 * 6) --> 552", "(16 * 9) --> (144 / 6) --> (24.0 + 22) --> (46.0 * 12) --> 552", "(22 - 16) --> (6 + 25) --> (31 + 9) --> (40 + 6) --> (46 * 12) --> 552", "(22 * 25) --> (550 + 12) --> (562 - 16) --> (546 + 6) --> 552"]}, "target": 552, "n_ways": 4, "round": 5}}