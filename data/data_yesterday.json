{"puzzleDate": "2024-01-15", "r1": {"n": [2, 4, 7, 9, 10, 14], "how": {"95": ["(4 + 10) --> (14 * 7) --> (98 - 14) --> (84 + 9) --> (93 + 2) --> 95", "(4 + 14) --> (18 - 9) --> (9 * 10) --> (90 + 7) --> (97 - 2) --> 95", "(4 * 14) --> (56 * 2) --> (112 - 10) --> (102 - 7) --> 95", "(4 + 9) --> (13 * 7) --> (91 - 10) --> (81 + 14) --> 95", "(4 + 9) --> (13 + 2) --> (15 * 7) --> (105 - 10) --> 95", "(4 * 7) --> (28 + 10) --> (38 + 14) --> (52 * 2) --> (104 - 9) --> 95", "(4 * 7) --> (28 - 10) --> (18 * 9) --> (162 / 2) --> (81.0 + 14) --> 95", "(4 * 7) --> (28 - 9) --> (19 * 10) --> (190 / 2) --> 95", "(4 + 7) --> (11 - 2) --> (9 * 9) --> (81 + 14) --> 95", "(4 * 2) --> (8 + 9) --> (17 * 7) --> (119 - 10) --> (109 - 14) --> 95", "(4 / 2) --> (2.0 + 7) --> (9.0 * 10) --> (90.0 + 14) --> (104.0 - 9) --> 95", "(4 / 2) --> (2.0 + 7) --> (9.0 * 9) --> (81.0 + 14) --> 95", "(10 - 4) --> (6 * 14) --> (84 + 9) --> (93 + 2) --> 95", "(10 * 14) --> (140 / 4) --> (35.0 + 9) --> (44.0 * 2) --> (88.0 + 7) --> 95", "(10 + 14) --> (24 * 7) --> (168 + 4) --> (172 / 2) --> (86.0 + 9) --> 95", "(10 + 14) --> (24 - 2) --> (22 * 4) --> (88 + 7) --> 95", "(10 * 9) --> (90 + 14) --> (104 - 7) --> (97 - 2) --> 95", "(10 * 9) --> (90 + 7) --> (97 - 2) --> 95", "(10 * 7) --> (70 - 4) --> (66 - 14) --> (52 * 2) --> (104 - 9) --> 95", "(10 * 7) --> (70 + 14) --> (84 + 9) --> (93 + 2) --> 95", "(10 / 2) --> (5.0 + 4) --> (9.0 * 9) --> (81.0 + 14) --> 95", "(14 - 4) --> (10 * 10) --> (100 - 7) --> (93 + 2) --> 95", "(14 - 4) --> (10 + 9) --> (19 * 10) --> (190 / 2) --> 95", "(14 - 4) --> (10 * 9) --> (90 + 7) --> (97 - 2) --> 95", "(14 - 10) --> (4 + 7) --> (11 * 9) --> (99 - 4) --> 95", "(14 - 7) --> (7 * 4) --> (28 - 9) --> (19 * 10) --> (190 / 2) --> 95", "(14 + 7) --> (21 * 4) --> (84 + 9) --> (93 + 2) --> 95", "(14 / 7) --> (2.0 / 2) --> (1.0 + 10) --> (11.0 * 9) --> (99.0 - 4) --> 95", "(14 - 2) --> (12 * 9) --> (108 + 4) --> (112 - 10) --> (102 - 7) --> 95", "(7 + 2) --> (9 * 10) --> (90 + 14) --> (104 - 9) --> 95", "(7 + 2) --> (9 * 9) --> (81 + 4) --> (85 + 10) --> 95", "(7 + 2) --> (9 * 9) --> (81 + 14) --> 95"]}, "target": 95, "n_ways": 32, "round": 1}, "r2": {"n": [5, 7, 10, 15, 17, 18], "how": {"203": ["(18 * 7) --> (126 - 17) --> (109 * 10) --> (1090 / 5) --> (218.0 - 15) --> 203", "(18 + 7) --> (25 - 10) --> (15 * 15) --> (225 - 17) --> (208 - 5) --> 203", "(18 + 15) --> (33 - 17) --> (16 + 5) --> (21 * 10) --> (210 - 7) --> 203", "(18 - 15) --> (3 * 5) --> (15 + 7) --> (22 * 10) --> (220 - 17) --> 203", "(18 + 5) --> (23 * 7) --> (161 + 15) --> (176 + 17) --> (193 + 10) --> 203", "(18 + 10) --> (28 * 7) --> (196 - 15) --> (181 + 17) --> (198 + 5) --> 203", "(18 * 10) --> (180 / 15) --> (12.0 + 17) --> (29.0 * 7) --> 203", "(7 + 15) --> (22 * 10) --> (220 - 17) --> 203", "(15 - 7) --> (8 * 5) --> (40 - 18) --> (22 * 10) --> (220 - 17) --> 203", "(15 - 7) --> (8 + 5) --> (13 * 17) --> (221 - 18) --> 203", "(15 + 17) --> (32 + 10) --> (42 * 5) --> (210 - 7) --> 203", "(15 / 5) --> (3.0 + 18) --> (21.0 * 10) --> (210.0 - 7) --> 203", "(15 / 5) --> (3.0 * 10) --> (30.0 - 18) --> (12.0 + 17) --> (29.0 * 7) --> 203", "(15 / 5) --> (3.0 + 10) --> (13.0 * 17) --> (221.0 - 18) --> 203", "(17 * 10) --> (170 + 18) --> (188 + 15) --> 203"]}, "target": 203, "n_ways": 15, "round": 2}, "r3": {"n": [3, 9, 13, 14, 16, 20], "how": {"248": ["(13 - 3) --> (10 + 16) --> (26 * 9) --> (234 + 14) --> 248", "(13 * 20) --> (260 - 9) --> (251 - 3) --> 248", "(13 * 16) --> (208 + 9) --> (217 - 3) --> (214 + 14) --> (228 + 20) --> 248", "(3 + 14) --> (17 * 16) --> (272 - 13) --> (259 + 9) --> (268 - 20) --> 248", "(14 * 20) --> (280 - 13) --> (267 - 3) --> (264 - 16) --> 248", "(14 * 16) --> (224 + 13) --> (237 - 9) --> (228 + 20) --> 248", "(20 - 14) --> (6 * 16) --> (96 - 9) --> (87 * 3) --> (261 - 13) --> 248"]}, "target": 248, "n_ways": 7, "round": 3}, "r4": {"n": [6, 9, 13, 14, 17, 23], "how": {"464": ["(9 * 6) --> (54 - 23) --> (31 * 14) --> (434 + 13) --> (447 + 17) --> 464", "(13 - 9) --> (4 * 23) --> (92 - 17) --> (75 * 6) --> (450 + 14) --> 464", "(13 * 6) --> (78 - 23) --> (55 * 9) --> (495 - 17) --> (478 - 14) --> 464", "(23 + 14) --> (37 * 13) --> (481 - 17) --> 464", "(14 + 6) --> (20 * 23) --> (460 - 9) --> (451 + 13) --> 464", "(14 + 6) --> (20 * 23) --> (460 - 13) --> (447 + 17) --> 464"]}, "target": 464, "n_ways": 6, "round": 4}, "r5": {"n": [4, 6, 9, 10, 12, 19], "how": {"463": ["(6 * 19) --> (114 * 4) --> (456 + 10) --> (466 - 12) --> (454 + 9) --> 463", "(6 * 4) --> (24 + 10) --> (34 - 9) --> (25 * 19) --> (475 - 12) --> 463", "(6 + 10) --> (16 + 9) --> (25 * 19) --> (475 - 12) --> 463", "(6 * 12) --> (72 - 19) --> (53 * 9) --> (477 - 4) --> (473 - 10) --> 463", "(10 * 12) --> (120 - 9) --> (111 * 4) --> (444 + 19) --> 463"]}, "target": 463, "n_ways": 5, "round": 5}}