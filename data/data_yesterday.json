{"puzzleDate": "2024-02-01", "r1": {"n": [6, 7, 10, 12, 14, 15], "how": {"160": ["(12 * 15) --> (180 - 14) --> (166 - 6) --> 160", "(12 * 15) --> (180 / 6) --> (30.0 - 14) --> (16.0 * 10) --> 160", "(12 * 15) --> (180 / 10) --> (18.0 - 7) --> (11.0 * 14) --> (154.0 + 6) --> 160", "(12 * 14) --> (168 + 15) --> (183 - 6) --> (177 - 10) --> (167 - 7) --> 160", "(12 * 14) --> (168 - 15) --> (153 + 7) --> 160", "(12 - 6) --> (6 * 15) --> (90 - 10) --> (80 * 14) --> (1120 / 7) --> 160", "(12 / 6) --> (2.0 + 14) --> (16.0 * 10) --> 160", "(12 / 6) --> (2.0 + 10) --> (12.0 * 14) --> (168.0 - 15) --> (153.0 + 7) --> 160", "(12 / 6) --> (2.0 * 7) --> (14.0 / 14) --> (1.0 + 15) --> (16.0 * 10) --> 160", "(12 * 10) --> (120 / 15) --> (8.0 + 14) --> (22.0 * 7) --> (154.0 + 6) --> 160", "(12 - 10) --> (2 * 14) --> (28 * 6) --> (168 - 15) --> (153 + 7) --> 160", "(12 + 10) --> (22 * 7) --> (154 + 6) --> 160", "(12 + 10) --> (22 + 7) --> (29 * 6) --> (174 - 14) --> 160", "(12 - 7) --> (5 * 6) --> (30 - 14) --> (16 * 10) --> 160", "(15 - 12) --> (3 + 14) --> (17 + 6) --> (23 - 7) --> (16 * 10) --> 160", "(15 - 12) --> (3 + 6) --> (9 + 7) --> (16 * 10) --> 160", "(15 - 14) --> (1 * 12) --> (12 + 10) --> (22 * 7) --> (154 + 6) --> 160", "(15 + 14) --> (29 - 6) --> (23 - 7) --> (16 * 10) --> 160", "(15 * 6) --> (90 - 10) --> (80 * 14) --> (1120 / 7) --> 160", "(15 - 6) --> (9 - 7) --> (2 * 14) --> (28 - 12) --> (16 * 10) --> 160", "(15 - 6) --> (9 + 7) --> (16 * 10) --> 160", "(15 - 7) --> (8 * 12) --> (96 / 6) --> (16.0 * 10) --> 160", "(14 + 6) --> (20 * 12) --> (240 / 15) --> (16.0 * 10) --> 160", "(14 * 10) --> (140 + 12) --> (152 + 15) --> (167 - 7) --> 160", "(6 + 7) --> (13 * 14) --> (182 - 12) --> (170 - 10) --> 160"]}, "target": 160, "n_ways": 25, "round": 1}, "r2": {"n": [6, 9, 11, 12, 14, 20], "how": {"202": ["(20 * 11) --> (220 - 6) --> (214 - 12) --> 202", "(20 - 11) --> (9 + 9) --> (18 * 12) --> (216 - 14) --> 202", "(20 - 6) --> (14 * 12) --> (168 + 11) --> (179 + 9) --> (188 + 14) --> 202", "(20 * 14) --> (280 + 11) --> (291 + 12) --> (303 * 6) --> (1818 / 9) --> 202", "(20 + 14) --> (34 * 6) --> (204 - 11) --> (193 + 9) --> 202", "(11 - 9) --> (2 + 12) --> (14 * 14) --> (196 + 6) --> 202", "(11 * 12) --> (132 / 6) --> (22.0 - 9) --> (13.0 * 14) --> (182.0 + 20) --> 202", "(11 + 12) --> (23 + 14) --> (37 * 6) --> (222 - 20) --> 202", "(6 + 9) --> (15 * 14) --> (210 - 20) --> (190 + 12) --> 202", "(6 + 12) --> (18 / 9) --> (2.0 + 11) --> (13.0 * 14) --> (182.0 + 20) --> 202", "(12 / 6) --> (2.0 + 11) --> (13.0 * 14) --> (182.0 + 20) --> 202"]}, "target": 202, "n_ways": 11, "round": 2}, "r3": {"n": [3, 8, 10, 12, 15, 17], "how": {"293": ["(10 + 12) --> (22 - 3) --> (19 * 15) --> (285 + 8) --> 293", "(10 * 3) --> (30 - 15) --> (15 + 8) --> (23 * 12) --> (276 + 17) --> 293", "(10 * 8) --> (80 + 12) --> (92 * 3) --> (276 + 17) --> 293", "(12 - 10) --> (2 + 17) --> (19 * 15) --> (285 + 8) --> 293", "(12 + 17) --> (29 * 10) --> (290 + 3) --> 293", "(12 * 3) --> (36 - 17) --> (19 * 15) --> (285 + 8) --> 293", "(12 * 3) --> (36 * 8) --> (288 - 10) --> (278 + 15) --> 293", "(17 + 8) --> (25 * 12) --> (300 - 10) --> (290 + 3) --> 293", "(15 / 3) --> (5.0 + 10) --> (15.0 + 8) --> (23.0 * 12) --> (276.0 + 17) --> 293", "(15 + 8) --> (23 * 12) --> (276 + 17) --> 293", "(15 - 8) --> (7 * 12) --> (84 + 17) --> (101 * 3) --> (303 - 10) --> 293"]}, "target": 293, "n_ways": 11, "round": 3}, "r4": {"n": [5, 9, 14, 15, 19, 24], "how": {"362": ["(24 - 5) --> (19 * 19) --> (361 + 15) --> (376 - 14) --> 362", "(24 + 14) --> (38 * 9) --> (342 + 5) --> (347 + 15) --> 362"]}, "target": 362, "n_ways": 2, "round": 4}, "r5": {"n": [8, 11, 13, 21, 24, 25], "how": {"537": ["(13 + 11) --> (24 * 21) --> (504 + 25) --> (529 + 8) --> 537", "(13 + 25) --> (38 + 21) --> (59 - 8) --> (51 * 11) --> (561 - 24) --> 537", "(24 * 21) --> (504 + 25) --> (529 + 8) --> 537", "(21 - 13) --> (8 * 11) --> (88 - 24) --> (64 * 8) --> (512 + 25) --> 537"]}, "target": 537, "n_ways": 4, "round": 5}}