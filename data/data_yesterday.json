{"puzzleDate": "2023-12-04", "r1": {"n": [2, 4, 5, 10, 12, 15], "how": {"151": ["(2 + 15) --> (17 - 4) --> (13 * 12) --> (156 + 5) --> (161 - 10) --> 151", "(2 + 15) --> (17 - 4) --> (13 * 12) --> (156 - 5) --> 151", "(2 + 15) --> (17 + 10) --> (27 * 5) --> (135 + 4) --> (139 + 12) --> 151", "(2 + 15) --> (17 + 10) --> (27 + 12) --> (39 * 4) --> (156 - 5) --> 151", "(2 * 4) --> (8 + 15) --> (23 - 10) --> (13 * 12) --> (156 - 5) --> 151", "(2 * 4) --> (8 + 5) --> (13 * 12) --> (156 - 15) --> (141 + 10) --> 151", "(2 * 12) --> (24 + 15) --> (39 * 4) --> (156 - 5) --> 151", "(2 + 12) --> (14 * 10) --> (140 + 15) --> (155 - 4) --> 151", "(2 * 12) --> (24 + 10) --> (34 * 4) --> (136 + 15) --> 151", "(15 - 2) --> (13 * 12) --> (156 - 5) --> 151", "(15 - 2) --> (13 * 12) --> (156 + 5) --> (161 - 10) --> 151", "(15 * 5) --> (75 * 4) --> (300 - 10) --> (290 + 12) --> (302 / 2) --> 151", "(15 * 10) --> (150 + 2) --> (152 - 5) --> (147 + 4) --> 151", "(15 * 10) --> (150 - 2) --> (148 - 5) --> (143 - 4) --> (139 + 12) --> 151", "(15 * 10) --> (150 + 5) --> (155 - 4) --> 151", "(15 + 10) --> (25 * 12) --> (300 / 2) --> (150.0 + 5) --> (155.0 - 4) --> 151", "(5 + 12) --> (17 * 2) --> (34 * 4) --> (136 + 15) --> 151", "(5 + 12) --> (17 * 10) --> (170 - 15) --> (155 - 4) --> 151", "(4 + 10) --> (14 * 12) --> (168 - 2) --> (166 - 15) --> 151", "(4 * 12) --> (48 + 15) --> (63 + 10) --> (73 * 2) --> (146 + 5) --> 151", "(10 - 4) --> (6 * 15) --> (90 - 12) --> (78 * 2) --> (156 - 5) --> 151", "(12 / 2) --> (6.0 + 5) --> (11.0 * 15) --> (165.0 - 4) --> (161.0 - 10) --> 151"]}, "target": 151, "n_ways": 22, "round": 1}, "r2": {"n": [6, 9, 13, 14, 16, 18], "how": {"159": ["(9 * 16) --> (144 + 14) --> (158 + 13) --> (171 - 18) --> (153 + 6) --> 159", "(9 * 18) --> (162 - 16) --> (146 + 13) --> 159", "(9 * 18) --> (162 + 16) --> (178 - 13) --> (165 - 6) --> 159", "(9 + 18) --> (27 - 14) --> (13 * 13) --> (169 - 16) --> (153 + 6) --> 159", "(9 + 18) --> (27 * 6) --> (162 - 16) --> (146 + 13) --> 159", "(16 + 14) --> (30 - 13) --> (17 * 9) --> (153 + 6) --> 159", "(14 - 6) --> (8 * 16) --> (128 + 13) --> (141 + 18) --> 159", "(13 + 18) --> (31 - 14) --> (17 * 9) --> (153 + 6) --> 159", "(13 + 6) --> (19 * 16) --> (304 + 14) --> (318 * 9) --> (2862 / 18) --> 159", "(18 - 16) --> (2 * 14) --> (28 * 6) --> (168 - 9) --> 159", "(18 - 6) --> (12 * 14) --> (168 - 9) --> 159"]}, "target": 159, "n_ways": 11, "round": 2}, "r3": {"n": [4, 5, 7, 9, 15, 16], "how": {"312": ["(9 * 5) --> (45 * 7) --> (315 - 15) --> (300 - 4) --> (296 + 16) --> 312", "(9 * 5) --> (45 + 15) --> (60 - 16) --> (44 * 7) --> (308 + 4) --> 312", "(9 * 7) --> (63 + 15) --> (78 * 4) --> 312", "(9 * 7) --> (63 + 15) --> (78 * 16) --> (1248 / 4) --> 312", "(5 * 15) --> (75 + 7) --> (82 * 4) --> (328 - 16) --> 312", "(5 * 16) --> (80 - 9) --> (71 + 7) --> (78 * 4) --> 312", "(5 + 16) --> (21 * 15) --> (315 - 7) --> (308 + 4) --> 312", "(7 * 4) --> (28 + 5) --> (33 * 9) --> (297 + 15) --> 312", "(7 + 16) --> (23 * 15) --> (345 / 5) --> (69.0 + 9) --> (78.0 * 4) --> 312", "(4 + 16) --> (20 * 15) --> (300 + 5) --> (305 + 7) --> 312"]}, "target": 312, "n_ways": 10, "round": 3}, "r4": {"n": [4, 11, 12, 16, 18, 21], "how": {"386": ["(12 / 4) --> (3.0 + 16) --> (19.0 + 18) --> (37.0 * 11) --> (407.0 - 21) --> 386", "(12 + 11) --> (23 * 16) --> (368 + 18) --> 386", "(4 * 11) --> (44 - 21) --> (23 * 16) --> (368 + 18) --> 386", "(4 * 11) --> (44 - 21) --> (23 * 18) --> (414 - 12) --> (402 - 16) --> 386", "(18 * 21) --> (378 - 12) --> (366 + 16) --> (382 + 4) --> 386", "(18 * 21) --> (378 + 12) --> (390 - 4) --> 386", "(11 + 21) --> (32 * 12) --> (384 + 16) --> (400 + 4) --> (404 - 18) --> 386", "(11 + 21) --> (32 * 12) --> (384 - 16) --> (368 + 18) --> 386"]}, "target": 386, "n_ways": 8, "round": 4}, "r5": {"n": [7, 8, 10, 12, 15, 20], "how": {"589": ["(10 + 8) --> (18 + 20) --> (38 * 15) --> (570 + 12) --> (582 + 7) --> 589"]}, "target": 589, "n_ways": 1, "round": 5}}