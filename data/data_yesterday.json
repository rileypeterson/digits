{"puzzleDate": "2023-09-30", "r1": {"n": [2, 4, 6, 8, 12, 15], "how": {"133": ["(2 + 8) --> (10 * 12) --> (120 + 4) --> (124 - 6) --> (118 + 15) --> 133", "(2 * 8) --> (16 + 12) --> (28 * 4) --> (112 + 6) --> (118 + 15) --> 133", "(2 + 12) --> (14 * 8) --> (112 + 6) --> (118 + 15) --> 133", "(2 * 12) --> (24 - 6) --> (18 * 8) --> (144 + 4) --> (148 - 15) --> 133", "(2 * 12) --> (24 * 6) --> (144 + 4) --> (148 - 15) --> 133", "(8 - 2) --> (6 + 6) --> (12 * 12) --> (144 + 4) --> (148 - 15) --> 133", "(8 * 12) --> (96 * 4) --> (384 + 15) --> (399 * 2) --> (798 / 6) --> 133", "(8 + 12) --> (20 * 6) --> (120 - 2) --> (118 + 15) --> 133", "(8 * 6) --> (48 - 12) --> (36 / 4) --> (9.0 * 15) --> (135.0 - 2) --> 133", "(8 + 15) --> (23 * 12) --> (276 - 4) --> (272 - 6) --> (266 / 2) --> 133", "(12 / 2) --> (6.0 * 6) --> (36.0 * 15) --> (540.0 - 8) --> (532.0 / 4) --> 133", "(12 * 4) --> (48 + 2) --> (50 * 15) --> (750 / 6) --> (125.0 + 8) --> 133", "(12 * 4) --> (48 * 6) --> (288 + 8) --> (296 / 2) --> (148.0 - 15) --> 133", "(12 / 4) --> (3.0 + 6) --> (9.0 * 15) --> (135.0 - 2) --> 133", "(12 + 6) --> (18 * 8) --> (144 + 4) --> (148 - 15) --> 133", "(12 * 6) --> (72 / 8) --> (9.0 * 15) --> (135.0 - 2) --> 133", "(12 + 6) --> (18 * 15) --> (270 - 8) --> (262 + 4) --> (266 / 2) --> 133", "(4 / 2) --> (2.0 + 12) --> (14.0 * 8) --> (112.0 + 6) --> (118.0 + 15) --> 133", "(4 + 6) --> (10 * 12) --> (120 - 2) --> (118 + 15) --> 133"]}, "target": 133, "n_ways": 19, "round": 1}, "r2": {"n": [4, 7, 10, 12, 15, 20], "how": {"221": ["(4 + 10) --> (14 + 20) --> (34 - 15) --> (19 * 12) --> (228 - 7) --> 221", "(4 * 12) --> (48 - 20) --> (28 * 7) --> (196 + 10) --> (206 + 15) --> 221", "(4 * 12) --> (48 - 15) --> (33 * 7) --> (231 + 10) --> (241 - 20) --> 221", "(4 * 12) --> (48 - 15) --> (33 * 7) --> (231 - 10) --> 221", "(4 + 20) --> (24 * 10) --> (240 - 12) --> (228 - 7) --> 221", "(4 + 15) --> (19 * 12) --> (228 - 7) --> 221", "(10 + 12) --> (22 - 7) --> (15 * 15) --> (225 - 4) --> 221", "(10 + 12) --> (22 + 20) --> (42 + 15) --> (57 * 4) --> (228 - 7) --> 221", "(10 + 20) --> (30 * 7) --> (210 - 4) --> (206 + 15) --> 221", "(12 - 10) --> (2 + 20) --> (22 - 7) --> (15 * 15) --> (225 - 4) --> 221", "(12 * 20) --> (240 - 4) --> (236 - 15) --> 221", "(12 * 15) --> (180 + 4) --> (184 + 10) --> (194 + 7) --> (201 + 20) --> 221", "(7 + 20) --> (27 - 12) --> (15 * 15) --> (225 - 4) --> 221", "(20 - 4) --> (16 * 15) --> (240 - 12) --> (228 - 7) --> 221", "(20 / 10) --> (2.0 + 12) --> (14.0 * 15) --> (210.0 + 4) --> (214.0 + 7) --> 221"]}, "target": 221, "n_ways": 15, "round": 2}, "r3": {"n": [4, 6, 9, 11, 15, 20], "how": {"274": ["(6 + 15) --> (21 + 20) --> (41 - 11) --> (30 * 9) --> (270 + 4) --> 274", "(6 + 9) --> (15 * 20) --> (300 - 15) --> (285 - 11) --> 274", "(6 * 9) --> (54 * 20) --> (1080 / 4) --> (270.0 + 15) --> (285.0 - 11) --> 274", "(6 + 9) --> (15 + 4) --> (19 * 15) --> (285 - 11) --> 274", "(6 * 4) --> (24 - 9) --> (15 * 20) --> (300 - 15) --> (285 - 11) --> 274", "(15 + 9) --> (24 * 11) --> (264 - 6) --> (258 + 20) --> (278 - 4) --> 274", "(15 + 9) --> (24 * 11) --> (264 + 6) --> (270 + 4) --> 274", "(15 * 20) --> (300 - 6) --> (294 - 9) --> (285 - 11) --> 274", "(15 * 4) --> (60 - 11) --> (49 * 6) --> (294 - 20) --> 274", "(9 - 6) --> (3 + 20) --> (23 - 4) --> (19 * 15) --> (285 - 11) --> 274", "(9 + 20) --> (29 - 11) --> (18 * 15) --> (270 + 4) --> 274", "(20 - 15) --> (5 * 6) --> (30 * 9) --> (270 + 4) --> 274"]}, "target": 274, "n_ways": 12, "round": 3}, "r4": {"n": [4, 8, 11, 14, 19, 24], "how": {"465": ["(24 * 19) --> (456 + 11) --> (467 - 14) --> (453 + 4) --> (457 + 8) --> 465", "(24 + 19) --> (43 * 11) --> (473 - 8) --> 465"]}, "target": 465, "n_ways": 2, "round": 4}, "r5": {"n": [10, 12, 15, 17, 20, 23], "how": {"591": ["(15 + 20) --> (35 + 17) --> (52 * 12) --> (624 - 23) --> (601 - 10) --> 591", "(15 + 12) --> (27 * 23) --> (621 - 10) --> (611 - 20) --> 591"]}, "target": 591, "n_ways": 2, "round": 5}}
