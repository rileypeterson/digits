{"puzzleDate": "2025-05-27", "r1": {"n": [3, 6, 8, 10, 11, 13], "how": {"112": ["(11 + 3) --> (14 * 8) --> 112", "(11 - 3) --> (8 + 6) --> (14 * 8) --> 112", "(11 + 3) --> (14 - 6) --> (8 * 13) --> (104 + 8) --> 112", "(11 * 3) --> (33 - 6) --> (27 - 13) --> (14 * 8) --> 112", "(11 - 3) --> (8 * 13) --> (104 + 8) --> 112", "(11 - 3) --> (8 * 13) --> (104 - 8) --> (96 + 6) --> (102 + 10) --> 112", "(11 + 8) --> (19 + 13) --> (32 * 3) --> (96 + 6) --> (102 + 10) --> 112", "(11 * 8) --> (88 * 13) --> (1144 + 6) --> (1150 / 10) --> (115.0 - 3) --> 112", "(11 + 6) --> (17 - 13) --> (4 * 3) --> (12 * 10) --> (120 - 8) --> 112", "(11 + 6) --> (17 + 13) --> (30 + 10) --> (40 * 3) --> (120 - 8) --> 112", "(11 + 6) --> (17 - 13) --> (4 + 10) --> (14 * 8) --> 112", "(11 * 13) --> (143 - 3) --> (140 * 8) --> (1120 / 10) --> 112", "(11 + 13) --> (24 / 3) --> (8.0 + 6) --> (14.0 * 8) --> 112", "(11 + 13) --> (24 / 6) --> (4.0 + 10) --> (14.0 * 8) --> 112", "(11 + 13) --> (24 - 10) --> (14 * 8) --> 112", "(11 * 10) --> (110 - 3) --> (107 - 8) --> (99 + 13) --> 112", "(11 + 10) --> (21 / 3) --> (7.0 - 6) --> (1.0 + 13) --> (14.0 * 8) --> 112", "(11 * 10) --> (110 + 8) --> (118 - 6) --> 112", "(3 + 8) --> (11 * 10) --> (110 - 11) --> (99 + 13) --> 112", "(3 + 6) --> (9 * 11) --> (99 + 13) --> 112", "(3 * 6) --> (18 - 10) --> (8 * 13) --> (104 + 8) --> 112", "(3 + 13) --> (16 * 8) --> (128 - 6) --> (122 - 10) --> 112", "(8 + 13) --> (21 * 6) --> (126 - 11) --> (115 - 3) --> 112", "(8 + 13) --> (21 - 10) --> (11 * 11) --> (121 - 3) --> (118 - 6) --> 112", "(8 + 10) --> (18 * 11) --> (198 * 3) --> (594 / 6) --> (99.0 + 13) --> 112", "(8 * 10) --> (80 - 11) --> (69 - 13) --> (56 * 6) --> (336 / 3) --> 112", "(13 - 11) --> (2 * 6) --> (12 * 10) --> (120 - 8) --> 112"]}, "target": 112, "n_ways": 27, "round": 1}, "r2": {"n": [4, 7, 8, 10, 13, 17], "how": {"202": ["(7 + 8) --> (15 * 13) --> (195 - 10) --> (185 + 17) --> 202", "(7 + 4) --> (11 * 17) --> (187 + 10) --> (197 - 8) --> (189 + 13) --> 202", "(7 * 4) --> (28 - 17) --> (11 + 13) --> (24 * 8) --> (192 + 10) --> 202", "(7 + 4) --> (11 + 13) --> (24 * 8) --> (192 + 10) --> 202", "(7 + 17) --> (24 * 8) --> (192 + 10) --> 202", "(7 + 17) --> (24 - 8) --> (16 * 13) --> (208 - 10) --> (198 + 4) --> 202", "(7 * 17) --> (119 - 13) --> (106 * 8) --> (848 / 4) --> (212.0 - 10) --> 202", "(7 * 13) --> (91 + 10) --> (101 * 8) --> (808 / 4) --> 202", "(10 * 4) --> (40 - 8) --> (32 - 17) --> (15 * 13) --> (195 + 7) --> 202", "(10 * 17) --> (170 + 7) --> (177 + 8) --> (185 + 4) --> (189 + 13) --> 202", "(10 + 17) --> (27 * 7) --> (189 + 13) --> 202", "(8 * 4) --> (32 - 17) --> (15 * 13) --> (195 + 7) --> 202", "(4 + 17) --> (21 * 10) --> (210 - 8) --> 202", "(17 + 13) --> (30 * 7) --> (210 - 8) --> 202", "(17 * 13) --> (221 - 7) --> (214 - 8) --> (206 - 4) --> 202", "(13 - 7) --> (6 * 8) --> (48 * 4) --> (192 + 10) --> 202"]}, "target": 202, "n_ways": 16, "round": 2}, "r3": {"n": [3, 5, 8, 12, 15, 19], "how": {"238": ["(19 + 15) --> (34 + 12) --> (46 * 5) --> (230 + 8) --> 238", "(19 * 3) --> (57 - 15) --> (42 + 8) --> (50 * 5) --> (250 - 12) --> 238", "(19 * 12) --> (228 + 15) --> (243 + 3) --> (246 - 8) --> 238", "(19 * 12) --> (228 + 15) --> (243 - 5) --> 238", "(19 * 12) --> (228 - 3) --> (225 + 8) --> (233 + 5) --> 238", "(19 + 12) --> (31 * 8) --> (248 - 15) --> (233 + 5) --> 238", "(19 + 5) --> (24 * 15) --> (360 - 3) --> (357 * 8) --> (2856 / 12) --> 238", "(15 + 3) --> (18 * 12) --> (216 + 19) --> (235 + 8) --> (243 - 5) --> 238", "(15 + 12) --> (27 * 8) --> (216 + 19) --> (235 + 3) --> 238", "(3 + 12) --> (15 * 15) --> (225 + 8) --> (233 + 5) --> 238", "(12 / 3) --> (4.0 + 8) --> (12.0 * 19) --> (228.0 + 15) --> (243.0 - 5) --> 238", "(12 * 8) --> (96 - 15) --> (81 * 3) --> (243 - 5) --> 238", "(12 * 5) --> (60 + 8) --> (68 * 3) --> (204 + 19) --> (223 + 15) --> 238"]}, "target": 238, "n_ways": 13, "round": 3}, "r4": {"n": [4, 7, 10, 15, 16, 24], "how": {"454": ["(10 * 7) --> (70 - 16) --> (54 - 24) --> (30 * 15) --> (450 + 4) --> 454", "(4 * 7) --> (28 + 15) --> (43 * 10) --> (430 + 24) --> 454", "(4 * 15) --> (60 - 24) --> (36 - 7) --> (29 * 16) --> (464 - 10) --> 454", "(16 - 10) --> (6 + 24) --> (30 * 15) --> (450 + 4) --> 454", "(16 / 4) --> (4.0 * 7) --> (28.0 + 15) --> (43.0 * 10) --> (430.0 + 24) --> 454", "(7 * 15) --> (105 + 10) --> (115 * 16) --> (1840 - 24) --> (1816 / 4) --> 454"]}, "target": 454, "n_ways": 6, "round": 4}, "r5": {"n": [5, 8, 10, 11, 13, 21], "how": {"591": ["(13 + 10) --> (23 + 5) --> (28 * 21) --> (588 + 11) --> (599 - 8) --> 591", "(13 + 5) --> (18 + 11) --> (29 * 21) --> (609 - 10) --> (599 - 8) --> 591", "(13 * 5) --> (65 - 8) --> (57 * 10) --> (570 + 21) --> 591", "(13 * 8) --> (104 + 10) --> (114 * 5) --> (570 + 21) --> 591"]}, "target": 591, "n_ways": 4, "round": 5}}