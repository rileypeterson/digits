{"puzzleDate": "2025-10-04", "r1": {"n": [2, 6, 7, 9, 12, 14], "how": {"88": ["(7 + 9) --> (16 / 2) --> (8.0 * 12) --> (96.0 + 6) --> (102.0 - 14) --> 88", "(7 * 9) --> (63 - 12) --> (51 * 2) --> (102 - 14) --> 88", "(7 * 9) --> (63 - 6) --> (57 * 2) --> (114 - 12) --> (102 - 14) --> 88", "(7 * 2) --> (14 - 9) --> (5 + 12) --> (17 * 6) --> (102 - 14) --> 88", "(7 * 2) --> (14 - 9) --> (5 * 14) --> (70 + 12) --> (82 + 6) --> 88", "(7 + 2) --> (9 * 12) --> (108 - 6) --> (102 - 14) --> 88", "(7 - 2) --> (5 * 14) --> (70 + 12) --> (82 + 6) --> 88", "(7 * 12) --> (84 - 2) --> (82 + 6) --> 88", "(7 * 12) --> (84 / 14) --> (6.0 + 9) --> (15.0 * 6) --> (90.0 - 2) --> 88", "(7 * 6) --> (42 + 9) --> (51 * 2) --> (102 - 14) --> 88", "(7 * 6) --> (42 - 12) --> (30 + 14) --> (44 * 2) --> 88", "(7 * 14) --> (98 + 2) --> (100 - 12) --> 88", "(9 * 12) --> (108 - 6) --> (102 - 14) --> 88", "(9 * 14) --> (126 / 2) --> (63.0 + 7) --> (70.0 + 12) --> (82.0 + 6) --> 88", "(2 * 12) --> (24 - 7) --> (17 * 6) --> (102 - 14) --> 88", "(2 * 14) --> (28 + 7) --> (35 + 9) --> (44 * 12) --> (528 / 6) --> 88", "(12 * 6) --> (72 + 7) --> (79 + 9) --> 88", "(12 * 6) --> (72 - 7) --> (65 + 9) --> (74 + 14) --> 88", "(12 + 6) --> (18 * 9) --> (162 / 2) --> (81.0 + 7) --> 88", "(12 + 6) --> (18 * 9) --> (162 + 14) --> (176 / 2) --> 88", "(12 * 6) --> (72 - 2) --> (70 * 9) --> (630 - 14) --> (616 / 7) --> 88", "(12 * 6) --> (72 + 2) --> (74 + 14) --> 88", "(12 - 6) --> (6 * 14) --> (84 - 7) --> (77 + 9) --> (86 + 2) --> 88", "(12 + 14) --> (26 * 7) --> (182 - 6) --> (176 / 2) --> 88", "(6 * 14) --> (84 - 7) --> (77 + 9) --> (86 + 2) --> 88"]}, "target": 88, "n_ways": 25, "round": 1}, "r2": {"n": [8, 9, 12, 16, 19, 20], "how": {"237": ["(20 + 16) --> (36 - 19) --> (17 + 8) --> (25 * 9) --> (225 + 12) --> 237", "(20 - 16) --> (4 + 8) --> (12 * 19) --> (228 + 9) --> 237", "(20 - 9) --> (11 * 19) --> (209 + 16) --> (225 + 12) --> 237", "(20 * 12) --> (240 + 16) --> (256 - 19) --> 237", "(20 - 12) --> (8 + 8) --> (16 * 16) --> (256 - 19) --> 237", "(20 + 12) --> (32 * 8) --> (256 - 19) --> 237", "(20 * 8) --> (160 - 16) --> (144 * 19) --> (2736 / 12) --> (228.0 + 9) --> 237", "(20 - 8) --> (12 * 16) --> (192 * 12) --> (2304 / 9) --> (256.0 - 19) --> 237", "(20 + 8) --> (28 * 9) --> (252 + 16) --> (268 - 19) --> (249 - 12) --> 237", "(20 - 8) --> (12 * 19) --> (228 + 9) --> 237", "(16 - 12) --> (4 * 8) --> (32 - 20) --> (12 * 19) --> (228 + 9) --> 237", "(16 - 12) --> (4 + 8) --> (12 * 19) --> (228 + 9) --> 237", "(16 / 8) --> (2.0 + 12) --> (14.0 * 19) --> (266.0 - 20) --> (246.0 - 9) --> 237", "(19 * 12) --> (228 + 9) --> 237", "(19 + 12) --> (31 * 8) --> (248 - 20) --> (228 + 9) --> 237", "(12 - 8) --> (4 * 9) --> (36 - 20) --> (16 * 16) --> (256 - 19) --> 237"]}, "target": 237, "n_ways": 16, "round": 2}, "r3": {"n": [5, 12, 14, 15, 17, 19], "how": {"246": ["(19 * 14) --> (266 + 12) --> (278 - 17) --> (261 - 15) --> 246", "(19 * 14) --> (266 - 5) --> (261 - 15) --> 246", "(19 * 12) --> (228 - 14) --> (214 + 17) --> (231 + 15) --> 246", "(19 + 12) --> (31 - 15) --> (16 * 14) --> (224 + 17) --> (241 + 5) --> 246", "(14 * 17) --> (238 - 12) --> (226 + 5) --> (231 + 15) --> 246", "(14 * 15) --> (210 + 19) --> (229 + 12) --> (241 + 5) --> 246", "(14 * 15) --> (210 + 19) --> (229 + 17) --> 246", "(17 + 5) --> (22 * 12) --> (264 - 19) --> (245 - 14) --> (231 + 15) --> 246", "(17 * 15) --> (255 - 14) --> (241 + 5) --> 246", "(15 - 12) --> (3 * 14) --> (42 * 5) --> (210 + 19) --> (229 + 17) --> 246", "(15 / 5) --> (3.0 + 12) --> (15.0 * 14) --> (210.0 + 19) --> (229.0 + 17) --> 246"]}, "target": 246, "n_ways": 11, "round": 3}, "r4": {"n": [6, 14, 15, 18, 20, 25], "how": {"416": ["(6 + 25) --> (31 * 14) --> (434 - 18) --> 416", "(6 + 15) --> (21 * 20) --> (420 + 14) --> (434 - 18) --> 416", "(18 / 6) --> (3.0 + 15) --> (18.0 * 25) --> (450.0 - 14) --> (436.0 - 20) --> 416", "(18 * 25) --> (450 - 14) --> (436 - 20) --> 416", "(18 - 15) --> (3 * 6) --> (18 * 25) --> (450 - 14) --> (436 - 20) --> 416"]}, "target": 416, "n_ways": 5, "round": 4}, "r5": {"n": [4, 8, 10, 19, 21, 22], "how": {"582": ["(22 - 19) --> (3 * 21) --> (63 - 4) --> (59 * 10) --> (590 - 8) --> 582"]}, "target": 582, "n_ways": 1, "round": 5}}