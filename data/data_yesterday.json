{"puzzleDate": "2025-01-07", "r1": {"n": [2, 4, 6, 8, 11, 15], "how": {"111": ["(8 + 4) --> (12 * 11) --> (132 - 15) --> (117 - 6) --> 111", "(8 / 4) --> (2.0 * 11) --> (22.0 + 15) --> (37.0 * 6) --> (222.0 / 2) --> 111", "(8 * 4) --> (32 - 11) --> (21 * 6) --> (126 - 15) --> 111", "(8 + 4) --> (12 + 11) --> (23 - 2) --> (21 * 6) --> (126 - 15) --> 111", "(8 * 4) --> (32 - 15) --> (17 * 6) --> (102 + 11) --> (113 - 2) --> 111", "(8 / 4) --> (2.0 + 15) --> (17.0 * 6) --> (102.0 + 11) --> (113.0 - 2) --> 111", "(8 * 4) --> (32 + 15) --> (47 * 2) --> (94 + 11) --> (105 + 6) --> 111", "(8 * 4) --> (32 * 6) --> (192 / 2) --> (96.0 + 15) --> 111", "(8 * 11) --> (88 + 4) --> (92 + 15) --> (107 + 6) --> (113 - 2) --> 111", "(8 * 11) --> (88 + 15) --> (103 + 6) --> (109 + 2) --> 111", "(8 + 11) --> (19 + 2) --> (21 * 6) --> (126 - 15) --> 111", "(8 + 15) --> (23 * 4) --> (92 + 11) --> (103 + 6) --> (109 + 2) --> 111", "(8 * 15) --> (120 + 4) --> (124 - 11) --> (113 - 2) --> 111", "(8 * 15) --> (120 - 11) --> (109 + 2) --> 111", "(8 + 15) --> (23 + 2) --> (25 * 4) --> (100 + 11) --> 111", "(8 + 15) --> (23 - 2) --> (21 * 6) --> (126 - 4) --> (122 - 11) --> 111", "(8 * 6) --> (48 + 4) --> (52 + 11) --> (63 * 2) --> (126 - 15) --> 111", "(8 * 6) --> (48 * 2) --> (96 + 4) --> (100 + 11) --> 111", "(8 * 6) --> (48 * 2) --> (96 + 15) --> 111", "(8 * 2) --> (16 - 4) --> (12 * 11) --> (132 - 15) --> (117 - 6) --> 111", "(8 + 2) --> (10 * 4) --> (40 * 15) --> (600 / 6) --> (100.0 + 11) --> 111", "(8 / 2) --> (4.0 + 15) --> (19.0 + 6) --> (25.0 * 4) --> (100.0 + 11) --> 111", "(4 + 11) --> (15 - 8) --> (7 * 15) --> (105 + 6) --> 111", "(4 * 11) --> (44 + 8) --> (52 - 15) --> (37 * 6) --> (222 / 2) --> 111", "(4 * 11) --> (44 * 2) --> (88 + 8) --> (96 + 15) --> 111", "(4 + 6) --> (10 + 2) --> (12 * 8) --> (96 + 15) --> 111", "(4 - 2) --> (2 * 8) --> (16 * 6) --> (96 + 15) --> 111", "(4 * 2) --> (8 + 8) --> (16 * 6) --> (96 + 15) --> 111", "(11 - 4) --> (7 * 15) --> (105 + 6) --> 111", "(11 * 2) --> (22 + 15) --> (37 * 4) --> (148 * 6) --> (888 / 8) --> 111", "(15 - 4) --> (11 * 11) --> (121 - 8) --> (113 - 2) --> 111"]}, "target": 111, "n_ways": 31, "round": 1}, "r2": {"n": [3, 5, 6, 8, 15, 19], "how": {"226": ["(6 * 15) --> (90 + 5) --> (95 * 19) --> (1805 + 3) --> (1808 / 8) --> 226", "(6 * 15) --> (90 - 19) --> (71 * 3) --> (213 + 5) --> (218 + 8) --> 226", "(6 * 15) --> (90 * 8) --> (720 / 3) --> (240.0 + 5) --> (245.0 - 19) --> 226", "(6 + 8) --> (14 * 15) --> (210 + 19) --> (229 - 3) --> 226", "(5 * 15) --> (75 - 6) --> (69 * 3) --> (207 + 19) --> 226", "(5 + 15) --> (20 + 19) --> (39 * 6) --> (234 - 8) --> 226", "(5 * 19) --> (95 - 15) --> (80 * 3) --> (240 - 6) --> (234 - 8) --> 226", "(5 + 8) --> (13 * 19) --> (247 - 6) --> (241 - 15) --> 226", "(5 * 8) --> (40 - 3) --> (37 * 6) --> (222 - 15) --> (207 + 19) --> 226", "(15 - 6) --> (9 + 19) --> (28 * 8) --> (224 + 5) --> (229 - 3) --> 226", "(15 / 3) --> (5.0 + 5) --> (10.0 + 19) --> (29.0 * 8) --> (232.0 - 6) --> 226", "(15 - 3) --> (12 * 19) --> (228 + 6) --> (234 - 8) --> 226", "(19 - 3) --> (16 * 15) --> (240 - 6) --> (234 - 8) --> 226"]}, "target": 226, "n_ways": 13, "round": 2}, "r3": {"n": [3, 5, 6, 13, 16, 19], "how": {"354": ["(16 + 6) --> (22 + 5) --> (27 * 13) --> (351 + 3) --> 354", "(16 * 5) --> (80 + 6) --> (86 + 19) --> (105 + 13) --> (118 * 3) --> 354", "(16 - 5) --> (11 * 13) --> (143 - 6) --> (137 - 19) --> (118 * 3) --> 354", "(16 - 3) --> (13 * 5) --> (65 - 19) --> (46 + 13) --> (59 * 6) --> 354", "(16 * 3) --> (48 + 5) --> (53 + 19) --> (72 - 13) --> (59 * 6) --> 354", "(16 + 3) --> (19 * 19) --> (361 + 6) --> (367 - 13) --> 354", "(6 / 3) --> (2.0 + 5) --> (7.0 + 19) --> (26.0 * 13) --> (338.0 + 16) --> 354", "(5 + 19) --> (24 * 3) --> (72 - 13) --> (59 * 6) --> 354", "(3 + 19) --> (22 * 16) --> (352 - 6) --> (346 - 5) --> (341 + 13) --> 354"]}, "target": 354, "n_ways": 9, "round": 3}, "r4": {"n": [8, 10, 12, 19, 20, 23], "how": {"378": ["(12 + 23) --> (35 * 10) --> (350 + 8) --> (358 + 20) --> 378", "(12 + 20) --> (32 + 10) --> (42 * 8) --> (336 + 23) --> (359 + 19) --> 378", "(8 + 20) --> (28 - 12) --> (16 * 23) --> (368 + 10) --> 378", "(8 + 20) --> (28 * 12) --> (336 + 23) --> (359 + 19) --> 378", "(23 - 8) --> (15 + 19) --> (34 * 12) --> (408 - 20) --> (388 - 10) --> 378", "(20 * 19) --> (380 - 12) --> (368 + 10) --> 378", "(20 * 19) --> (380 + 8) --> (388 - 10) --> 378"]}, "target": 378, "n_ways": 7, "round": 4}, "r5": {"n": [4, 5, 8, 10, 14, 17], "how": {"551": ["(8 + 10) --> (18 + 4) --> (22 + 17) --> (39 * 14) --> (546 + 5) --> 551", "(8 * 10) --> (80 + 14) --> (94 + 17) --> (111 * 5) --> (555 - 4) --> 551", "(8 / 4) --> (2.0 * 14) --> (28.0 + 5) --> (33.0 * 17) --> (561.0 - 10) --> 551", "(8 + 5) --> (13 * 10) --> (130 * 4) --> (520 + 14) --> (534 + 17) --> 551", "(10 * 4) --> (40 * 14) --> (560 + 8) --> (568 - 17) --> 551", "(5 + 14) --> (19 * 8) --> (152 - 10) --> (142 * 4) --> (568 - 17) --> 551"]}, "target": 551, "n_ways": 6, "round": 5}}