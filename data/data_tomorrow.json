{"puzzleDate": "2023-12-29", "r1": {"n": [5, 6, 8, 10, 12, 15], "how": {"153": ["(8 + 10) --> (18 + 15) --> (33 * 5) --> (165 - 12) --> 153", "(8 + 10) --> (18 + 5) --> (23 * 6) --> (138 + 15) --> 153", "(8 * 10) --> (80 / 5) --> (16.0 + 12) --> (28.0 * 6) --> (168.0 - 15) --> 153", "(8 + 6) --> (14 * 12) --> (168 - 10) --> (158 - 5) --> 153", "(8 + 6) --> (14 * 12) --> (168 - 15) --> 153", "(8 - 6) --> (2 + 15) --> (17 * 10) --> (170 - 12) --> (158 - 5) --> 153", "(8 * 6) --> (48 - 15) --> (33 * 5) --> (165 - 12) --> 153", "(8 * 12) --> (96 + 6) --> (102 * 15) --> (1530 / 10) --> 153", "(8 + 12) --> (20 * 15) --> (300 + 6) --> (306 * 5) --> (1530 / 10) --> 153", "(8 * 15) --> (120 + 10) --> (130 + 6) --> (136 + 12) --> (148 + 5) --> 153", "(8 - 5) --> (3 * 10) --> (30 * 6) --> (180 - 12) --> (168 - 15) --> 153", "(10 - 6) --> (4 + 12) --> (16 + 5) --> (21 * 8) --> (168 - 15) --> 153", "(10 + 6) --> (16 + 5) --> (21 * 8) --> (168 - 15) --> 153", "(10 + 6) --> (16 - 5) --> (11 * 15) --> (165 - 12) --> 153", "(10 * 15) --> (150 + 8) --> (158 - 5) --> 153", "(10 / 5) --> (2.0 + 15) --> (17.0 * 6) --> (102.0 * 12) --> (1224.0 / 8) --> 153", "(6 + 12) --> (18 - 5) --> (13 * 10) --> (130 + 8) --> (138 + 15) --> 153", "(6 + 15) --> (21 * 8) --> (168 - 10) --> (158 - 5) --> 153", "(6 + 5) --> (11 * 15) --> (165 - 12) --> 153", "(12 + 15) --> (27 * 5) --> (135 + 8) --> (143 + 10) --> 153", "(12 + 5) --> (17 * 6) --> (102 * 15) --> (1530 / 10) --> 153"]}, "target": 153, "n_ways": 21, "round": 1}, "r2": {"n": [5, 6, 10, 16, 18, 19], "how": {"149": ["(16 + 5) --> (21 + 10) --> (31 * 6) --> (186 - 19) --> (167 - 18) --> 149", "(16 * 10) --> (160 - 5) --> (155 - 6) --> 149", "(16 + 10) --> (26 * 5) --> (130 + 19) --> 149", "(16 - 10) --> (6 + 19) --> (25 * 5) --> (125 + 6) --> (131 + 18) --> 149", "(16 - 10) --> (6 + 18) --> (24 * 6) --> (144 + 5) --> 149", "(16 * 19) --> (304 - 6) --> (298 * 5) --> (1490 / 10) --> 149", "(16 * 19) --> (304 - 18) --> (286 * 5) --> (1430 / 10) --> (143.0 + 6) --> 149", "(5 * 19) --> (95 * 18) --> (1710 / 10) --> (171.0 - 16) --> (155.0 - 6) --> 149", "(10 * 6) --> (60 - 16) --> (44 - 18) --> (26 * 5) --> (130 + 19) --> 149", "(10 + 18) --> (28 * 6) --> (168 - 19) --> 149", "(10 + 18) --> (28 - 19) --> (9 * 16) --> (144 + 5) --> 149", "(6 + 18) --> (24 * 5) --> (120 + 10) --> (130 + 19) --> 149", "(19 - 10) --> (9 * 16) --> (144 + 5) --> 149", "(19 - 18) --> (1 * 16) --> (16 * 10) --> (160 - 5) --> (155 - 6) --> 149", "(18 - 16) --> (2 * 10) --> (20 + 6) --> (26 * 5) --> (130 + 19) --> 149", "(18 - 5) --> (13 * 10) --> (130 + 19) --> 149", "(18 - 5) --> (13 - 6) --> (7 * 19) --> (133 + 16) --> 149"]}, "target": 149, "n_ways": 17, "round": 2}, "r3": {"n": [4, 6, 8, 11, 15, 16], "how": {"307": ["(6 + 16) --> (22 * 15) --> (330 - 11) --> (319 - 8) --> (311 - 4) --> 307", "(6 + 16) --> (22 + 15) --> (37 * 8) --> (296 + 11) --> 307", "(6 + 11) --> (17 + 4) --> (21 * 15) --> (315 - 16) --> (299 + 8) --> 307", "(6 + 11) --> (17 + 4) --> (21 * 15) --> (315 - 8) --> 307", "(6 * 15) --> (90 - 16) --> (74 * 4) --> (296 + 11) --> 307", "(6 - 4) --> (2 * 16) --> (32 - 11) --> (21 * 15) --> (315 - 8) --> 307", "(6 * 4) --> (24 + 15) --> (39 * 8) --> (312 - 16) --> (296 + 11) --> 307", "(16 - 6) --> (10 + 11) --> (21 * 15) --> (315 - 8) --> 307", "(16 / 4) --> (4.0 + 6) --> (10.0 + 11) --> (21.0 * 15) --> (315.0 - 8) --> 307", "(15 + 4) --> (19 * 16) --> (304 + 11) --> (315 - 8) --> 307", "(15 * 4) --> (60 - 8) --> (52 * 6) --> (312 - 16) --> (296 + 11) --> 307"]}, "target": 307, "n_ways": 11, "round": 3}, "r4": {"n": [4, 8, 10, 17, 22, 23], "how": {"346": ["(10 + 23) --> (33 + 17) --> (50 - 4) --> (46 * 8) --> (368 - 22) --> 346", "(10 + 23) --> (33 * 22) --> (726 * 4) --> (2904 / 8) --> (363.0 - 17) --> 346", "(10 * 4) --> (40 + 23) --> (63 - 17) --> (46 * 8) --> (368 - 22) --> 346", "(23 + 17) --> (40 - 8) --> (32 * 10) --> (320 + 22) --> (342 + 4) --> 346", "(23 + 17) --> (40 * 8) --> (320 + 22) --> (342 + 4) --> 346", "(23 + 22) --> (45 * 8) --> (360 - 10) --> (350 - 4) --> 346"]}, "target": 346, "n_ways": 6, "round": 4}, "r5": {"n": [5, 9, 12, 15, 18, 19], "how": {"515": ["(18 + 19) --> (37 - 12) --> (25 + 9) --> (34 * 15) --> (510 + 5) --> 515"]}, "target": 515, "n_ways": 1, "round": 5}}