{"puzzleDate": "2024-04-02", "r1": {"n": [2, 3, 5, 8, 11, 15], "how": {"114": ["(5 * 8) --> (40 + 2) --> (42 - 15) --> (27 + 11) --> (38 * 3) --> 114", "(5 * 8) --> (40 - 2) --> (38 * 3) --> 114", "(5 * 8) --> (40 * 3) --> (120 - 2) --> (118 - 15) --> (103 + 11) --> 114", "(5 - 2) --> (3 * 11) --> (33 * 3) --> (99 + 15) --> 114", "(5 - 2) --> (3 / 3) --> (1.0 + 8) --> (9.0 * 11) --> (99.0 + 15) --> 114", "(5 + 15) --> (20 * 8) --> (160 + 11) --> (171 * 2) --> (342 / 3) --> 114", "(5 + 15) --> (20 * 11) --> (220 + 8) --> (228 / 2) --> 114", "(5 * 15) --> (75 - 11) --> (64 - 3) --> (61 * 2) --> (122 - 8) --> 114", "(5 * 15) --> (75 * 3) --> (225 - 8) --> (217 + 11) --> (228 / 2) --> 114", "(5 + 11) --> (16 * 8) --> (128 - 2) --> (126 - 15) --> (111 + 3) --> 114", "(5 * 11) --> (55 - 2) --> (53 - 15) --> (38 * 3) --> 114", "(5 + 3) --> (8 * 15) --> (120 - 8) --> (112 + 2) --> 114", "(8 - 5) --> (3 * 11) --> (33 * 3) --> (99 + 15) --> 114", "(8 + 2) --> (10 + 15) --> (25 * 5) --> (125 - 11) --> 114", "(8 - 2) --> (6 + 3) --> (9 * 11) --> (99 + 15) --> 114", "(8 * 15) --> (120 - 5) --> (115 + 2) --> (117 - 3) --> 114", "(8 * 15) --> (120 + 5) --> (125 - 11) --> 114", "(8 + 11) --> (19 * 2) --> (38 * 15) --> (570 / 5) --> 114", "(8 + 11) --> (19 * 2) --> (38 * 3) --> 114", "(8 + 3) --> (11 * 11) --> (121 - 5) --> (116 - 2) --> 114", "(2 * 15) --> (30 + 8) --> (38 * 3) --> 114", "(2 * 15) --> (30 * 3) --> (90 + 5) --> (95 + 8) --> (103 + 11) --> 114", "(2 + 3) --> (5 / 5) --> (1.0 + 8) --> (9.0 * 11) --> (99.0 + 15) --> 114", "(15 - 3) --> (12 * 8) --> (96 + 5) --> (101 + 2) --> (103 + 11) --> 114", "(11 + 3) --> (14 * 8) --> (112 + 2) --> 114", "(11 - 3) --> (8 * 15) --> (120 - 8) --> (112 + 2) --> 114"]}, "target": 114, "n_ways": 26, "round": 1}, "r2": {"n": [3, 6, 8, 9, 15, 20], "how": {"181": ["(9 + 15) --> (24 * 8) --> (192 + 6) --> (198 + 3) --> (201 - 20) --> 181", "(9 * 6) --> (54 + 8) --> (62 * 3) --> (186 + 15) --> (201 - 20) --> 181", "(9 - 6) --> (3 + 20) --> (23 * 8) --> (184 - 3) --> 181", "(9 * 3) --> (27 * 8) --> (216 - 15) --> (201 - 20) --> 181", "(9 * 20) --> (180 + 15) --> (195 - 6) --> (189 - 8) --> 181", "(9 + 20) --> (29 * 6) --> (174 + 15) --> (189 - 8) --> 181", "(9 * 20) --> (180 + 6) --> (186 + 3) --> (189 - 8) --> 181", "(15 + 6) --> (21 * 9) --> (189 - 8) --> 181", "(6 - 3) --> (3 * 9) --> (27 * 8) --> (216 - 15) --> (201 - 20) --> 181", "(6 * 3) --> (18 + 9) --> (27 * 8) --> (216 - 15) --> (201 - 20) --> 181", "(6 / 3) --> (2.0 + 15) --> (17.0 * 9) --> (153.0 + 8) --> (161.0 + 20) --> 181", "(6 + 20) --> (26 * 8) --> (208 - 9) --> (199 - 15) --> (184 - 3) --> 181", "(8 * 20) --> (160 + 9) --> (169 + 15) --> (184 - 3) --> 181", "(8 * 20) --> (160 + 15) --> (175 + 6) --> 181", "(20 - 9) --> (11 * 6) --> (66 * 8) --> (528 + 15) --> (543 / 3) --> 181"]}, "target": 181, "n_ways": 15, "round": 2}, "r3": {"n": [6, 8, 9, 11, 14, 20], "how": {"259": ["(6 + 9) --> (15 + 8) --> (23 * 11) --> (253 - 14) --> (239 + 20) --> 259", "(6 + 14) --> (20 + 11) --> (31 * 9) --> (279 - 20) --> 259", "(6 + 20) --> (26 * 9) --> (234 + 14) --> (248 + 11) --> 259", "(6 + 11) --> (17 + 8) --> (25 * 9) --> (225 + 14) --> (239 + 20) --> 259", "(9 - 6) --> (3 + 20) --> (23 * 11) --> (253 + 14) --> (267 - 8) --> 259", "(9 * 14) --> (126 / 6) --> (21.0 * 11) --> (231.0 + 20) --> (251.0 + 8) --> 259", "(9 + 14) --> (23 * 11) --> (253 + 6) --> 259", "(9 * 11) --> (99 + 20) --> (119 - 8) --> (111 * 14) --> (1554 / 6) --> 259", "(20 + 11) --> (31 * 9) --> (279 - 6) --> (273 - 14) --> 259"]}, "target": 259, "n_ways": 9, "round": 3}, "r4": {"n": [9, 10, 12, 17, 19, 23], "how": {"463": ["(19 + 10) --> (29 + 23) --> (52 * 9) --> (468 + 12) --> (480 - 17) --> 463", "(19 + 9) --> (28 * 17) --> (476 + 10) --> (486 - 23) --> 463", "(19 - 17) --> (2 * 10) --> (20 * 23) --> (460 + 12) --> (472 - 9) --> 463", "(19 * 23) --> (437 + 9) --> (446 + 17) --> 463", "(10 + 9) --> (19 - 17) --> (2 + 23) --> (25 * 19) --> (475 - 12) --> 463", "(10 * 17) --> (170 + 12) --> (182 * 23) --> (4186 - 19) --> (4167 / 9) --> 463", "(23 - 19) --> (4 * 12) --> (48 * 10) --> (480 - 17) --> 463"]}, "target": 463, "n_ways": 7, "round": 4}, "r5": {"n": [4, 13, 14, 16, 19, 22], "how": {"600": ["(4 * 13) --> (52 - 22) --> (30 * 19) --> (570 + 16) --> (586 + 14) --> 600", "(19 - 4) --> (15 - 13) --> (2 * 14) --> (28 * 22) --> (616 - 16) --> 600", "(19 - 4) --> (15 + 13) --> (28 * 22) --> (616 - 16) --> 600"]}, "target": 600, "n_ways": 3, "round": 5}}