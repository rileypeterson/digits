{"puzzleDate": "2023-12-22", "r1": {"n": [2, 4, 8, 9, 12, 15], "how": {"138": ["(9 * 12) --> (108 / 2) --> (54.0 + 15) --> (69.0 * 8) --> (552.0 / 4) --> 138", "(9 + 12) --> (21 - 4) --> (17 * 8) --> (136 + 2) --> 138", "(9 * 12) --> (108 * 4) --> (432 / 8) --> (54.0 + 15) --> (69.0 * 2) --> 138", "(9 + 12) --> (21 * 4) --> (84 - 15) --> (69 * 2) --> 138", "(9 + 12) --> (21 + 15) --> (36 * 4) --> (144 + 2) --> (146 - 8) --> 138", "(9 - 2) --> (7 * 12) --> (84 - 15) --> (69 * 8) --> (552 / 4) --> 138", "(9 * 2) --> (18 - 8) --> (10 * 15) --> (150 - 12) --> 138", "(9 * 8) --> (72 + 12) --> (84 - 15) --> (69 * 2) --> 138", "(9 * 8) --> (72 + 12) --> (84 - 15) --> (69 * 4) --> (276 / 2) --> 138", "(9 * 8) --> (72 * 4) --> (288 - 12) --> (276 / 2) --> 138", "(9 - 8) --> (1 + 4) --> (5 * 2) --> (10 * 15) --> (150 - 12) --> 138", "(9 - 4) --> (5 * 2) --> (10 * 15) --> (150 - 12) --> 138", "(9 + 15) --> (24 * 12) --> (288 - 8) --> (280 - 4) --> (276 / 2) --> 138", "(9 + 15) --> (24 * 12) --> (288 + 4) --> (292 / 2) --> (146.0 - 8) --> 138", "(12 - 9) --> (3 + 15) --> (18 * 8) --> (144 - 2) --> (142 - 4) --> 138", "(12 + 2) --> (14 * 9) --> (126 + 8) --> (134 + 4) --> 138", "(12 - 2) --> (10 * 15) --> (150 - 8) --> (142 - 4) --> 138", "(12 + 8) --> (20 + 15) --> (35 * 4) --> (140 - 2) --> 138", "(2 + 8) --> (10 * 15) --> (150 - 12) --> 138", "(8 / 2) --> (4.0 / 4) --> (1.0 + 9) --> (10.0 * 15) --> (150.0 - 12) --> 138", "(8 - 2) --> (6 + 4) --> (10 * 15) --> (150 - 12) --> 138", "(8 + 4) --> (12 * 12) --> (144 + 9) --> (153 - 15) --> 138", "(8 - 4) --> (4 * 15) --> (60 + 9) --> (69 * 2) --> 138", "(8 + 15) --> (23 * 12) --> (276 / 2) --> 138", "(8 + 15) --> (23 * 12) --> (276 * 2) --> (552 / 4) --> 138", "(8 * 15) --> (120 + 12) --> (132 + 2) --> (134 + 4) --> 138", "(4 - 2) --> (2 * 9) --> (18 - 8) --> (10 * 15) --> (150 - 12) --> 138", "(4 / 2) --> (2.0 + 8) --> (10.0 * 15) --> (150.0 - 12) --> 138", "(4 * 15) --> (60 + 9) --> (69 * 2) --> 138"]}, "target": 138, "n_ways": 29, "round": 1}, "r2": {"n": [5, 7, 10, 13, 18, 19], "how": {"232": ["(5 + 13) --> (18 + 7) --> (25 * 10) --> (250 - 18) --> 232", "(5 + 10) --> (15 * 13) --> (195 + 18) --> (213 + 19) --> 232", "(5 + 7) --> (12 * 18) --> (216 - 13) --> (203 + 10) --> (213 + 19) --> 232", "(5 + 19) --> (24 - 10) --> (14 * 18) --> (252 - 13) --> (239 - 7) --> 232", "(13 - 10) --> (3 * 19) --> (57 - 7) --> (50 * 5) --> (250 - 18) --> 232", "(13 - 7) --> (6 + 19) --> (25 * 10) --> (250 - 18) --> 232", "(13 * 18) --> (234 - 5) --> (229 + 10) --> (239 - 7) --> 232", "(13 * 18) --> (234 + 5) --> (239 - 7) --> 232", "(13 * 18) --> (234 + 10) --> (244 + 7) --> (251 - 19) --> 232", "(13 + 18) --> (31 * 7) --> (217 + 5) --> (222 + 10) --> 232", "(13 * 19) --> (247 - 5) --> (242 - 10) --> 232", "(10 - 7) --> (3 * 5) --> (15 * 13) --> (195 + 18) --> (213 + 19) --> 232", "(19 - 5) --> (14 * 18) --> (252 - 13) --> (239 - 7) --> 232"]}, "target": 232, "n_ways": 13, "round": 2}, "r3": {"n": [7, 9, 13, 14, 17, 20], "how": {"349": ["(14 + 7) --> (21 + 17) --> (38 * 9) --> (342 - 13) --> (329 + 20) --> 349", "(14 - 7) --> (7 + 13) --> (20 * 17) --> (340 + 9) --> 349", "(14 - 13) --> (1 * 17) --> (17 * 20) --> (340 + 9) --> 349", "(7 + 17) --> (24 * 14) --> (336 + 13) --> 349", "(7 + 13) --> (20 * 17) --> (340 + 9) --> 349", "(17 + 9) --> (26 + 20) --> (46 * 7) --> (322 + 14) --> (336 + 13) --> 349", "(17 - 13) --> (4 * 14) --> (56 - 9) --> (47 * 7) --> (329 + 20) --> 349", "(17 * 20) --> (340 + 9) --> 349"]}, "target": 349, "n_ways": 8, "round": 3}, "r4": {"n": [4, 8, 16, 17, 19, 23], "how": {"398": ["(4 + 19) --> (23 * 17) --> (391 + 23) --> (414 - 16) --> 398", "(4 + 17) --> (21 * 19) --> (399 + 23) --> (422 - 16) --> (406 - 8) --> 398", "(23 * 17) --> (391 - 4) --> (387 - 8) --> (379 + 19) --> 398", "(8 / 4) --> (2.0 + 23) --> (25.0 * 16) --> (400.0 - 19) --> (381.0 + 17) --> 398", "(19 + 17) --> (36 * 4) --> (144 * 23) --> (3312 / 8) --> (414.0 - 16) --> 398"]}, "target": 398, "n_ways": 5, "round": 4}, "r5": {"n": [4, 5, 12, 21, 23, 24], "how": {"446": ["(5 * 24) --> (120 + 21) --> (141 * 12) --> (1692 / 4) --> (423.0 + 23) --> 446", "(4 * 24) --> (96 + 12) --> (108 - 23) --> (85 * 5) --> (425 + 21) --> 446", "(21 * 23) --> (483 - 5) --> (478 + 4) --> (482 - 12) --> (470 - 24) --> 446", "(24 - 5) --> (19 * 23) --> (437 + 21) --> (458 - 12) --> 446", "(24 / 12) --> (2.0 + 23) --> (25.0 - 4) --> (21.0 * 21) --> (441.0 + 5) --> 446"]}, "target": 446, "n_ways": 5, "round": 5}}