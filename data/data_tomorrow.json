{"puzzleDate": "2024-09-30", "r1": {"n": [2, 8, 9, 11, 13, 15], "how": {"151": ["(15 * 8) --> (120 - 2) --> (118 + 11) --> (129 + 9) --> (138 + 13) --> 151", "(15 - 8) --> (7 - 2) --> (5 + 13) --> (18 * 9) --> (162 - 11) --> 151", "(15 - 8) --> (7 + 11) --> (18 * 9) --> (162 + 2) --> (164 - 13) --> 151", "(15 * 8) --> (120 * 13) --> (1560 + 2) --> (1562 / 11) --> (142.0 + 9) --> 151", "(15 + 8) --> (23 + 13) --> (36 / 2) --> (18.0 * 9) --> (162.0 - 11) --> 151", "(15 - 8) --> (7 * 13) --> (91 - 11) --> (80 * 2) --> (160 - 9) --> 151", "(15 - 2) --> (13 * 11) --> (143 + 8) --> 151", "(15 + 2) --> (17 * 9) --> (153 + 11) --> (164 - 13) --> 151", "(15 * 11) --> (165 + 8) --> (173 - 9) --> (164 - 13) --> 151", "(15 - 11) --> (4 + 13) --> (17 * 9) --> (153 - 2) --> 151", "(15 * 9) --> (135 - 8) --> (127 + 11) --> (138 + 13) --> 151", "(15 - 9) --> (6 * 13) --> (78 - 8) --> (70 * 2) --> (140 + 11) --> 151", "(15 * 13) --> (195 - 8) --> (187 / 11) --> (17.0 * 9) --> (153.0 - 2) --> 151", "(15 - 13) --> (2 * 2) --> (4 + 9) --> (13 * 11) --> (143 + 8) --> 151", "(8 * 9) --> (72 + 11) --> (83 * 2) --> (166 - 15) --> 151", "(2 + 9) --> (11 * 13) --> (143 + 8) --> 151", "(2 * 13) --> (26 - 8) --> (18 * 9) --> (162 - 11) --> 151", "(2 * 13) --> (26 - 9) --> (17 * 8) --> (136 + 15) --> 151", "(11 * 13) --> (143 + 8) --> 151", "(9 * 13) --> (117 + 15) --> (132 + 8) --> (140 + 11) --> 151"]}, "target": 151, "n_ways": 20, "round": 1}, "r2": {"n": [3, 4, 8, 10, 15, 16], "how": {"253": ["(10 * 8) --> (80 - 16) --> (64 * 4) --> (256 - 3) --> 253", "(10 * 8) --> (80 - 16) --> (64 + 3) --> (67 * 4) --> (268 - 15) --> 253", "(10 + 8) --> (18 * 15) --> (270 - 16) --> (254 - 4) --> (250 + 3) --> 253", "(10 * 8) --> (80 + 4) --> (84 * 3) --> (252 + 16) --> (268 - 15) --> 253", "(16 * 15) --> (240 + 10) --> (250 + 3) --> 253", "(16 + 4) --> (20 + 3) --> (23 * 10) --> (230 + 8) --> (238 + 15) --> 253", "(8 * 15) --> (120 / 10) --> (12.0 + 4) --> (16.0 * 16) --> (256.0 - 3) --> 253"]}, "target": 253, "n_ways": 7, "round": 2}, "r3": {"n": [3, 5, 6, 8, 10, 19], "how": {"296": ["(5 + 19) --> (24 + 6) --> (30 - 3) --> (27 + 10) --> (37 * 8) --> 296", "(5 + 19) --> (24 / 6) --> (4.0 * 10) --> (40.0 - 3) --> (37.0 * 8) --> 296", "(5 * 19) --> (95 + 6) --> (101 + 10) --> (111 / 3) --> (37.0 * 8) --> 296", "(5 + 19) --> (24 + 3) --> (27 + 10) --> (37 * 8) --> 296", "(5 * 6) --> (30 - 3) --> (27 + 10) --> (37 * 8) --> 296", "(5 - 3) --> (2 * 19) --> (38 + 10) --> (48 * 6) --> (288 + 8) --> 296", "(5 * 10) --> (50 - 19) --> (31 + 6) --> (37 * 8) --> 296", "(6 * 3) --> (18 + 19) --> (37 * 8) --> 296", "(6 + 10) --> (16 * 19) --> (304 - 5) --> (299 - 3) --> 296", "(6 + 10) --> (16 * 19) --> (304 - 8) --> 296", "(6 * 10) --> (60 + 3) --> (63 * 5) --> (315 - 19) --> 296", "(6 * 10) --> (60 - 3) --> (57 * 5) --> (285 + 19) --> (304 - 8) --> 296", "(3 * 8) --> (24 + 5) --> (29 * 10) --> (290 + 6) --> 296", "(10 - 3) --> (7 * 6) --> (42 - 5) --> (37 * 8) --> 296", "(10 * 8) --> (80 - 19) --> (61 * 5) --> (305 - 6) --> (299 - 3) --> 296"]}, "target": 296, "n_ways": 15, "round": 3}, "r4": {"n": [11, 14, 16, 17, 19, 25], "how": {"343": ["(17 * 19) --> (323 + 25) --> (348 + 11) --> (359 - 16) --> 343", "(17 + 25) --> (42 - 19) --> (23 * 16) --> (368 - 14) --> (354 - 11) --> 343", "(17 + 25) --> (42 - 14) --> (28 * 11) --> (308 + 19) --> (327 + 16) --> 343", "(17 + 14) --> (31 - 19) --> (12 + 11) --> (23 * 16) --> (368 - 25) --> 343", "(19 * 16) --> (304 + 25) --> (329 + 14) --> 343", "(19 + 16) --> (35 * 11) --> (385 - 17) --> (368 - 25) --> 343"]}, "target": 343, "n_ways": 6, "round": 4}, "r5": {"n": [6, 7, 11, 16, 19, 23], "how": {"470": ["(7 * 11) --> (77 - 19) --> (58 + 23) --> (81 * 6) --> (486 - 16) --> 470", "(11 + 19) --> (30 * 16) --> (480 + 7) --> (487 + 6) --> (493 - 23) --> 470", "(19 * 23) --> (437 + 16) --> (453 + 11) --> (464 + 6) --> 470"]}, "target": 470, "n_ways": 3, "round": 5}}