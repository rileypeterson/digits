{"puzzleDate": "2025-05-03", "r1": {"n": [2, 4, 6, 8, 9, 15], "how": {"95": ["(9 * 6) --> (54 * 8) --> (432 / 4) --> (108.0 + 2) --> (110.0 - 15) --> 95", "(9 - 6) --> (3 * 2) --> (6 + 4) --> (10 * 8) --> (80 + 15) --> 95", "(9 - 6) --> (3 * 4) --> (12 - 2) --> (10 * 8) --> (80 + 15) --> 95", "(9 - 6) --> (3 + 4) --> (7 * 15) --> (105 - 8) --> (97 - 2) --> 95", "(9 * 8) --> (72 + 6) --> (78 + 2) --> (80 + 15) --> 95", "(9 * 8) --> (72 + 6) --> (78 - 2) --> (76 + 15) --> (91 + 4) --> 95", "(9 + 8) --> (17 + 2) --> (19 * 6) --> (114 - 15) --> (99 - 4) --> 95", "(9 + 8) --> (17 * 2) --> (34 + 4) --> (38 * 15) --> (570 / 6) --> 95", "(9 * 8) --> (72 + 4) --> (76 / 2) --> (38.0 * 15) --> (570.0 / 6) --> 95", "(9 - 2) --> (7 * 15) --> (105 - 6) --> (99 - 4) --> 95", "(9 * 2) --> (18 * 4) --> (72 + 8) --> (80 + 15) --> 95", "(9 + 15) --> (24 * 8) --> (192 + 6) --> (198 / 2) --> (99.0 - 4) --> 95", "(9 + 4) --> (13 * 6) --> (78 + 2) --> (80 + 15) --> 95", "(9 + 4) --> (13 * 8) --> (104 + 6) --> (110 - 15) --> 95", "(9 - 4) --> (5 * 8) --> (40 - 2) --> (38 * 15) --> (570 / 6) --> 95", "(9 - 4) --> (5 * 8) --> (40 * 2) --> (80 + 15) --> 95", "(9 * 4) --> (36 + 2) --> (38 * 15) --> (570 / 6) --> 95", "(6 * 8) --> (48 + 4) --> (52 * 2) --> (104 - 9) --> 95", "(6 / 2) --> (3.0 + 9) --> (12.0 + 8) --> (20.0 * 4) --> (80.0 + 15) --> 95", "(6 / 2) --> (3.0 + 8) --> (11.0 * 9) --> (99.0 - 4) --> 95", "(6 * 2) --> (12 + 8) --> (20 * 4) --> (80 + 15) --> 95", "(6 * 15) --> (90 + 9) --> (99 - 4) --> 95", "(6 + 4) --> (10 * 8) --> (80 + 15) --> 95", "(6 * 4) --> (24 + 15) --> (39 * 2) --> (78 + 9) --> (87 + 8) --> 95", "(8 * 2) --> (16 - 9) --> (7 * 15) --> (105 - 6) --> (99 - 4) --> 95", "(8 - 2) --> (6 * 15) --> (90 + 9) --> (99 - 4) --> 95", "(8 + 4) --> (12 * 9) --> (108 + 2) --> (110 - 15) --> 95", "(2 + 15) --> (17 - 6) --> (11 * 9) --> (99 - 4) --> 95", "(15 - 6) --> (9 + 4) --> (13 * 8) --> (104 - 9) --> 95", "(15 - 2) --> (13 * 6) --> (78 + 9) --> (87 + 8) --> 95", "(15 - 2) --> (13 * 8) --> (104 - 9) --> 95", "(15 * 4) --> (60 - 8) --> (52 * 2) --> (104 - 9) --> 95"]}, "target": 95, "n_ways": 32, "round": 1}, "r2": {"n": [5, 8, 10, 12, 15, 17], "how": {"174": ["(12 + 10) --> (22 * 8) --> (176 + 15) --> (191 - 17) --> 174", "(12 * 15) --> (180 - 10) --> (170 + 17) --> (187 - 5) --> (182 - 8) --> 174", "(12 * 17) --> (204 - 10) --> (194 - 15) --> (179 - 5) --> 174", "(12 - 8) --> (4 * 17) --> (68 - 10) --> (58 * 15) --> (870 / 5) --> 174", "(10 * 15) --> (150 + 12) --> (162 + 17) --> (179 - 5) --> 174", "(10 * 17) --> (170 + 12) --> (182 - 8) --> 174", "(10 + 5) --> (15 * 12) --> (180 - 15) --> (165 + 17) --> (182 - 8) --> 174", "(15 + 17) --> (32 * 5) --> (160 + 12) --> (172 + 10) --> (182 - 8) --> 174", "(15 - 5) --> (10 * 17) --> (170 + 12) --> (182 - 8) --> 174", "(17 - 12) --> (5 * 10) --> (50 + 8) --> (58 * 15) --> (870 / 5) --> 174", "(17 + 5) --> (22 * 8) --> (176 - 12) --> (164 + 10) --> 174", "(5 + 8) --> (13 * 10) --> (130 + 12) --> (142 + 15) --> (157 + 17) --> 174"]}, "target": 174, "n_ways": 12, "round": 2}, "r3": {"n": [4, 7, 13, 14, 17, 19], "how": {"360": ["(14 * 4) --> (56 * 7) --> (392 - 19) --> (373 - 13) --> 360", "(14 - 4) --> (10 + 19) --> (29 * 13) --> (377 - 17) --> 360", "(4 + 17) --> (21 + 7) --> (28 * 14) --> (392 - 19) --> (373 - 13) --> 360", "(4 * 7) --> (28 - 19) --> (9 + 13) --> (22 * 17) --> (374 - 14) --> 360", "(17 - 13) --> (4 * 19) --> (76 + 14) --> (90 * 4) --> 360", "(7 - 4) --> (3 + 19) --> (22 * 17) --> (374 - 14) --> 360", "(7 + 19) --> (26 * 14) --> (364 - 4) --> 360", "(7 + 19) --> (26 * 14) --> (364 - 17) --> (347 + 13) --> 360", "(19 - 14) --> (5 * 4) --> (20 * 17) --> (340 + 7) --> (347 + 13) --> 360", "(19 - 17) --> (2 * 14) --> (28 * 13) --> (364 - 4) --> 360"]}, "target": 360, "n_ways": 10, "round": 3}, "r4": {"n": [5, 9, 10, 16, 23, 25], "how": {"453": ["(5 + 25) --> (30 - 10) --> (20 * 23) --> (460 + 9) --> (469 - 16) --> 453", "(25 - 5) --> (20 * 23) --> (460 + 9) --> (469 - 16) --> 453", "(25 + 23) --> (48 * 9) --> (432 + 5) --> (437 + 16) --> 453", "(25 + 23) --> (48 * 9) --> (432 - 5) --> (427 + 16) --> (443 + 10) --> 453", "(25 - 23) --> (2 * 9) --> (18 + 10) --> (28 * 16) --> (448 + 5) --> 453", "(9 + 10) --> (19 * 23) --> (437 + 16) --> 453", "(23 - 9) --> (14 * 16) --> (224 * 10) --> (2240 + 25) --> (2265 / 5) --> 453"]}, "target": 453, "n_ways": 7, "round": 4}, "r5": {"n": [4, 11, 16, 18, 23, 25], "how": {"537": ["(25 - 4) --> (21 + 11) --> (32 * 18) --> (576 - 23) --> (553 - 16) --> 537", "(25 * 23) --> (575 - 4) --> (571 - 18) --> (553 - 16) --> 537", "(11 + 23) --> (34 * 16) --> (544 - 25) --> (519 + 18) --> 537"]}, "target": 537, "n_ways": 3, "round": 5}}