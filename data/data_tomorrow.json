{"puzzleDate": "2024-03-02", "r1": {"n": [2, 3, 5, 8, 14, 15], "how": {"152": ["(8 * 3) --> (24 - 14) --> (10 * 15) --> (150 + 2) --> 152", "(8 + 3) --> (11 * 14) --> (154 - 2) --> 152", "(8 - 3) --> (5 + 5) --> (10 * 15) --> (150 + 2) --> 152", "(8 + 3) --> (11 - 5) --> (6 * 15) --> (90 - 14) --> (76 * 2) --> 152", "(8 + 15) --> (23 * 3) --> (69 * 2) --> (138 + 14) --> 152", "(8 * 2) --> (16 + 15) --> (31 * 5) --> (155 - 3) --> 152", "(8 + 2) --> (10 * 14) --> (140 - 3) --> (137 + 15) --> 152", "(8 / 2) --> (4.0 + 5) --> (9.0 * 15) --> (135.0 + 3) --> (138.0 + 14) --> 152", "(8 + 14) --> (22 * 3) --> (66 + 15) --> (81 - 5) --> (76 * 2) --> 152", "(8 + 14) --> (22 * 3) --> (66 * 2) --> (132 + 15) --> (147 + 5) --> 152", "(3 + 15) --> (18 + 14) --> (32 * 5) --> (160 - 8) --> 152", "(3 + 15) --> (18 * 5) --> (90 - 14) --> (76 * 2) --> 152", "(3 + 2) --> (5 + 14) --> (19 * 8) --> 152", "(3 - 2) --> (1 * 14) --> (14 + 5) --> (19 * 8) --> 152", "(3 * 2) --> (6 + 14) --> (20 / 5) --> (4.0 + 15) --> (19.0 * 8) --> 152", "(3 + 5) --> (8 / 2) --> (4.0 + 15) --> (19.0 * 8) --> 152", "(15 - 8) --> (7 * 3) --> (21 * 14) --> (294 / 2) --> (147.0 + 5) --> 152", "(15 - 3) --> (12 - 2) --> (10 + 14) --> (24 - 5) --> (19 * 8) --> 152", "(15 - 3) --> (12 * 2) --> (24 - 5) --> (19 * 8) --> 152", "(15 / 3) --> (5.0 + 14) --> (19.0 * 8) --> 152", "(15 - 3) --> (12 + 5) --> (17 * 8) --> (136 + 2) --> (138 + 14) --> 152", "(15 / 3) --> (5.0 + 5) --> (10.0 / 2) --> (5.0 + 14) --> (19.0 * 8) --> 152", "(15 + 2) --> (17 + 14) --> (31 * 5) --> (155 - 3) --> 152", "(15 * 5) --> (75 + 8) --> (83 * 2) --> (166 - 14) --> 152", "(15 / 5) --> (3.0 + 8) --> (11.0 * 14) --> (154.0 - 2) --> 152", "(15 / 5) --> (3.0 + 2) --> (5.0 + 14) --> (19.0 * 8) --> 152", "(14 - 3) --> (11 * 15) --> (165 - 8) --> (157 - 5) --> 152", "(14 - 2) --> (12 / 3) --> (4.0 + 15) --> (19.0 * 8) --> 152", "(14 + 5) --> (19 * 8) --> 152"]}, "target": 152, "n_ways": 29, "round": 1}, "r2": {"n": [3, 5, 6, 8, 12, 14], "how": {"237": ["(5 + 8) --> (13 + 12) --> (25 + 14) --> (39 * 6) --> (234 + 3) --> 237", "(5 * 8) --> (40 - 6) --> (34 - 14) --> (20 * 12) --> (240 - 3) --> 237", "(5 * 8) --> (40 * 6) --> (240 - 3) --> 237", "(5 + 12) --> (17 * 14) --> (238 + 8) --> (246 - 6) --> (240 - 3) --> 237", "(5 + 14) --> (19 * 12) --> (228 + 6) --> (234 + 3) --> 237", "(8 * 12) --> (96 - 5) --> (91 - 14) --> (77 * 3) --> (231 + 6) --> 237", "(8 * 6) --> (48 + 5) --> (53 + 12) --> (65 + 14) --> (79 * 3) --> 237", "(8 * 6) --> (48 - 3) --> (45 * 5) --> (225 + 12) --> 237", "(8 * 14) --> (112 + 5) --> (117 * 12) --> (1404 / 6) --> (234.0 + 3) --> 237", "(12 - 6) --> (6 * 5) --> (30 * 8) --> (240 - 3) --> 237", "(12 * 6) --> (72 + 5) --> (77 * 3) --> (231 - 8) --> (223 + 14) --> 237", "(12 - 6) --> (6 * 14) --> (84 - 5) --> (79 * 3) --> 237", "(12 + 6) --> (18 + 14) --> (32 - 3) --> (29 * 8) --> (232 + 5) --> 237", "(12 + 14) --> (26 + 3) --> (29 * 8) --> (232 + 5) --> 237", "(6 * 14) --> (84 - 5) --> (79 * 3) --> 237", "(6 + 14) --> (20 * 12) --> (240 + 5) --> (245 - 8) --> 237", "(6 + 14) --> (20 * 12) --> (240 - 3) --> 237"]}, "target": 237, "n_ways": 17, "round": 2}, "r3": {"n": [3, 8, 10, 14, 15, 19], "how": {"306": ["(10 + 8) --> (18 * 15) --> (270 + 3) --> (273 + 14) --> (287 + 19) --> 306", "(10 - 8) --> (2 + 15) --> (17 * 19) --> (323 - 3) --> (320 - 14) --> 306", "(10 - 8) --> (2 + 19) --> (21 * 14) --> (294 - 3) --> (291 + 15) --> 306", "(3 * 14) --> (42 - 8) --> (34 * 10) --> (340 - 15) --> (325 - 19) --> 306", "(3 + 15) --> (18 + 19) --> (37 * 8) --> (296 + 10) --> 306", "(3 + 19) --> (22 * 14) --> (308 - 10) --> (298 + 8) --> 306", "(3 + 19) --> (22 * 15) --> (330 - 10) --> (320 - 14) --> 306", "(14 * 8) --> (112 - 10) --> (102 * 3) --> 306", "(14 + 15) --> (29 * 10) --> (290 - 3) --> (287 + 19) --> 306", "(8 + 15) --> (23 * 14) --> (322 + 3) --> (325 - 19) --> 306", "(15 / 3) --> (5.0 + 8) --> (13.0 + 19) --> (32.0 * 10) --> (320.0 - 14) --> 306", "(19 - 15) --> (4 * 10) --> (40 * 8) --> (320 - 14) --> 306"]}, "target": 306, "n_ways": 12, "round": 3}, "r4": {"n": [7, 8, 10, 12, 18, 19], "how": {"465": ["(12 + 18) --> (30 + 10) --> (40 + 19) --> (59 * 8) --> (472 - 7) --> 465", "(18 + 8) --> (26 * 19) --> (494 - 12) --> (482 - 7) --> (475 - 10) --> 465", "(18 + 7) --> (25 * 19) --> (475 - 12) --> (463 - 8) --> (455 + 10) --> 465", "(18 + 7) --> (25 * 19) --> (475 - 10) --> 465", "(8 * 7) --> (56 - 18) --> (38 * 12) --> (456 - 10) --> (446 + 19) --> 465", "(8 * 10) --> (80 - 18) --> (62 * 7) --> (434 + 12) --> (446 + 19) --> 465"]}, "target": 465, "n_ways": 6, "round": 4}, "r5": {"n": [4, 6, 11, 14, 17, 19], "how": {"567": ["(14 + 19) --> (33 * 17) --> (561 + 6) --> 567", "(14 * 11) --> (154 - 17) --> (137 * 4) --> (548 + 19) --> 567", "(14 * 4) --> (56 - 6) --> (50 * 11) --> (550 + 17) --> 567", "(19 - 14) --> (5 * 6) --> (30 + 4) --> (34 * 17) --> (578 - 11) --> 567", "(11 * 17) --> (187 - 19) --> (168 - 6) --> (162 * 14) --> (2268 / 4) --> 567"]}, "target": 567, "n_ways": 5, "round": 5}}