{"puzzleDate": "2024-01-31", "r1": {"n": [2, 4, 6, 8, 9, 15], "how": {"158": ["(9 + 15) --> (24 - 4) --> (20 * 8) --> (160 - 2) --> 158", "(9 + 15) --> (24 + 4) --> (28 * 6) --> (168 - 8) --> (160 - 2) --> 158", "(9 + 15) --> (24 * 6) --> (144 + 4) --> (148 + 8) --> (156 + 2) --> 158", "(9 - 4) --> (5 * 15) --> (75 * 2) --> (150 + 8) --> 158", "(9 * 4) --> (36 - 15) --> (21 - 2) --> (19 * 8) --> (152 + 6) --> 158", "(9 - 4) --> (5 * 2) --> (10 + 15) --> (25 * 6) --> (150 + 8) --> 158", "(9 * 8) --> (72 + 4) --> (76 * 2) --> (152 + 6) --> 158", "(9 * 6) --> (54 - 15) --> (39 * 4) --> (156 + 2) --> 158", "(9 * 6) --> (54 - 15) --> (39 * 8) --> (312 + 4) --> (316 / 2) --> 158", "(9 * 6) --> (54 + 15) --> (69 + 8) --> (77 * 2) --> (154 + 4) --> 158", "(9 - 2) --> (7 * 8) --> (56 - 15) --> (41 * 4) --> (164 - 6) --> 158", "(15 - 4) --> (11 * 8) --> (88 - 9) --> (79 * 2) --> 158", "(15 + 4) --> (19 * 8) --> (152 + 6) --> 158", "(15 * 8) --> (120 / 6) --> (20.0 - 2) --> (18.0 * 9) --> (162.0 - 4) --> 158", "(15 - 6) --> (9 * 9) --> (81 * 2) --> (162 - 4) --> 158", "(15 * 2) --> (30 + 8) --> (38 * 4) --> (152 + 6) --> 158", "(4 + 2) --> (6 / 6) --> (1.0 + 9) --> (10.0 * 15) --> (150.0 + 8) --> 158", "(8 * 6) --> (48 - 9) --> (39 * 4) --> (156 + 2) --> 158", "(6 - 4) --> (2 / 2) --> (1.0 + 9) --> (10.0 * 15) --> (150.0 + 8) --> 158", "(6 / 2) --> (3.0 + 15) --> (18.0 * 9) --> (162.0 - 4) --> 158"]}, "target": 158, "n_ways": 20, "round": 1}, "r2": {"n": [4, 6, 10, 11, 13, 20], "how": {"222": ["(4 * 10) --> (40 * 6) --> (240 - 11) --> (229 + 13) --> (242 - 20) --> 222", "(4 * 10) --> (40 * 13) --> (520 / 20) --> (26.0 + 11) --> (37.0 * 6) --> 222", "(4 * 11) --> (44 + 13) --> (57 - 20) --> (37 * 6) --> 222", "(4 + 13) --> (17 + 20) --> (37 * 6) --> 222", "(4 + 20) --> (24 * 10) --> (240 - 11) --> (229 + 6) --> (235 - 13) --> 222", "(10 - 4) --> (6 + 11) --> (17 + 20) --> (37 * 6) --> 222", "(10 + 11) --> (21 + 13) --> (34 + 20) --> (54 * 4) --> (216 + 6) --> 222", "(10 + 13) --> (23 - 20) --> (3 * 11) --> (33 + 4) --> (37 * 6) --> 222", "(10 * 20) --> (200 + 4) --> (204 + 11) --> (215 - 6) --> (209 + 13) --> 222", "(10 * 20) --> (200 / 4) --> (50.0 - 13) --> (37.0 * 6) --> 222", "(11 - 4) --> (7 * 10) --> (70 - 13) --> (57 - 20) --> (37 * 6) --> 222", "(11 * 6) --> (66 - 13) --> (53 * 4) --> (212 + 10) --> 222", "(11 * 6) --> (66 * 13) --> (858 + 10) --> (868 + 20) --> (888 / 4) --> 222", "(11 * 20) --> (220 - 4) --> (216 + 6) --> 222", "(6 * 13) --> (78 + 10) --> (88 / 4) --> (22.0 * 11) --> (242.0 - 20) --> 222", "(6 * 13) --> (78 - 20) --> (58 * 4) --> (232 - 10) --> 222", "(13 * 20) --> (260 / 10) --> (26.0 + 11) --> (37.0 * 6) --> 222"]}, "target": 222, "n_ways": 17, "round": 2}, "r3": {"n": [3, 8, 11, 12, 15, 20], "how": {"294": ["(12 * 8) --> (96 * 3) --> (288 - 20) --> (268 + 11) --> (279 + 15) --> 294", "(12 + 8) --> (20 * 15) --> (300 - 20) --> (280 + 3) --> (283 + 11) --> 294", "(12 + 15) --> (27 * 11) --> (297 - 3) --> 294", "(20 - 8) --> (12 + 15) --> (27 * 11) --> (297 - 3) --> 294", "(20 * 15) --> (300 - 12) --> (288 - 8) --> (280 + 3) --> (283 + 11) --> 294", "(20 + 15) --> (35 * 8) --> (280 + 3) --> (283 + 11) --> 294", "(8 + 11) --> (19 * 15) --> (285 + 12) --> (297 - 3) --> 294"]}, "target": 294, "n_ways": 7, "round": 3}, "r4": {"n": [9, 14, 17, 20, 21, 24], "how": {"450": ["(21 * 20) --> (420 - 17) --> (403 + 24) --> (427 + 9) --> (436 + 14) --> 450", "(21 + 20) --> (41 - 14) --> (27 * 17) --> (459 - 9) --> 450", "(20 + 17) --> (37 - 14) --> (23 * 21) --> (483 - 24) --> (459 - 9) --> 450", "(20 * 24) --> (480 - 21) --> (459 - 9) --> 450", "(17 + 24) --> (41 - 20) --> (21 * 21) --> (441 + 9) --> 450", "(24 - 17) --> (7 + 14) --> (21 * 21) --> (441 + 9) --> 450", "(24 - 9) --> (15 * 21) --> (315 * 20) --> (6300 / 14) --> 450"]}, "target": 450, "n_ways": 7, "round": 4}, "r5": {"n": [6, 9, 11, 18, 22, 24], "how": {"463": ["(6 + 22) --> (28 - 9) --> (19 * 24) --> (456 - 11) --> (445 + 18) --> 463", "(24 * 18) --> (432 + 9) --> (441 + 22) --> 463"]}, "target": 463, "n_ways": 2, "round": 5}}