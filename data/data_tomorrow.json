{"puzzleDate": "2025-06-19", "r1": {"n": [2, 3, 6, 8, 11, 13], "how": {"133": ["(6 * 8) --> (48 + 13) --> (61 * 2) --> (122 + 11) --> 133", "(6 * 8) --> (48 * 3) --> (144 - 11) --> 133", "(6 * 8) --> (48 * 3) --> (144 - 13) --> (131 + 2) --> 133", "(6 * 11) --> (66 - 8) --> (58 - 13) --> (45 * 3) --> (135 - 2) --> 133", "(6 + 11) --> (17 * 8) --> (136 - 3) --> 133", "(6 + 11) --> (17 - 2) --> (15 * 8) --> (120 + 13) --> 133", "(6 + 11) --> (17 * 2) --> (34 + 13) --> (47 * 3) --> (141 - 8) --> 133", "(6 + 13) --> (19 - 2) --> (17 * 8) --> (136 - 3) --> 133", "(6 + 13) --> (19 + 2) --> (21 - 3) --> (18 * 8) --> (144 - 11) --> 133", "(6 + 13) --> (19 * 2) --> (38 * 3) --> (114 + 8) --> (122 + 11) --> 133", "(6 * 2) --> (12 + 3) --> (15 * 8) --> (120 + 13) --> 133", "(6 * 2) --> (12 / 3) --> (4.0 + 11) --> (15.0 * 8) --> (120.0 + 13) --> 133", "(6 + 3) --> (9 * 8) --> (72 * 2) --> (144 - 11) --> 133", "(6 / 3) --> (2.0 + 11) --> (13.0 + 2) --> (15.0 * 8) --> (120.0 + 13) --> 133", "(8 + 11) --> (19 - 2) --> (17 + 3) --> (20 * 6) --> (120 + 13) --> 133", "(8 + 13) --> (21 + 3) --> (24 * 6) --> (144 - 11) --> 133", "(8 / 2) --> (4.0 + 6) --> (10.0 * 13) --> (130.0 + 3) --> 133", "(8 + 2) --> (10 * 13) --> (130 + 6) --> (136 - 3) --> 133", "(8 + 2) --> (10 * 13) --> (130 + 3) --> 133", "(11 - 6) --> (5 * 8) --> (40 * 3) --> (120 + 13) --> 133", "(11 - 6) --> (5 * 13) --> (65 * 2) --> (130 + 3) --> 133", "(11 - 8) --> (3 * 13) --> (39 + 6) --> (45 * 3) --> (135 - 2) --> 133", "(11 + 13) --> (24 * 6) --> (144 - 8) --> (136 - 3) --> 133", "(11 * 13) --> (143 - 8) --> (135 - 2) --> 133", "(11 + 3) --> (14 * 8) --> (112 + 6) --> (118 + 13) --> (131 + 2) --> 133", "(13 + 2) --> (15 + 3) --> (18 * 8) --> (144 - 11) --> 133"]}, "target": 133, "n_ways": 26, "round": 1}, "r2": {"n": [3, 5, 8, 13, 15, 20], "how": {"232": ["(20 / 5) --> (4.0 + 13) --> (17.0 - 3) --> (14.0 + 15) --> (29.0 * 8) --> 232", "(20 * 5) --> (100 - 13) --> (87 / 3) --> (29.0 * 8) --> 232", "(20 * 13) --> (260 - 5) --> (255 - 15) --> (240 - 8) --> 232", "(20 - 13) --> (7 * 3) --> (21 - 5) --> (16 * 15) --> (240 - 8) --> 232", "(20 + 13) --> (33 + 15) --> (48 * 5) --> (240 - 8) --> 232", "(5 * 13) --> (65 + 20) --> (85 * 3) --> (255 - 15) --> (240 - 8) --> 232", "(5 + 13) --> (18 - 15) --> (3 * 3) --> (9 + 20) --> (29 * 8) --> 232", "(5 * 13) --> (65 + 15) --> (80 * 3) --> (240 - 8) --> 232", "(5 * 3) --> (15 * 15) --> (225 + 20) --> (245 - 13) --> 232", "(5 + 15) --> (20 * 13) --> (260 - 20) --> (240 - 8) --> 232", "(5 * 15) --> (75 / 3) --> (25.0 - 13) --> (12.0 * 20) --> (240.0 - 8) --> 232", "(13 * 3) --> (39 * 15) --> (585 - 5) --> (580 / 20) --> (29.0 * 8) --> 232", "(13 + 3) --> (16 * 15) --> (240 - 8) --> 232", "(13 + 15) --> (28 * 8) --> (224 + 5) --> (229 + 3) --> 232", "(3 * 15) --> (45 / 5) --> (9.0 + 20) --> (29.0 * 8) --> 232", "(3 * 15) --> (45 + 13) --> (58 * 20) --> (1160 / 5) --> 232", "(3 * 8) --> (24 - 5) --> (19 * 13) --> (247 - 15) --> 232", "(15 - 3) --> (12 * 20) --> (240 + 5) --> (245 - 13) --> 232", "(15 - 3) --> (12 * 20) --> (240 - 8) --> 232"]}, "target": 232, "n_ways": 19, "round": 2}, "r3": {"n": [6, 7, 9, 14, 19, 20], "how": {"289": ["(6 + 20) --> (26 + 14) --> (40 * 7) --> (280 + 9) --> 289", "(6 * 20) --> (120 - 14) --> (106 * 19) --> (2014 + 9) --> (2023 / 7) --> 289", "(6 * 7) --> (42 - 20) --> (22 * 14) --> (308 - 19) --> 289", "(6 + 7) --> (13 + 9) --> (22 * 14) --> (308 - 19) --> 289", "(20 - 6) --> (14 * 19) --> (266 + 14) --> (280 + 9) --> 289", "(20 * 14) --> (280 + 6) --> (286 - 7) --> (279 + 19) --> (298 - 9) --> 289", "(20 * 14) --> (280 + 9) --> 289", "(20 - 7) --> (13 + 9) --> (22 * 14) --> (308 - 19) --> 289", "(7 - 6) --> (1 * 20) --> (20 * 14) --> (280 + 9) --> 289", "(19 - 14) --> (5 * 7) --> (35 * 9) --> (315 - 6) --> (309 - 20) --> 289"]}, "target": 289, "n_ways": 10, "round": 3}, "r4": {"n": [8, 11, 13, 14, 16, 18], "how": {"366": ["(14 + 8) --> (22 - 11) --> (11 + 13) --> (24 * 16) --> (384 - 18) --> 366", "(14 - 11) --> (3 * 16) --> (48 * 8) --> (384 - 18) --> 366", "(14 - 13) --> (1 * 16) --> (16 + 18) --> (34 * 11) --> (374 - 8) --> 366", "(16 + 18) --> (34 * 11) --> (374 - 8) --> 366", "(18 + 8) --> (26 * 14) --> (364 - 11) --> (353 + 13) --> 366", "(18 + 8) --> (26 * 16) --> (416 * 11) --> (4576 / 13) --> (352.0 + 14) --> 366", "(18 + 11) --> (29 + 13) --> (42 * 8) --> (336 + 14) --> (350 + 16) --> 366", "(11 + 13) --> (24 * 16) --> (384 - 18) --> 366"]}, "target": 366, "n_ways": 8, "round": 4}, "r5": {"n": [4, 7, 12, 14, 17, 24], "how": {"479": ["(24 * 14) --> (336 / 12) --> (28.0 * 17) --> (476.0 - 4) --> (472.0 + 7) --> 479", "(24 + 12) --> (36 + 4) --> (40 - 7) --> (33 * 14) --> (462 + 17) --> 479", "(24 + 12) --> (36 - 7) --> (29 * 17) --> (493 - 14) --> 479", "(14 * 12) --> (168 / 4) --> (42.0 + 24) --> (66.0 * 7) --> (462.0 + 17) --> 479", "(14 + 12) --> (26 + 4) --> (30 * 17) --> (510 - 24) --> (486 - 7) --> 479", "(12 * 4) --> (48 + 17) --> (65 * 7) --> (455 + 24) --> 479"]}, "target": 479, "n_ways": 6, "round": 5}}