{"puzzleDate": "2025-10-17", "r1": {"n": [3, 4, 6, 10, 12, 15], "how": {"112": ["(12 - 3) --> (9 + 15) --> (24 * 4) --> (96 + 6) --> (102 + 10) --> 112", "(12 * 3) --> (36 - 15) --> (21 - 4) --> (17 * 6) --> (102 + 10) --> 112", "(12 * 3) --> (36 - 15) --> (21 * 6) --> (126 - 4) --> (122 - 10) --> 112", "(12 - 3) --> (9 + 15) --> (24 - 6) --> (18 + 10) --> (28 * 4) --> 112", "(12 * 3) --> (36 + 6) --> (42 * 4) --> (168 * 10) --> (1680 / 15) --> 112", "(12 * 15) --> (180 + 3) --> (183 * 4) --> (732 / 6) --> (122.0 - 10) --> 112", "(12 + 15) --> (27 * 4) --> (108 - 6) --> (102 + 10) --> 112", "(12 * 15) --> (180 / 6) --> (30.0 + 4) --> (34.0 * 3) --> (102.0 + 10) --> 112", "(12 * 15) --> (180 * 6) --> (1080 / 10) --> (108.0 + 4) --> 112", "(12 - 6) --> (6 * 3) --> (18 + 10) --> (28 * 4) --> 112", "(12 + 6) --> (18 + 10) --> (28 * 4) --> 112", "(12 * 10) --> (120 + 3) --> (123 - 15) --> (108 + 4) --> 112", "(12 + 10) --> (22 * 15) --> (330 / 3) --> (110.0 - 4) --> (106.0 + 6) --> 112", "(12 + 10) --> (22 * 15) --> (330 + 6) --> (336 / 3) --> 112", "(12 - 10) --> (2 * 15) --> (30 + 6) --> (36 * 3) --> (108 + 4) --> 112", "(12 + 10) --> (22 * 4) --> (88 + 3) --> (91 + 15) --> (106 + 6) --> 112", "(3 + 15) --> (18 * 6) --> (108 + 4) --> 112", "(3 + 15) --> (18 + 10) --> (28 * 4) --> 112", "(3 + 6) --> (9 * 12) --> (108 + 4) --> 112", "(3 * 6) --> (18 - 4) --> (14 * 12) --> (168 * 10) --> (1680 / 15) --> 112", "(3 * 6) --> (18 + 10) --> (28 * 4) --> 112", "(15 - 12) --> (3 * 6) --> (18 + 10) --> (28 * 4) --> 112", "(15 - 3) --> (12 + 6) --> (18 + 10) --> (28 * 4) --> 112", "(15 - 3) --> (12 * 10) --> (120 - 12) --> (108 + 4) --> 112", "(15 - 6) --> (9 * 12) --> (108 + 4) --> 112", "(15 * 6) --> (90 + 12) --> (102 + 10) --> 112", "(15 - 10) --> (5 * 12) --> (60 - 4) --> (56 * 6) --> (336 / 3) --> 112", "(15 + 10) --> (25 * 4) --> (100 + 12) --> 112", "(15 * 10) --> (150 / 6) --> (25.0 + 3) --> (28.0 * 4) --> 112", "(4 + 6) --> (10 + 10) --> (20 * 15) --> (300 / 3) --> (100.0 + 12) --> 112"]}, "target": 112, "n_ways": 30, "round": 1}, "r2": {"n": [3, 9, 10, 12, 14, 17], "how": {"226": ["(12 + 9) --> (21 / 3) --> (7.0 + 17) --> (24.0 * 10) --> (240.0 - 14) --> 226", "(12 + 9) --> (21 + 3) --> (24 * 10) --> (240 - 14) --> 226", "(12 * 17) --> (204 + 9) --> (213 + 10) --> (223 + 3) --> 226", "(12 + 10) --> (22 * 9) --> (198 + 17) --> (215 + 14) --> (229 - 3) --> 226", "(9 + 14) --> (23 - 17) --> (6 * 12) --> (72 * 3) --> (216 + 10) --> 226", "(9 / 3) --> (3.0 + 17) --> (20.0 * 12) --> (240.0 - 14) --> 226", "(9 * 3) --> (27 - 17) --> (10 + 10) --> (20 * 12) --> (240 - 14) --> 226", "(9 / 3) --> (3.0 + 17) --> (20.0 * 10) --> (200.0 + 12) --> (212.0 + 14) --> 226", "(9 * 3) --> (27 - 10) --> (17 * 14) --> (238 - 12) --> 226", "(17 - 9) --> (8 * 10) --> (80 * 3) --> (240 - 14) --> 226", "(17 + 10) --> (27 * 9) --> (243 - 14) --> (229 - 3) --> 226", "(17 * 14) --> (238 - 12) --> 226", "(17 * 14) --> (238 - 9) --> (229 - 3) --> 226", "(17 + 3) --> (20 * 12) --> (240 - 14) --> 226", "(17 + 3) --> (20 * 10) --> (200 + 12) --> (212 + 14) --> 226", "(10 - 9) --> (1 * 17) --> (17 * 14) --> (238 - 12) --> 226", "(10 + 14) --> (24 - 3) --> (21 * 12) --> (252 - 9) --> (243 - 17) --> 226", "(10 + 14) --> (24 + 3) --> (27 * 9) --> (243 - 17) --> 226", "(10 * 3) --> (30 - 12) --> (18 * 14) --> (252 - 9) --> (243 - 17) --> 226"]}, "target": 226, "n_ways": 19, "round": 2}, "r3": {"n": [5, 6, 12, 15, 18, 19], "how": {"320": ["(19 - 12) --> (7 * 18) --> (126 * 15) --> (1890 / 6) --> (315.0 + 5) --> 320", "(19 + 12) --> (31 + 18) --> (49 + 15) --> (64 * 5) --> 320", "(19 * 18) --> (342 - 12) --> (330 - 15) --> (315 + 5) --> 320", "(19 + 6) --> (25 * 12) --> (300 + 15) --> (315 + 5) --> 320", "(19 * 5) --> (95 - 15) --> (80 * 12) --> (960 * 6) --> (5760 / 18) --> 320", "(12 / 6) --> (2.0 + 19) --> (21.0 * 15) --> (315.0 + 5) --> 320", "(12 + 6) --> (18 * 18) --> (324 - 19) --> (305 + 15) --> 320", "(12 / 6) --> (2.0 + 15) --> (17.0 * 18) --> (306.0 + 19) --> (325.0 - 5) --> 320", "(12 + 5) --> (17 * 19) --> (323 + 18) --> (341 - 15) --> (326 - 6) --> 320", "(12 + 5) --> (17 * 19) --> (323 - 18) --> (305 + 15) --> 320", "(18 * 15) --> (270 / 6) --> (45.0 + 19) --> (64.0 * 5) --> 320", "(18 + 6) --> (24 / 12) --> (2.0 + 19) --> (21.0 * 15) --> (315.0 + 5) --> 320", "(18 + 5) --> (23 * 15) --> (345 - 19) --> (326 - 6) --> 320", "(6 * 5) --> (30 - 12) --> (18 * 18) --> (324 - 19) --> (305 + 15) --> 320"]}, "target": 320, "n_ways": 14, "round": 3}, "r4": {"n": [9, 11, 18, 19, 22, 24], "how": {"364": ["(11 + 24) --> (35 - 18) --> (17 * 22) --> (374 - 19) --> (355 + 9) --> 364", "(18 * 22) --> (396 + 11) --> (407 - 19) --> (388 - 24) --> 364", "(18 * 19) --> (342 + 11) --> (353 - 22) --> (331 + 24) --> (355 + 9) --> 364", "(18 * 19) --> (342 - 11) --> (331 + 24) --> (355 + 9) --> 364", "(18 * 19) --> (342 + 22) --> 364", "(18 * 24) --> (432 - 11) --> (421 * 19) --> (7999 + 9) --> (8008 / 22) --> 364"]}, "target": 364, "n_ways": 6, "round": 4}, "r5": {"n": [6, 8, 10, 17, 18, 25], "how": {"531": ["(10 - 6) --> (4 + 25) --> (29 * 18) --> (522 + 17) --> (539 - 8) --> 531", "(6 + 25) --> (31 * 18) --> (558 - 10) --> (548 - 17) --> 531", "(25 - 8) --> (17 * 17) --> (289 + 6) --> (295 * 18) --> (5310 / 10) --> 531"]}, "target": 531, "n_ways": 3, "round": 5}}