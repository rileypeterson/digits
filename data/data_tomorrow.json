{"puzzleDate": "2024-08-18", "r1": {"n": [4, 6, 8, 9, 11, 15], "how": {"139": ["(15 * 9) --> (135 + 4) --> 139", "(15 * 9) --> (135 - 4) --> (131 + 8) --> 139", "(15 + 9) --> (24 * 4) --> (96 * 8) --> (768 / 6) --> (128.0 + 11) --> 139", "(15 + 9) --> (24 - 4) --> (20 * 6) --> (120 + 8) --> (128 + 11) --> 139", "(15 + 9) --> (24 + 8) --> (32 * 4) --> (128 + 11) --> 139", "(15 + 9) --> (24 + 6) --> (30 * 4) --> (120 + 8) --> (128 + 11) --> 139", "(15 * 8) --> (120 + 9) --> (129 + 4) --> (133 + 6) --> 139", "(15 - 8) --> (7 + 6) --> (13 * 11) --> (143 - 4) --> 139", "(15 + 11) --> (26 * 6) --> (156 - 9) --> (147 - 8) --> 139", "(9 - 4) --> (5 * 8) --> (40 - 15) --> (25 * 6) --> (150 - 11) --> 139", "(9 * 4) --> (36 / 6) --> (6.0 + 8) --> (14.0 * 11) --> (154.0 - 15) --> 139", "(9 - 8) --> (1 * 4) --> (4 + 6) --> (10 * 15) --> (150 - 11) --> 139", "(9 + 11) --> (20 * 6) --> (120 + 15) --> (135 + 4) --> 139", "(4 + 6) --> (10 * 15) --> (150 - 11) --> 139", "(8 + 6) --> (14 * 11) --> (154 - 15) --> 139", "(8 - 6) --> (2 * 11) --> (22 + 9) --> (31 * 4) --> (124 + 15) --> 139", "(8 * 6) --> (48 - 11) --> (37 * 4) --> (148 - 9) --> 139", "(11 - 8) --> (3 + 6) --> (9 * 15) --> (135 + 4) --> 139"]}, "target": 139, "n_ways": 18, "round": 1}, "r2": {"n": [8, 10, 12, 13, 17, 19], "how": {"225": ["(12 * 19) --> (228 + 10) --> (238 - 13) --> 225", "(12 + 19) --> (31 * 8) --> (248 - 10) --> (238 - 13) --> 225", "(12 * 17) --> (204 + 19) --> (223 + 10) --> (233 - 8) --> 225", "(12 * 17) --> (204 + 8) --> (212 + 13) --> 225", "(12 * 10) --> (120 + 17) --> (137 * 13) --> (1781 + 19) --> (1800 / 8) --> 225", "(12 + 10) --> (22 * 8) --> (176 + 19) --> (195 + 17) --> (212 + 13) --> 225", "(12 + 10) --> (22 - 8) --> (14 * 17) --> (238 - 13) --> 225", "(12 - 10) --> (2 * 8) --> (16 * 13) --> (208 + 17) --> 225", "(12 * 10) --> (120 - 13) --> (107 * 17) --> (1819 - 19) --> (1800 / 8) --> 225", "(19 - 12) --> (7 + 13) --> (20 * 10) --> (200 + 17) --> (217 + 8) --> 225", "(19 - 17) --> (2 + 13) --> (15 * 12) --> (180 * 10) --> (1800 / 8) --> 225", "(19 * 13) --> (247 - 12) --> (235 - 10) --> 225", "(17 * 13) --> (221 + 12) --> (233 - 8) --> 225"]}, "target": 225, "n_ways": 13, "round": 2}, "r3": {"n": [5, 9, 14, 16, 18, 19], "how": {"223": ["(16 - 5) --> (11 * 19) --> (209 + 14) --> 223", "(16 + 14) --> (30 - 18) --> (12 * 19) --> (228 - 5) --> 223", "(16 * 14) --> (224 + 18) --> (242 - 19) --> 223", "(5 + 9) --> (14 * 16) --> (224 + 18) --> (242 - 19) --> 223", "(5 * 9) --> (45 - 16) --> (29 - 18) --> (11 * 19) --> (209 + 14) --> 223", "(5 + 18) --> (23 * 9) --> (207 + 16) --> 223", "(9 + 18) --> (27 - 16) --> (11 * 19) --> (209 + 14) --> 223", "(14 * 18) --> (252 / 9) --> (28.0 - 16) --> (12.0 * 19) --> (228.0 - 5) --> 223", "(14 * 19) --> (266 - 16) --> (250 - 9) --> (241 - 18) --> 223", "(19 - 16) --> (3 * 9) --> (27 + 14) --> (41 * 5) --> (205 + 18) --> 223", "(19 - 5) --> (14 * 14) --> (196 + 9) --> (205 + 18) --> 223"]}, "target": 223, "n_ways": 11, "round": 3}, "r4": {"n": [11, 14, 15, 18, 20, 22], "how": {"445": ["(20 + 11) --> (31 * 14) --> (434 - 22) --> (412 + 18) --> (430 + 15) --> 445", "(20 + 22) --> (42 * 11) --> (462 - 18) --> (444 - 14) --> (430 + 15) --> 445", "(11 * 18) --> (198 / 22) --> (9.0 + 14) --> (23.0 * 20) --> (460.0 - 15) --> 445", "(11 + 14) --> (25 * 20) --> (500 - 22) --> (478 - 18) --> (460 - 15) --> 445", "(11 + 14) --> (25 * 18) --> (450 - 20) --> (430 + 15) --> 445", "(22 * 18) --> (396 + 20) --> (416 + 14) --> (430 + 15) --> 445", "(22 + 18) --> (40 * 11) --> (440 + 20) --> (460 - 15) --> 445", "(22 + 15) --> (37 * 11) --> (407 + 20) --> (427 + 18) --> 445"]}, "target": 445, "n_ways": 8, "round": 4}, "r5": {"n": [5, 11, 13, 16, 21, 22], "how": {"569": ["(16 + 22) --> (38 + 5) --> (43 * 13) --> (559 + 21) --> (580 - 11) --> 569", "(16 * 22) --> (352 * 21) --> (7392 + 5) --> (7397 / 13) --> 569", "(22 + 5) --> (27 * 21) --> (567 + 13) --> (580 - 11) --> 569", "(5 + 21) --> (26 * 22) --> (572 + 13) --> (585 - 16) --> 569"]}, "target": 569, "n_ways": 4, "round": 5}}