{"puzzleDate": "2024-11-11", "r1": {"n": [2, 3, 8, 10, 12, 13], "how": {"158": ["(2 * 10) --> (20 * 8) --> (160 + 13) --> (173 - 12) --> (161 - 3) --> 158", "(2 + 13) --> (15 * 10) --> (150 + 8) --> 158", "(2 + 12) --> (14 * 10) --> (140 + 13) --> (153 - 3) --> (150 + 8) --> 158", "(2 * 12) --> (24 / 3) --> (8.0 + 13) --> (21.0 * 8) --> (168.0 - 10) --> 158", "(2 * 12) --> (24 - 3) --> (21 * 8) --> (168 - 10) --> 158", "(2 * 3) --> (6 + 8) --> (14 * 12) --> (168 - 10) --> 158", "(10 + 13) --> (23 * 2) --> (46 * 3) --> (138 + 12) --> (150 + 8) --> 158", "(10 + 13) --> (23 - 3) --> (20 * 8) --> (160 - 2) --> 158", "(10 + 12) --> (22 * 3) --> (66 + 13) --> (79 * 2) --> 158", "(10 + 12) --> (22 * 8) --> (176 - 2) --> (174 - 13) --> (161 - 3) --> 158", "(10 - 3) --> (7 * 13) --> (91 - 12) --> (79 * 2) --> 158", "(10 + 3) --> (13 * 12) --> (156 + 2) --> 158", "(10 * 8) --> (80 - 13) --> (67 + 12) --> (79 * 2) --> 158", "(13 - 2) --> (11 + 3) --> (14 * 12) --> (168 - 10) --> 158", "(13 - 2) --> (11 * 3) --> (33 - 12) --> (21 * 8) --> (168 - 10) --> 158", "(13 * 12) --> (156 + 2) --> 158", "(13 + 12) --> (25 * 2) --> (50 * 3) --> (150 + 8) --> 158", "(13 * 12) --> (156 + 10) --> (166 - 8) --> 158", "(13 + 3) --> (16 * 10) --> (160 - 2) --> 158", "(12 / 2) --> (6.0 / 3) --> (2.0 + 13) --> (15.0 * 10) --> (150.0 + 8) --> 158", "(12 / 3) --> (4.0 - 2) --> (2.0 + 13) --> (15.0 * 10) --> (150.0 + 8) --> 158", "(12 + 3) --> (15 * 10) --> (150 + 8) --> 158", "(12 + 3) --> (15 * 13) --> (195 * 8) --> (1560 / 10) --> (156.0 + 2) --> 158", "(12 / 3) --> (4.0 + 8) --> (12.0 * 13) --> (156.0 + 2) --> 158", "(12 - 8) --> (4 * 13) --> (52 * 3) --> (156 + 2) --> 158", "(3 + 8) --> (11 - 10) --> (1 * 13) --> (13 * 12) --> (156 + 2) --> 158", "(8 / 2) --> (4.0 + 13) --> (17.0 * 10) --> (170.0 - 12) --> 158", "(8 / 2) --> (4.0 + 13) --> (17.0 - 3) --> (14.0 * 12) --> (168.0 - 10) --> 158"]}, "target": 158, "n_ways": 28, "round": 1}, "r2": {"n": [5, 8, 9, 15, 17, 20], "how": {"156": ["(20 - 9) --> (11 * 15) --> (165 - 17) --> (148 + 8) --> 156", "(20 - 17) --> (3 * 8) --> (24 - 5) --> (19 * 9) --> (171 - 15) --> 156", "(20 * 8) --> (160 + 5) --> (165 - 9) --> 156", "(5 + 17) --> (22 * 8) --> (176 - 20) --> 156", "(5 + 8) --> (13 * 20) --> (260 * 9) --> (2340 / 15) --> 156", "(5 * 8) --> (40 / 20) --> (2.0 + 17) --> (19.0 * 9) --> (171.0 - 15) --> 156", "(15 - 5) --> (10 - 9) --> (1 * 17) --> (17 * 8) --> (136 + 20) --> 156", "(15 + 9) --> (24 + 17) --> (41 * 20) --> (820 / 5) --> (164.0 - 8) --> 156", "(15 + 9) --> (24 / 8) --> (3.0 + 5) --> (8.0 * 17) --> (136.0 + 20) --> 156", "(9 * 17) --> (153 - 20) --> (133 + 15) --> (148 + 8) --> 156", "(9 * 17) --> (153 - 5) --> (148 + 8) --> 156", "(9 + 17) --> (26 * 15) --> (390 * 8) --> (3120 / 20) --> 156", "(9 * 8) --> (72 - 20) --> (52 * 15) --> (780 / 5) --> 156", "(17 * 8) --> (136 + 20) --> 156", "(17 - 8) --> (9 * 20) --> (180 - 15) --> (165 - 9) --> 156", "(17 * 8) --> (136 + 5) --> (141 + 15) --> 156"]}, "target": 156, "n_ways": 16, "round": 2}, "r3": {"n": [4, 9, 11, 14, 16, 19], "how": {"359": ["(14 + 19) --> (33 * 11) --> (363 - 4) --> 359", "(16 / 4) --> (4.0 * 11) --> (44.0 - 19) --> (25.0 * 14) --> (350.0 + 9) --> 359", "(16 + 11) --> (27 * 14) --> (378 - 19) --> 359", "(4 * 11) --> (44 + 14) --> (58 - 16) --> (42 * 9) --> (378 - 19) --> 359", "(4 * 11) --> (44 - 19) --> (25 * 14) --> (350 + 9) --> 359", "(4 + 19) --> (23 * 16) --> (368 - 9) --> 359", "(19 - 16) --> (3 * 14) --> (42 - 9) --> (33 * 11) --> (363 - 4) --> 359", "(19 - 4) --> (15 + 9) --> (24 * 16) --> (384 - 14) --> (370 - 11) --> 359"]}, "target": 359, "n_ways": 8, "round": 3}, "r4": {"n": [4, 8, 11, 16, 17, 25], "how": {"370": ["(8 * 11) --> (88 * 17) --> (1496 - 16) --> (1480 / 4) --> 370", "(8 + 25) --> (33 - 11) --> (22 * 17) --> (374 - 4) --> 370", "(8 + 25) --> (33 - 16) --> (17 + 17) --> (34 * 11) --> (374 - 4) --> 370", "(8 * 4) --> (32 - 17) --> (15 * 25) --> (375 + 11) --> (386 - 16) --> 370", "(8 + 17) --> (25 - 11) --> (14 * 25) --> (350 + 16) --> (366 + 4) --> 370", "(25 - 8) --> (17 - 11) --> (6 + 16) --> (22 * 17) --> (374 - 4) --> 370"]}, "target": 370, "n_ways": 6, "round": 4}, "r5": {"n": [4, 5, 7, 9, 11, 20], "how": {"481": ["(9 * 11) --> (99 + 20) --> (119 * 4) --> (476 + 5) --> 481", "(5 * 20) --> (100 + 11) --> (111 + 7) --> (118 * 4) --> (472 + 9) --> 481", "(20 * 4) --> (80 - 9) --> (71 * 7) --> (497 - 5) --> (492 - 11) --> 481", "(20 * 4) --> (80 + 11) --> (91 + 7) --> (98 * 5) --> (490 - 9) --> 481", "(11 * 7) --> (77 + 20) --> (97 * 5) --> (485 - 4) --> 481"]}, "target": 481, "n_ways": 5, "round": 5}}