{"puzzleDate": "2025-05-09", "r1": {"n": [2, 4, 6, 7, 10, 13], "how": {"86": ["(13 * 4) --> (52 - 6) --> (46 + 7) --> (53 - 10) --> (43 * 2) --> 86", "(13 + 4) --> (17 - 2) --> (15 - 7) --> (8 * 10) --> (80 + 6) --> 86", "(13 - 4) --> (9 + 7) --> (16 * 6) --> (96 - 10) --> 86", "(13 - 4) --> (9 + 7) --> (16 / 2) --> (8.0 * 10) --> (80.0 + 6) --> 86", "(13 + 4) --> (17 + 7) --> (24 - 10) --> (14 * 6) --> (84 + 2) --> 86", "(13 - 4) --> (9 * 10) --> (90 - 6) --> (84 + 2) --> 86", "(13 * 6) --> (78 - 4) --> (74 + 2) --> (76 + 10) --> 86", "(13 + 6) --> (19 * 4) --> (76 + 10) --> 86", "(13 * 6) --> (78 - 2) --> (76 + 10) --> 86", "(13 + 6) --> (19 * 10) --> (190 - 4) --> (186 / 2) --> (93.0 - 7) --> 86", "(13 + 6) --> (19 - 10) --> (9 * 4) --> (36 + 7) --> (43 * 2) --> 86", "(13 + 2) --> (15 * 6) --> (90 - 4) --> 86", "(13 - 2) --> (11 - 7) --> (4 * 4) --> (16 * 6) --> (96 - 10) --> 86", "(13 * 2) --> (26 - 7) --> (19 * 4) --> (76 + 10) --> 86", "(13 + 2) --> (15 - 7) --> (8 * 10) --> (80 + 6) --> 86", "(13 + 7) --> (20 * 4) --> (80 + 6) --> 86", "(13 + 7) --> (20 / 2) --> (10.0 + 10) --> (20.0 * 4) --> (80.0 + 6) --> 86", "(13 + 10) --> (23 * 4) --> (92 - 6) --> 86", "(4 + 2) --> (6 * 10) --> (60 + 13) --> (73 + 6) --> (79 + 7) --> 86", "(4 * 2) --> (8 * 10) --> (80 + 6) --> 86", "(4 + 7) --> (11 * 13) --> (143 * 6) --> (858 + 2) --> (860 / 10) --> 86", "(4 + 10) --> (14 * 6) --> (84 + 2) --> 86", "(4 * 10) --> (40 - 7) --> (33 * 6) --> (198 / 2) --> (99.0 - 13) --> 86", "(6 - 4) --> (2 + 10) --> (12 * 7) --> (84 + 2) --> 86", "(6 * 2) --> (12 + 7) --> (19 * 4) --> (76 + 10) --> 86", "(6 * 7) --> (42 - 4) --> (38 * 2) --> (76 + 10) --> 86", "(6 * 10) --> (60 - 13) --> (47 - 4) --> (43 * 2) --> 86", "(2 + 7) --> (9 * 10) --> (90 - 4) --> 86", "(7 - 2) --> (5 + 10) --> (15 * 6) --> (90 - 4) --> 86", "(7 * 10) --> (70 - 13) --> (57 * 6) --> (342 + 2) --> (344 / 4) --> 86"]}, "target": 86, "n_ways": 30, "round": 1}, "r2": {"n": [4, 7, 12, 15, 16, 20], "how": {"190": ["(20 * 7) --> (140 + 16) --> (156 - 4) --> (152 * 15) --> (2280 / 12) --> 190", "(7 + 12) --> (19 + 16) --> (35 * 20) --> (700 / 4) --> (175.0 + 15) --> 190", "(7 + 16) --> (23 + 15) --> (38 * 20) --> (760 / 4) --> 190", "(12 * 16) --> (192 + 20) --> (212 - 7) --> (205 - 15) --> 190", "(12 * 16) --> (192 - 20) --> (172 + 7) --> (179 + 15) --> (194 - 4) --> 190", "(12 + 16) --> (28 / 4) --> (7.0 + 7) --> (14.0 * 15) --> (210.0 - 20) --> 190"]}, "target": 190, "n_ways": 6, "round": 2}, "r3": {"n": [3, 5, 12, 13, 17, 20], "how": {"229": ["(3 + 12) --> (15 + 20) --> (35 - 17) --> (18 * 13) --> (234 - 5) --> 229", "(3 * 5) --> (15 + 20) --> (35 - 17) --> (18 * 12) --> (216 + 13) --> 229", "(3 * 17) --> (51 * 20) --> (1020 / 5) --> (204.0 + 12) --> (216.0 + 13) --> 229", "(3 + 20) --> (23 - 5) --> (18 * 12) --> (216 + 13) --> 229", "(3 + 13) --> (16 * 12) --> (192 + 17) --> (209 + 20) --> 229", "(12 * 17) --> (204 + 5) --> (209 + 20) --> 229", "(12 * 20) --> (240 - 3) --> (237 + 5) --> (242 - 13) --> 229", "(17 * 13) --> (221 + 3) --> (224 + 5) --> 229", "(17 * 13) --> (221 - 12) --> (209 + 20) --> 229", "(20 / 5) --> (4.0 - 3) --> (1.0 + 17) --> (18.0 * 12) --> (216.0 + 13) --> 229", "(20 * 13) --> (260 + 3) --> (263 - 12) --> (251 - 5) --> (246 - 17) --> 229", "(13 - 3) --> (10 * 20) --> (200 + 12) --> (212 + 17) --> 229"]}, "target": 229, "n_ways": 12, "round": 3}, "r4": {"n": [5, 15, 18, 19, 22, 24], "how": {"431": ["(24 * 18) --> (432 + 19) --> (451 - 15) --> (436 - 5) --> 431", "(24 - 18) --> (6 * 15) --> (90 * 5) --> (450 - 19) --> 431", "(24 - 22) --> (2 * 15) --> (30 - 5) --> (25 * 18) --> (450 - 19) --> 431", "(24 - 22) --> (2 * 5) --> (10 + 15) --> (25 * 18) --> (450 - 19) --> 431", "(24 * 19) --> (456 - 18) --> (438 - 22) --> (416 + 15) --> 431", "(24 + 5) --> (29 * 15) --> (435 + 18) --> (453 - 22) --> 431", "(22 * 19) --> (418 + 18) --> (436 - 5) --> 431", "(15 / 5) --> (3.0 + 22) --> (25.0 * 18) --> (450.0 - 19) --> 431"]}, "target": 431, "n_ways": 8, "round": 4}, "r5": {"n": [4, 11, 16, 19, 21, 25], "how": {"535": ["(16 + 4) --> (20 - 19) --> (1 + 25) --> (26 * 21) --> (546 - 11) --> 535", "(16 + 4) --> (20 + 25) --> (45 * 11) --> (495 + 19) --> (514 + 21) --> 535", "(16 - 4) --> (12 + 11) --> (23 * 25) --> (575 - 19) --> (556 - 21) --> 535", "(4 + 25) --> (29 * 19) --> (551 - 16) --> 535", "(21 + 11) --> (32 * 16) --> (512 + 4) --> (516 + 19) --> 535"]}, "target": 535, "n_ways": 5, "round": 5}}