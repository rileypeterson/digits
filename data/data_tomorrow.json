{"puzzleDate": "2024-08-12", "r1": {"n": [3, 5, 8, 10, 12, 14], "how": {"101": ["(10 + 5) --> (15 - 14) --> (1 + 12) --> (13 * 8) --> (104 - 3) --> 101", "(10 - 5) --> (5 + 14) --> (19 + 12) --> (31 * 3) --> (93 + 8) --> 101", "(10 / 5) --> (2.0 + 12) --> (14.0 * 8) --> (112.0 - 14) --> (98.0 + 3) --> 101", "(10 + 5) --> (15 - 8) --> (7 * 14) --> (98 + 3) --> 101", "(10 + 14) --> (24 - 12) --> (12 * 8) --> (96 + 5) --> 101", "(10 + 14) --> (24 + 12) --> (36 * 8) --> (288 / 3) --> (96.0 + 5) --> 101", "(10 + 14) --> (24 * 12) --> (288 / 3) --> (96.0 + 5) --> 101", "(10 + 14) --> (24 + 8) --> (32 * 3) --> (96 + 5) --> 101", "(10 * 12) --> (120 - 5) --> (115 - 14) --> 101", "(10 + 12) --> (22 * 14) --> (308 - 5) --> (303 / 3) --> 101", "(10 * 12) --> (120 - 14) --> (106 - 8) --> (98 + 3) --> 101", "(10 - 8) --> (2 * 14) --> (28 * 3) --> (84 + 5) --> (89 + 12) --> 101", "(10 - 3) --> (7 * 14) --> (98 - 5) --> (93 + 8) --> 101", "(10 * 3) --> (30 - 14) --> (16 - 8) --> (8 * 12) --> (96 + 5) --> 101", "(5 + 14) --> (19 + 12) --> (31 * 3) --> (93 + 8) --> 101", "(5 + 12) --> (17 - 10) --> (7 * 14) --> (98 + 3) --> 101", "(5 * 12) --> (60 - 3) --> (57 * 14) --> (798 + 10) --> (808 / 8) --> 101", "(5 + 8) --> (13 * 10) --> (130 - 14) --> (116 - 12) --> (104 - 3) --> 101", "(14 - 10) --> (4 * 8) --> (32 * 3) --> (96 + 5) --> 101", "(14 - 5) --> (9 * 12) --> (108 - 10) --> (98 + 3) --> 101", "(14 + 12) --> (26 * 3) --> (78 + 10) --> (88 + 5) --> (93 + 8) --> 101", "(14 + 8) --> (22 * 5) --> (110 - 12) --> (98 + 3) --> 101", "(12 - 5) --> (7 * 14) --> (98 + 3) --> 101", "(12 * 8) --> (96 + 10) --> (106 - 5) --> 101", "(12 - 8) --> (4 * 10) --> (40 * 3) --> (120 - 5) --> (115 - 14) --> 101", "(12 * 8) --> (96 + 5) --> 101", "(12 / 3) --> (4.0 + 8) --> (12.0 * 10) --> (120.0 - 5) --> (115.0 - 14) --> 101", "(12 + 3) --> (15 * 8) --> (120 - 5) --> (115 - 14) --> 101"]}, "target": 101, "n_ways": 28, "round": 1}, "r2": {"n": [3, 5, 10, 12, 13, 16], "how": {"188": ["(3 + 5) --> (8 + 13) --> (21 - 10) --> (11 * 16) --> (176 + 12) --> 188", "(3 * 10) --> (30 - 13) --> (17 * 12) --> (204 - 16) --> 188", "(3 + 10) --> (13 * 16) --> (208 + 5) --> (213 - 12) --> (201 - 13) --> 188", "(3 + 13) --> (16 - 5) --> (11 * 16) --> (176 + 12) --> 188", "(3 + 13) --> (16 * 10) --> (160 + 12) --> (172 + 16) --> 188", "(5 * 10) --> (50 + 13) --> (63 - 16) --> (47 * 12) --> (564 / 3) --> 188", "(5 + 16) --> (21 / 3) --> (7.0 + 13) --> (20.0 * 10) --> (200.0 - 12) --> 188", "(12 - 10) --> (2 * 16) --> (32 + 3) --> (35 * 5) --> (175 + 13) --> 188", "(13 - 5) --> (8 * 10) --> (80 - 12) --> (68 * 3) --> (204 - 16) --> 188", "(13 * 16) --> (208 - 3) --> (205 + 5) --> (210 - 10) --> (200 - 12) --> 188", "(13 * 16) --> (208 - 3) --> (205 - 5) --> (200 - 12) --> 188"]}, "target": 188, "n_ways": 11, "round": 2}, "r3": {"n": [3, 6, 8, 11, 17, 19], "how": {"292": ["(19 + 8) --> (27 / 3) --> (9.0 + 17) --> (26.0 * 11) --> (286.0 + 6) --> 292", "(19 * 8) --> (152 - 17) --> (135 + 11) --> (146 * 6) --> (876 / 3) --> 292", "(19 - 8) --> (11 + 6) --> (17 * 17) --> (289 + 3) --> 292", "(19 + 3) --> (22 + 17) --> (39 + 11) --> (50 * 6) --> (300 - 8) --> 292", "(19 * 6) --> (114 - 11) --> (103 * 3) --> (309 - 17) --> 292", "(19 + 6) --> (25 * 11) --> (275 + 17) --> 292", "(8 * 3) --> (24 + 19) --> (43 - 17) --> (26 * 11) --> (286 + 6) --> 292", "(3 * 11) --> (33 + 17) --> (50 * 6) --> (300 - 8) --> 292", "(17 * 6) --> (102 - 11) --> (91 * 3) --> (273 + 19) --> 292", "(11 - 6) --> (5 * 19) --> (95 + 8) --> (103 * 3) --> (309 - 17) --> 292", "(11 * 6) --> (66 + 8) --> (74 + 17) --> (91 * 3) --> (273 + 19) --> 292", "(11 + 6) --> (17 * 17) --> (289 + 3) --> 292"]}, "target": 292, "n_ways": 12, "round": 3}, "r4": {"n": [6, 12, 15, 20, 23, 24], "how": {"381": ["(6 + 24) --> (30 - 20) --> (10 + 23) --> (33 * 12) --> (396 - 15) --> 381", "(24 - 20) --> (4 * 12) --> (48 - 23) --> (25 * 15) --> (375 + 6) --> 381", "(24 / 12) --> (2.0 * 23) --> (46.0 + 20) --> (66.0 * 6) --> (396.0 - 15) --> 381", "(24 / 12) --> (2.0 + 23) --> (25.0 * 15) --> (375.0 + 6) --> 381", "(24 * 15) --> (360 + 6) --> (366 - 20) --> (346 + 12) --> (358 + 23) --> 381", "(23 - 6) --> (17 * 24) --> (408 - 12) --> (396 - 15) --> 381", "(23 * 15) --> (345 + 24) --> (369 + 12) --> 381"]}, "target": 381, "n_ways": 7, "round": 4}, "r5": {"n": [6, 9, 11, 17, 19, 24], "how": {"539": ["(24 / 6) --> (4.0 * 17) --> (68.0 - 19) --> (49.0 * 11) --> 539", "(24 / 6) --> (4.0 + 17) --> (21.0 + 19) --> (40.0 + 9) --> (49.0 * 11) --> 539", "(24 + 6) --> (30 + 19) --> (49 * 11) --> 539", "(6 * 9) --> (54 - 24) --> (30 + 19) --> (49 * 11) --> 539", "(19 - 6) --> (13 + 9) --> (22 * 24) --> (528 + 11) --> 539"]}, "target": 539, "n_ways": 5, "round": 5}}