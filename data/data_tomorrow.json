{"puzzleDate": "2024-04-22", "r1": {"n": [2, 4, 8, 10, 11, 15], "how": {"133": ["(8 + 2) --> (10 * 15) --> (150 + 4) --> (154 - 11) --> (143 - 10) --> 133", "(8 * 2) --> (16 + 11) --> (27 * 4) --> (108 + 15) --> (123 + 10) --> 133", "(8 * 2) --> (16 + 11) --> (27 + 10) --> (37 * 4) --> (148 - 15) --> 133", "(8 - 4) --> (4 + 11) --> (15 * 10) --> (150 - 2) --> (148 - 15) --> 133", "(8 + 4) --> (12 * 10) --> (120 - 2) --> (118 + 15) --> 133", "(8 + 4) --> (12 * 10) --> (120 + 2) --> (122 + 11) --> 133", "(8 / 4) --> (2.0 * 10) --> (20.0 - 11) --> (9.0 * 15) --> (135.0 - 2) --> 133", "(8 * 15) --> (120 - 2) --> (118 + 4) --> (122 + 11) --> 133", "(8 * 15) --> (120 + 2) --> (122 + 11) --> 133", "(8 + 15) --> (23 * 2) --> (46 - 10) --> (36 * 4) --> (144 - 11) --> 133", "(8 * 11) --> (88 - 2) --> (86 * 15) --> (1290 / 10) --> (129.0 + 4) --> 133", "(8 * 11) --> (88 - 4) --> (84 - 10) --> (74 * 2) --> (148 - 15) --> 133", "(8 + 11) --> (19 + 10) --> (29 * 4) --> (116 + 2) --> (118 + 15) --> 133", "(8 + 11) --> (19 - 10) --> (9 * 15) --> (135 - 2) --> 133", "(8 + 10) --> (18 * 2) --> (36 * 4) --> (144 - 11) --> 133", "(8 + 10) --> (18 * 15) --> (270 - 4) --> (266 / 2) --> 133", "(2 + 15) --> (17 - 4) --> (13 * 11) --> (143 - 10) --> 133", "(2 + 10) --> (12 / 4) --> (3.0 + 15) --> (18.0 * 8) --> (144.0 - 11) --> 133", "(4 + 15) --> (19 - 8) --> (11 * 11) --> (121 + 2) --> (123 + 10) --> 133", "(15 - 2) --> (13 * 11) --> (143 - 10) --> 133", "(15 - 4) --> (11 * 11) --> (121 + 2) --> (123 + 10) --> 133", "(15 * 10) --> (150 - 2) --> (148 - 4) --> (144 - 11) --> 133", "(11 * 10) --> (110 + 8) --> (118 + 15) --> 133", "(10 - 4) --> (6 / 2) --> (3.0 + 15) --> (18.0 * 8) --> (144.0 - 11) --> 133"]}, "target": 133, "n_ways": 24, "round": 1}, "r2": {"n": [4, 6, 8, 9, 13, 20], "how": {"241": ["(9 + 8) --> (17 - 4) --> (13 * 20) --> (260 - 6) --> (254 - 13) --> 241", "(9 * 8) --> (72 / 4) --> (18.0 + 20) --> (38.0 * 6) --> (228.0 + 13) --> 241", "(9 + 8) --> (17 * 13) --> (221 + 20) --> 241", "(9 * 6) --> (54 + 8) --> (62 * 4) --> (248 - 20) --> (228 + 13) --> 241", "(9 + 6) --> (15 - 4) --> (11 * 20) --> (220 + 8) --> (228 + 13) --> 241", "(9 + 20) --> (29 * 8) --> (232 - 4) --> (228 + 13) --> 241", "(9 + 4) --> (13 * 20) --> (260 - 6) --> (254 - 13) --> 241", "(9 * 13) --> (117 + 6) --> (123 * 8) --> (984 - 20) --> (964 / 4) --> 241", "(8 * 6) --> (48 + 9) --> (57 * 4) --> (228 + 13) --> 241", "(8 + 20) --> (28 * 9) --> (252 + 6) --> (258 - 4) --> (254 - 13) --> 241", "(8 + 20) --> (28 - 9) --> (19 * 13) --> (247 - 6) --> 241", "(8 * 4) --> (32 - 9) --> (23 - 6) --> (17 * 13) --> (221 + 20) --> 241", "(8 / 4) --> (2.0 + 9) --> (11.0 + 6) --> (17.0 * 13) --> (221.0 + 20) --> 241", "(6 * 13) --> (78 - 20) --> (58 * 4) --> (232 + 9) --> 241", "(20 * 13) --> (260 - 9) --> (251 - 6) --> (245 - 4) --> 241", "(4 * 13) --> (52 - 20) --> (32 * 8) --> (256 - 9) --> (247 - 6) --> 241"]}, "target": 241, "n_ways": 16, "round": 2}, "r3": {"n": [5, 9, 14, 17, 18, 20], "how": {"309": ["(18 * 17) --> (306 - 20) --> (286 + 14) --> (300 + 9) --> 309", "(20 - 18) --> (2 * 5) --> (10 + 9) --> (19 * 17) --> (323 - 14) --> 309", "(20 - 17) --> (3 * 14) --> (42 + 18) --> (60 * 5) --> (300 + 9) --> 309", "(17 - 14) --> (3 * 5) --> (15 * 20) --> (300 + 9) --> 309"]}, "target": 309, "n_ways": 4, "round": 3}, "r4": {"n": [4, 6, 9, 14, 15, 21], "how": {"443": ["(9 - 4) --> (5 * 15) --> (75 * 6) --> (450 - 21) --> (429 + 14) --> 443", "(9 * 6) --> (54 - 21) --> (33 * 14) --> (462 - 15) --> (447 - 4) --> 443", "(21 + 4) --> (25 + 6) --> (31 * 14) --> (434 + 9) --> 443", "(15 * 4) --> (60 / 6) --> (10.0 + 21) --> (31.0 * 14) --> (434.0 + 9) --> 443"]}, "target": 443, "n_ways": 4, "round": 4}, "r5": {"n": [6, 8, 12, 19, 24, 25], "how": {"573": ["(12 - 6) --> (6 + 25) --> (31 * 19) --> (589 + 8) --> (597 - 24) --> 573", "(12 / 6) --> (2.0 * 25) --> (50.0 + 24) --> (74.0 * 8) --> (592.0 - 19) --> 573", "(6 + 25) --> (31 * 19) --> (589 + 8) --> (597 - 24) --> 573", "(24 * 25) --> (600 - 8) --> (592 - 19) --> 573"]}, "target": 573, "n_ways": 4, "round": 5}}