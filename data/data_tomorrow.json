{"puzzleDate": "2025-03-11", "r1": {"n": [2, 4, 5, 8, 12, 15], "how": {"102": ["(4 + 12) --> (16 - 2) --> (14 * 8) --> (112 + 5) --> (117 - 15) --> 102", "(4 * 12) --> (48 + 8) --> (56 * 2) --> (112 + 5) --> (117 - 15) --> 102", "(4 * 12) --> (48 + 8) --> (56 - 5) --> (51 * 2) --> 102", "(4 / 2) --> (2.0 + 12) --> (14.0 * 8) --> (112.0 + 5) --> (117.0 - 15) --> 102", "(4 * 2) --> (8 / 8) --> (1.0 + 5) --> (6.0 * 15) --> (90.0 + 12) --> 102", "(4 + 2) --> (6 * 15) --> (90 + 12) --> 102", "(4 * 8) --> (32 - 2) --> (30 / 5) --> (6.0 * 15) --> (90.0 + 12) --> 102", "(4 + 8) --> (12 / 2) --> (6.0 * 15) --> (90.0 + 12) --> 102", "(4 * 8) --> (32 + 2) --> (34 * 15) --> (510 / 5) --> 102", "(4 + 8) --> (12 + 5) --> (17 * 12) --> (204 / 2) --> 102", "(4 * 8) --> (32 - 15) --> (17 * 12) --> (204 / 2) --> 102", "(4 + 5) --> (9 * 12) --> (108 + 2) --> (110 - 8) --> 102", "(4 * 5) --> (20 + 12) --> (32 + 15) --> (47 * 2) --> (94 + 8) --> 102", "(4 + 5) --> (9 * 8) --> (72 - 15) --> (57 * 2) --> (114 - 12) --> 102", "(4 + 5) --> (9 + 15) --> (24 * 8) --> (192 + 12) --> (204 / 2) --> 102", "(4 * 15) --> (60 - 5) --> (55 * 2) --> (110 - 8) --> 102", "(12 - 4) --> (8 + 5) --> (13 * 8) --> (104 - 2) --> 102", "(12 / 4) --> (3.0 + 15) --> (18.0 - 5) --> (13.0 * 8) --> (104.0 - 2) --> 102", "(12 + 2) --> (14 * 8) --> (112 + 5) --> (117 - 15) --> 102", "(12 + 8) --> (20 * 4) --> (80 + 2) --> (82 + 5) --> (87 + 15) --> 102", "(12 * 8) --> (96 + 4) --> (100 + 2) --> 102", "(12 * 8) --> (96 - 4) --> (92 - 5) --> (87 + 15) --> 102", "(12 + 8) --> (20 + 5) --> (25 * 4) --> (100 + 2) --> 102", "(12 + 8) --> (20 * 5) --> (100 + 2) --> 102", "(12 - 8) --> (4 * 15) --> (60 - 4) --> (56 - 5) --> (51 * 2) --> 102", "(12 + 15) --> (27 * 4) --> (108 + 2) --> (110 - 8) --> 102", "(2 * 5) --> (10 - 4) --> (6 * 15) --> (90 + 12) --> 102", "(2 + 15) --> (17 * 4) --> (68 * 12) --> (816 / 8) --> 102", "(8 / 4) --> (2.0 / 2) --> (1.0 + 5) --> (6.0 * 15) --> (90.0 + 12) --> 102", "(8 / 4) --> (2.0 + 15) --> (17.0 * 12) --> (204.0 / 2) --> 102", "(8 - 2) --> (6 * 15) --> (90 + 12) --> 102", "(8 * 5) --> (40 - 4) --> (36 + 15) --> (51 * 2) --> 102", "(8 - 5) --> (3 * 12) --> (36 + 15) --> (51 * 2) --> 102", "(8 + 5) --> (13 + 15) --> (28 * 4) --> (112 - 12) --> (100 + 2) --> 102", "(8 * 15) --> (120 - 4) --> (116 - 12) --> (104 - 2) --> 102"]}, "target": 102, "n_ways": 35, "round": 1}, "r2": {"n": [4, 10, 12, 14, 17, 19], "how": {"191": ["(12 * 19) --> (228 + 4) --> (232 - 10) --> (222 - 17) --> (205 - 14) --> 191", "(12 + 19) --> (31 - 14) --> (17 * 10) --> (170 + 4) --> (174 + 17) --> 191", "(12 + 4) --> (16 * 10) --> (160 + 17) --> (177 + 14) --> 191", "(12 - 10) --> (2 * 19) --> (38 + 14) --> (52 * 4) --> (208 - 17) --> 191", "(12 * 17) --> (204 - 19) --> (185 - 4) --> (181 + 10) --> 191", "(12 + 17) --> (29 + 14) --> (43 * 4) --> (172 + 19) --> 191", "(12 * 14) --> (168 + 19) --> (187 + 4) --> 191", "(12 * 14) --> (168 - 4) --> (164 + 10) --> (174 + 17) --> 191", "(19 - 12) --> (7 + 4) --> (11 * 17) --> (187 - 10) --> (177 + 14) --> 191", "(19 * 10) --> (190 + 4) --> (194 - 17) --> (177 + 14) --> 191", "(4 + 17) --> (21 * 10) --> (210 - 19) --> 191", "(10 * 17) --> (170 - 12) --> (158 + 19) --> (177 + 14) --> 191", "(10 + 17) --> (27 - 12) --> (15 * 14) --> (210 - 19) --> 191", "(17 - 4) --> (13 * 14) --> (182 + 19) --> (201 - 10) --> 191"]}, "target": 191, "n_ways": 14, "round": 2}, "r3": {"n": [3, 6, 11, 12, 18, 20], "how": {"343": ["(20 * 6) --> (120 * 3) --> (360 + 12) --> (372 - 11) --> (361 - 18) --> 343", "(20 - 6) --> (14 + 18) --> (32 * 11) --> (352 + 3) --> (355 - 12) --> 343", "(20 - 3) --> (17 + 12) --> (29 * 11) --> (319 + 6) --> (325 + 18) --> 343", "(20 + 12) --> (32 * 11) --> (352 - 6) --> (346 - 3) --> 343", "(20 * 18) --> (360 + 6) --> (366 - 12) --> (354 - 11) --> 343", "(20 * 18) --> (360 - 6) --> (354 - 11) --> 343", "(6 * 3) --> (18 * 18) --> (324 + 20) --> (344 - 12) --> (332 + 11) --> 343", "(6 + 11) --> (17 * 20) --> (340 + 3) --> 343", "(3 * 12) --> (36 - 18) --> (18 * 20) --> (360 - 6) --> (354 - 11) --> 343", "(3 + 12) --> (15 + 18) --> (33 * 11) --> (363 - 20) --> 343", "(12 - 6) --> (6 + 11) --> (17 * 20) --> (340 + 3) --> 343", "(12 / 6) --> (2.0 * 18) --> (36.0 - 3) --> (33.0 * 11) --> (363.0 - 20) --> 343", "(11 * 18) --> (198 + 6) --> (204 * 20) --> (4080 / 12) --> (340.0 + 3) --> 343", "(18 / 3) --> (6.0 + 12) --> (18.0 * 20) --> (360.0 - 6) --> (354.0 - 11) --> 343"]}, "target": 343, "n_ways": 14, "round": 3}, "r4": {"n": [8, 9, 12, 20, 24, 25], "how": {"445": ["(24 - 12) --> (12 + 9) --> (21 * 20) --> (420 + 25) --> 445", "(24 + 25) --> (49 * 9) --> (441 + 12) --> (453 - 8) --> 445", "(12 + 9) --> (21 * 20) --> (420 + 25) --> 445", "(8 + 20) --> (28 + 9) --> (37 * 12) --> (444 - 24) --> (420 + 25) --> 445", "(8 + 9) --> (17 * 24) --> (408 + 12) --> (420 + 25) --> 445", "(8 + 9) --> (17 * 25) --> (425 + 20) --> 445"]}, "target": 445, "n_ways": 6, "round": 4}, "r5": {"n": [4, 7, 9, 14, 23, 24], "how": {"577": ["(23 * 24) --> (552 + 7) --> (559 + 14) --> (573 + 4) --> 577", "(7 + 14) --> (21 + 4) --> (25 * 24) --> (600 - 23) --> 577", "(9 * 14) --> (126 + 24) --> (150 * 4) --> (600 - 23) --> 577", "(14 * 4) --> (56 + 23) --> (79 * 7) --> (553 + 24) --> 577"]}, "target": 577, "n_ways": 4, "round": 5}}