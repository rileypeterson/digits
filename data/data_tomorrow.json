{"puzzleDate": "2024-12-17", "r1": {"n": [3, 4, 6, 8, 12, 15], "how": {"158": ["(6 + 4) --> (10 * 15) --> (150 + 8) --> 158", "(6 + 4) --> (10 + 12) --> (22 * 8) --> (176 - 15) --> (161 - 3) --> 158", "(6 * 3) --> (18 + 4) --> (22 - 12) --> (10 * 15) --> (150 + 8) --> 158", "(6 * 3) --> (18 - 8) --> (10 * 15) --> (150 - 4) --> (146 + 12) --> 158", "(6 / 3) --> (2.0 + 8) --> (10.0 * 15) --> (150.0 - 4) --> (146.0 + 12) --> 158", "(6 + 12) --> (18 / 3) --> (6.0 + 4) --> (10.0 * 15) --> (150.0 + 8) --> 158", "(6 + 12) --> (18 * 8) --> (144 + 15) --> (159 - 4) --> (155 + 3) --> 158", "(15 * 4) --> (60 * 8) --> (480 - 6) --> (474 / 3) --> 158", "(15 + 4) --> (19 * 8) --> (152 - 6) --> (146 + 12) --> 158", "(15 * 4) --> (60 * 8) --> (480 + 6) --> (486 - 12) --> (474 / 3) --> 158", "(15 + 3) --> (18 + 8) --> (26 + 12) --> (38 * 4) --> (152 + 6) --> 158", "(15 - 3) --> (12 * 12) --> (144 + 6) --> (150 + 8) --> 158", "(15 + 12) --> (27 * 6) --> (162 - 4) --> 158", "(4 * 3) --> (12 * 12) --> (144 + 6) --> (150 + 8) --> 158", "(4 + 3) --> (7 + 12) --> (19 * 8) --> (152 + 6) --> 158", "(3 * 12) --> (36 / 6) --> (6.0 + 4) --> (10.0 * 15) --> (150.0 + 8) --> 158", "(3 * 12) --> (36 - 15) --> (21 * 8) --> (168 - 6) --> (162 - 4) --> 158", "(8 * 12) --> (96 - 15) --> (81 * 6) --> (486 / 3) --> (162.0 - 4) --> 158", "(12 / 3) --> (4.0 + 6) --> (10.0 * 15) --> (150.0 + 8) --> 158"]}, "target": 158, "n_ways": 19, "round": 1}, "r2": {"n": [3, 6, 11, 12, 15, 19], "how": {"184": ["(19 + 11) --> (30 + 6) --> (36 * 15) --> (540 + 12) --> (552 / 3) --> 184", "(19 + 15) --> (34 * 11) --> (374 * 6) --> (2244 / 12) --> (187.0 - 3) --> 184", "(19 + 15) --> (34 * 6) --> (204 - 11) --> (193 + 3) --> (196 - 12) --> 184", "(19 - 6) --> (13 * 15) --> (195 - 11) --> 184", "(19 + 6) --> (25 - 12) --> (13 * 15) --> (195 - 11) --> 184", "(11 - 3) --> (8 * 19) --> (152 * 15) --> (2280 / 12) --> (190.0 - 6) --> 184", "(11 * 15) --> (165 + 19) --> 184", "(11 + 15) --> (26 * 6) --> (156 + 19) --> (175 - 3) --> (172 + 12) --> 184", "(11 - 6) --> (5 * 3) --> (15 * 12) --> (180 + 19) --> (199 - 15) --> 184", "(11 * 6) --> (66 - 15) --> (51 * 3) --> (153 + 19) --> (172 + 12) --> 184", "(3 + 12) --> (15 * 11) --> (165 + 19) --> 184", "(3 * 12) --> (36 - 11) --> (25 - 15) --> (10 * 19) --> (190 - 6) --> 184", "(15 - 6) --> (9 / 3) --> (3.0 + 12) --> (15.0 * 11) --> (165.0 + 19) --> 184", "(15 + 12) --> (27 * 6) --> (162 + 19) --> (181 + 3) --> 184", "(6 - 3) --> (3 + 12) --> (15 * 11) --> (165 + 19) --> 184", "(12 / 3) --> (4.0 + 15) --> (19.0 * 11) --> (209.0 - 19) --> (190.0 - 6) --> 184", "(12 / 6) --> (2.0 + 15) --> (17.0 * 11) --> (187.0 - 3) --> 184"]}, "target": 184, "n_ways": 17, "round": 2}, "r3": {"n": [5, 7, 10, 13, 16, 19], "how": {"248": ["(5 + 13) --> (18 + 16) --> (34 * 7) --> (238 + 10) --> 248", "(5 + 19) --> (24 * 7) --> (168 - 13) --> (155 * 16) --> (2480 / 10) --> 248", "(5 + 16) --> (21 + 7) --> (28 * 10) --> (280 - 13) --> (267 - 19) --> 248", "(13 * 19) --> (247 - 5) --> (242 + 16) --> (258 - 10) --> 248", "(13 * 19) --> (247 - 16) --> (231 + 7) --> (238 + 10) --> 248", "(19 - 16) --> (3 * 13) --> (39 - 5) --> (34 * 7) --> (238 + 10) --> 248", "(16 - 13) --> (3 * 5) --> (15 + 19) --> (34 * 7) --> (238 + 10) --> 248", "(7 + 10) --> (17 * 16) --> (272 - 5) --> (267 - 19) --> 248"]}, "target": 248, "n_ways": 8, "round": 3}, "r4": {"n": [7, 9, 11, 15, 20, 22], "how": {"373": ["(20 - 7) --> (13 + 11) --> (24 * 15) --> (360 + 22) --> (382 - 9) --> 373", "(20 - 7) --> (13 + 11) --> (24 + 15) --> (39 * 9) --> (351 + 22) --> 373", "(7 + 11) --> (18 * 20) --> (360 + 22) --> (382 - 9) --> 373"]}, "target": 373, "n_ways": 3, "round": 4}, "r5": {"n": [15, 17, 19, 22, 24, 25], "how": {"488": ["(25 * 19) --> (475 + 15) --> (490 + 22) --> (512 - 24) --> 488", "(25 - 19) --> (6 + 24) --> (30 * 17) --> (510 - 22) --> 488", "(22 * 24) --> (528 - 15) --> (513 - 25) --> 488", "(19 * 24) --> (456 + 15) --> (471 + 17) --> 488"]}, "target": 488, "n_ways": 4, "round": 5}}