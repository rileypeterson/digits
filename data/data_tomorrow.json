{"puzzleDate": "2024-12-04", "r1": {"n": [3, 6, 8, 11, 13, 15], "how": {"141": ["(13 * 15) --> (195 - 11) --> (184 * 6) --> (1104 / 8) --> (138.0 + 3) --> 141", "(13 + 15) --> (28 + 11) --> (39 + 8) --> (47 * 3) --> 141", "(13 + 15) --> (28 - 6) --> (22 - 3) --> (19 * 8) --> (152 - 11) --> 141", "(13 * 15) --> (195 * 8) --> (1560 - 6) --> (1554 - 3) --> (1551 / 11) --> 141", "(13 + 11) --> (24 * 15) --> (360 * 3) --> (1080 / 8) --> (135.0 + 6) --> 141", "(13 + 11) --> (24 * 6) --> (144 - 3) --> 141", "(13 * 11) --> (143 + 6) --> (149 - 8) --> 141", "(13 + 11) --> (24 - 6) --> (18 * 8) --> (144 - 3) --> 141", "(13 + 11) --> (24 - 3) --> (21 * 6) --> (126 + 15) --> 141", "(13 * 3) --> (39 - 15) --> (24 * 6) --> (144 - 11) --> (133 + 8) --> 141", "(13 + 8) --> (21 - 15) --> (6 * 6) --> (36 + 11) --> (47 * 3) --> 141", "(13 + 8) --> (21 * 6) --> (126 + 15) --> 141", "(15 * 11) --> (165 - 13) --> (152 - 3) --> (149 - 8) --> 141", "(15 - 11) --> (4 + 6) --> (10 * 13) --> (130 + 3) --> (133 + 8) --> 141", "(15 + 6) --> (21 - 3) --> (18 - 8) --> (10 * 13) --> (130 + 11) --> 141", "(15 / 3) --> (5.0 + 11) --> (16.0 * 8) --> (128.0 + 13) --> 141", "(15 - 3) --> (12 / 6) --> (2.0 + 8) --> (10.0 * 13) --> (130.0 + 11) --> 141", "(15 + 3) --> (18 - 8) --> (10 * 13) --> (130 + 11) --> 141", "(15 + 8) --> (23 * 6) --> (138 + 3) --> 141", "(11 - 8) --> (3 * 13) --> (39 - 15) --> (24 * 6) --> (144 - 3) --> 141", "(11 - 8) --> (3 * 15) --> (45 * 3) --> (135 + 6) --> 141", "(6 * 3) --> (18 - 8) --> (10 * 13) --> (130 + 11) --> 141", "(6 / 3) --> (2.0 + 8) --> (10.0 * 13) --> (130.0 + 11) --> 141", "(3 + 8) --> (11 * 15) --> (165 - 13) --> (152 - 11) --> 141"]}, "target": 141, "n_ways": 24, "round": 1}, "r2": {"n": [4, 6, 13, 15, 17, 19], "how": {"193": ["(6 + 17) --> (23 - 19) --> (4 * 4) --> (16 * 13) --> (208 - 15) --> 193", "(6 + 4) --> (10 + 19) --> (29 - 17) --> (12 * 15) --> (180 + 13) --> 193", "(6 + 19) --> (25 - 13) --> (12 * 17) --> (204 + 4) --> (208 - 15) --> 193", "(17 - 6) --> (11 + 4) --> (15 * 15) --> (225 - 13) --> (212 - 19) --> 193", "(17 + 4) --> (21 - 19) --> (2 * 6) --> (12 * 15) --> (180 + 13) --> 193", "(17 * 13) --> (221 + 6) --> (227 - 15) --> (212 - 19) --> 193", "(4 * 13) --> (52 + 15) --> (67 * 17) --> (1139 + 19) --> (1158 / 6) --> 193", "(15 - 4) --> (11 * 17) --> (187 + 6) --> 193", "(15 - 4) --> (11 * 17) --> (187 - 13) --> (174 + 19) --> 193", "(15 - 4) --> (11 + 19) --> (30 * 6) --> (180 + 13) --> 193", "(15 * 13) --> (195 - 6) --> (189 + 4) --> 193", "(15 * 13) --> (195 + 17) --> (212 - 19) --> 193", "(13 + 19) --> (32 / 4) --> (8.0 + 6) --> (14.0 * 15) --> (210.0 - 17) --> 193", "(19 - 6) --> (13 * 17) --> (221 - 15) --> (206 - 13) --> 193", "(19 - 17) --> (2 * 6) --> (12 * 15) --> (180 + 13) --> 193"]}, "target": 193, "n_ways": 15, "round": 2}, "r3": {"n": [6, 8, 9, 11, 14, 16], "how": {"310": ["(8 + 16) --> (24 * 14) --> (336 - 6) --> (330 - 11) --> (319 - 9) --> 310", "(8 + 11) --> (19 * 16) --> (304 + 6) --> 310", "(16 + 6) --> (22 * 14) --> (308 + 11) --> (319 - 9) --> 310", "(16 + 11) --> (27 * 8) --> (216 / 6) --> (36.0 * 9) --> (324.0 - 14) --> 310", "(14 + 6) --> (20 * 16) --> (320 - 8) --> (312 - 11) --> (301 + 9) --> 310", "(14 - 11) --> (3 * 9) --> (27 - 8) --> (19 * 16) --> (304 + 6) --> 310", "(11 + 9) --> (20 * 14) --> (280 + 8) --> (288 + 16) --> (304 + 6) --> 310"]}, "target": 310, "n_ways": 7, "round": 3}, "r4": {"n": [9, 10, 12, 14, 21, 24], "how": {"415": ["(21 - 10) --> (11 + 24) --> (35 * 12) --> (420 + 9) --> (429 - 14) --> 415", "(21 * 10) --> (210 * 24) --> (5040 / 12) --> (420.0 + 9) --> (429.0 - 14) --> 415", "(21 + 14) --> (35 * 12) --> (420 + 9) --> (429 + 10) --> (439 - 24) --> 415", "(21 + 24) --> (45 * 9) --> (405 + 10) --> 415", "(21 + 24) --> (45 * 10) --> (450 - 9) --> (441 - 14) --> (427 - 12) --> 415", "(10 + 24) --> (34 * 12) --> (408 + 21) --> (429 - 14) --> 415"]}, "target": 415, "n_ways": 6, "round": 4}, "r5": {"n": [5, 10, 12, 14, 16, 25], "how": {"566": ["(10 - 5) --> (5 + 25) --> (30 + 16) --> (46 * 12) --> (552 + 14) --> 566", "(10 + 12) --> (22 * 25) --> (550 + 16) --> 566", "(5 + 25) --> (30 + 16) --> (46 * 12) --> (552 + 14) --> 566", "(5 * 14) --> (70 - 25) --> (45 * 12) --> (540 + 10) --> (550 + 16) --> 566", "(25 - 14) --> (11 * 10) --> (110 * 5) --> (550 + 16) --> 566"]}, "target": 566, "n_ways": 5, "round": 5}}