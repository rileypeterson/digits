{"puzzleDate": "2025-02-20", "r1": {"n": [2, 6, 9, 10, 12, 15], "how": {"106": ["(15 + 9) --> (24 - 12) --> (12 - 2) --> (10 * 10) --> (100 + 6) --> 106", "(15 + 9) --> (24 * 12) --> (288 * 2) --> (576 / 6) --> (96.0 + 10) --> 106", "(15 - 9) --> (6 + 12) --> (18 * 6) --> (108 - 2) --> 106", "(15 - 9) --> (6 + 2) --> (8 * 12) --> (96 + 10) --> 106", "(15 - 9) --> (6 * 6) --> (36 + 12) --> (48 * 2) --> (96 + 10) --> 106", "(15 - 9) --> (6 + 6) --> (12 * 10) --> (120 - 12) --> (108 - 2) --> 106", "(15 * 12) --> (180 / 9) --> (20.0 / 2) --> (10.0 * 10) --> (100.0 + 6) --> 106", "(15 * 12) --> (180 / 2) --> (90.0 + 10) --> (100.0 + 6) --> 106", "(15 * 12) --> (180 / 10) --> (18.0 - 6) --> (12.0 * 9) --> (108.0 - 2) --> 106", "(15 * 12) --> (180 / 10) --> (18.0 * 6) --> (108.0 - 2) --> 106", "(15 * 12) --> (180 - 6) --> (174 / 2) --> (87.0 + 9) --> (96.0 + 10) --> 106", "(15 * 10) --> (150 + 12) --> (162 / 9) --> (18.0 * 6) --> (108.0 - 2) --> 106", "(15 - 6) --> (9 * 12) --> (108 - 2) --> 106", "(9 * 12) --> (108 - 2) --> 106", "(9 * 12) --> (108 + 2) --> (110 - 10) --> (100 + 6) --> 106", "(9 * 2) --> (18 * 6) --> (108 - 12) --> (96 + 10) --> 106", "(9 * 6) --> (54 + 15) --> (69 - 10) --> (59 * 2) --> (118 - 12) --> 106", "(12 - 2) --> (10 * 10) --> (100 + 15) --> (115 - 9) --> 106", "(12 - 2) --> (10 * 10) --> (100 + 6) --> 106", "(12 - 10) --> (2 * 9) --> (18 * 6) --> (108 - 2) --> 106", "(12 * 6) --> (72 + 15) --> (87 + 9) --> (96 + 10) --> 106", "(12 + 6) --> (18 * 9) --> (162 / 2) --> (81.0 + 15) --> (96.0 + 10) --> 106", "(12 / 6) --> (2.0 + 10) --> (12.0 * 9) --> (108.0 - 2) --> 106", "(2 + 6) --> (8 * 12) --> (96 + 10) --> 106", "(10 - 9) --> (1 * 15) --> (15 - 6) --> (9 * 12) --> (108 - 2) --> 106"]}, "target": 106, "n_ways": 25, "round": 1}, "r2": {"n": [6, 11, 14, 17, 18, 20], "how": {"237": ["(11 + 6) --> (17 * 14) --> (238 - 18) --> (220 + 17) --> 237", "(11 + 6) --> (17 * 17) --> (289 - 14) --> (275 - 20) --> (255 - 18) --> 237", "(11 * 20) --> (220 + 17) --> 237", "(6 + 14) --> (20 * 11) --> (220 + 17) --> 237", "(6 + 20) --> (26 - 11) --> (15 * 17) --> (255 - 18) --> 237", "(6 + 17) --> (23 * 11) --> (253 - 14) --> (239 - 20) --> (219 + 18) --> 237", "(14 * 18) --> (252 + 11) --> (263 - 6) --> (257 - 20) --> 237", "(20 + 18) --> (38 - 17) --> (21 * 11) --> (231 + 6) --> 237", "(20 + 17) --> (37 * 6) --> (222 + 11) --> (233 - 14) --> (219 + 18) --> 237", "(18 - 6) --> (12 * 20) --> (240 + 14) --> (254 - 17) --> 237"]}, "target": 237, "n_ways": 10, "round": 2}, "r3": {"n": [10, 11, 13, 17, 19, 20], "how": {"328": ["(19 + 13) --> (32 * 10) --> (320 + 17) --> (337 - 20) --> (317 + 11) --> 328", "(17 * 20) --> (340 - 13) --> (327 + 11) --> (338 - 10) --> 328", "(17 + 11) --> (28 - 10) --> (18 * 20) --> (360 - 19) --> (341 - 13) --> 328", "(20 + 13) --> (33 * 10) --> (330 - 19) --> (311 + 17) --> 328", "(20 + 10) --> (30 * 11) --> (330 - 19) --> (311 + 17) --> 328"]}, "target": 328, "n_ways": 5, "round": 3}, "r4": {"n": [4, 7, 10, 13, 14, 22], "how": {"412": ["(7 + 13) --> (20 * 22) --> (440 - 14) --> (426 - 10) --> (416 - 4) --> 412", "(7 * 13) --> (91 + 22) --> (113 - 10) --> (103 * 4) --> 412", "(7 * 13) --> (91 + 10) --> (101 * 4) --> (404 + 22) --> (426 - 14) --> 412", "(7 + 22) --> (29 * 14) --> (406 + 10) --> (416 - 4) --> 412", "(7 * 22) --> (154 * 10) --> (1540 / 4) --> (385.0 + 13) --> (398.0 + 14) --> 412", "(7 * 14) --> (98 + 13) --> (111 * 4) --> (444 - 22) --> (422 - 10) --> 412", "(22 + 10) --> (32 * 13) --> (416 - 4) --> 412", "(22 + 10) --> (32 - 4) --> (28 * 14) --> (392 + 7) --> (399 + 13) --> 412"]}, "target": 412, "n_ways": 8, "round": 4}, "r5": {"n": [6, 9, 15, 17, 23, 24], "how": {"554": ["(6 * 15) --> (90 - 24) --> (66 * 9) --> (594 - 23) --> (571 - 17) --> 554", "(6 * 9) --> (54 - 17) --> (37 * 15) --> (555 - 24) --> (531 + 23) --> 554", "(24 * 23) --> (552 - 6) --> (546 - 9) --> (537 + 17) --> 554", "(24 * 23) --> (552 - 15) --> (537 + 17) --> 554"]}, "target": 554, "n_ways": 4, "round": 5}}