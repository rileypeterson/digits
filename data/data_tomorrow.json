{"puzzleDate": "2023-12-24", "r1": {"n": [2, 5, 6, 9, 13, 15], "how": {"98": ["(9 - 6) --> (3 * 2) --> (6 * 15) --> (90 + 13) --> (103 - 5) --> 98", "(9 * 6) --> (54 * 2) --> (108 - 15) --> (93 + 5) --> 98", "(9 - 6) --> (3 * 2) --> (6 * 13) --> (78 + 15) --> (93 + 5) --> 98", "(9 + 6) --> (15 + 2) --> (17 * 5) --> (85 + 13) --> 98", "(9 * 6) --> (54 - 5) --> (49 * 2) --> 98", "(9 - 2) --> (7 * 15) --> (105 + 6) --> (111 - 13) --> 98", "(9 + 2) --> (11 + 5) --> (16 * 6) --> (96 + 15) --> (111 - 13) --> 98", "(9 * 13) --> (117 * 5) --> (585 + 15) --> (600 / 6) --> (100.0 - 2) --> 98", "(9 + 5) --> (14 / 2) --> (7.0 * 15) --> (105.0 + 6) --> (111.0 - 13) --> 98", "(9 - 5) --> (4 * 2) --> (8 * 13) --> (104 - 6) --> 98", "(9 * 5) --> (45 / 15) --> (3.0 + 13) --> (16.0 * 6) --> (96.0 + 2) --> 98", "(6 + 2) --> (8 * 13) --> (104 + 9) --> (113 - 15) --> 98", "(6 / 2) --> (3.0 + 5) --> (8.0 * 15) --> (120.0 - 9) --> (111.0 - 13) --> 98", "(6 * 15) --> (90 + 13) --> (103 - 5) --> 98", "(6 + 15) --> (21 * 5) --> (105 - 9) --> (96 + 2) --> 98", "(6 + 13) --> (19 * 9) --> (171 + 15) --> (186 / 2) --> (93.0 + 5) --> 98", "(6 * 13) --> (78 - 9) --> (69 - 15) --> (54 - 5) --> (49 * 2) --> 98", "(6 * 13) --> (78 + 15) --> (93 + 5) --> 98", "(2 + 15) --> (17 * 5) --> (85 + 13) --> 98", "(2 + 5) --> (7 * 15) --> (105 + 6) --> (111 - 13) --> 98", "(15 - 9) --> (6 * 6) --> (36 + 13) --> (49 * 2) --> 98", "(15 - 2) --> (13 * 9) --> (117 - 6) --> (111 - 13) --> 98", "(15 - 2) --> (13 - 5) --> (8 * 13) --> (104 - 6) --> 98", "(15 * 13) --> (195 - 9) --> (186 / 2) --> (93.0 + 5) --> 98", "(15 * 13) --> (195 + 6) --> (201 - 5) --> (196 / 2) --> 98", "(15 + 5) --> (20 * 6) --> (120 - 9) --> (111 - 13) --> 98", "(15 / 5) --> (3.0 + 13) --> (16.0 * 6) --> (96.0 + 2) --> 98", "(13 - 2) --> (11 * 9) --> (99 - 6) --> (93 + 5) --> 98"]}, "target": 98, "n_ways": 28, "round": 1}, "r2": {"n": [6, 8, 10, 11, 17, 20], "how": {"206": ["(8 + 20) --> (28 * 6) --> (168 + 10) --> (178 + 11) --> (189 + 17) --> 206", "(8 + 11) --> (19 + 17) --> (36 * 6) --> (216 - 20) --> (196 + 10) --> 206", "(8 + 11) --> (19 + 17) --> (36 * 6) --> (216 - 10) --> 206", "(20 + 10) --> (30 * 8) --> (240 - 11) --> (229 - 17) --> (212 - 6) --> 206", "(20 * 10) --> (200 - 11) --> (189 + 17) --> 206", "(20 * 10) --> (200 + 6) --> 206", "(20 * 11) --> (220 - 8) --> (212 - 6) --> 206", "(20 - 17) --> (3 * 11) --> (33 - 6) --> (27 * 8) --> (216 - 10) --> 206", "(20 - 17) --> (3 * 11) --> (33 * 6) --> (198 + 8) --> 206", "(11 - 8) --> (3 + 17) --> (20 - 10) --> (10 * 20) --> (200 + 6) --> 206"]}, "target": 206, "n_ways": 10, "round": 2}, "r3": {"n": [3, 10, 11, 14, 16, 20], "how": {"315": ["(14 + 20) --> (34 - 3) --> (31 * 10) --> (310 + 16) --> (326 - 11) --> 315", "(14 + 20) --> (34 - 3) --> (31 * 11) --> (341 - 10) --> (331 - 16) --> 315", "(20 - 14) --> (6 + 10) --> (16 + 3) --> (19 * 16) --> (304 + 11) --> 315", "(20 / 10) --> (2.0 + 14) --> (16.0 + 3) --> (19.0 * 16) --> (304.0 + 11) --> 315", "(10 + 11) --> (21 - 3) --> (18 * 14) --> (252 * 20) --> (5040 / 16) --> 315", "(10 * 3) --> (30 - 14) --> (16 * 20) --> (320 - 16) --> (304 + 11) --> 315"]}, "target": 315, "n_ways": 6, "round": 3}, "r4": {"n": [7, 9, 16, 19, 21, 24], "how": {"450": ["(24 - 21) --> (3 * 19) --> (57 - 7) --> (50 * 9) --> 450", "(24 + 19) --> (43 + 7) --> (50 * 9) --> 450", "(24 - 19) --> (5 + 16) --> (21 * 21) --> (441 + 9) --> 450", "(19 - 16) --> (3 * 21) --> (63 * 7) --> (441 + 9) --> 450", "(19 + 16) --> (35 / 7) --> (5.0 + 21) --> (26.0 + 24) --> (50.0 * 9) --> 450", "(7 + 16) --> (23 * 21) --> (483 - 9) --> (474 - 24) --> 450"]}, "target": 450, "n_ways": 6, "round": 4}, "r5": {"n": [4, 6, 11, 18, 23, 25], "how": {"587": ["(25 + 6) --> (31 - 23) --> (8 * 18) --> (144 * 4) --> (576 + 11) --> 587", "(25 * 23) --> (575 - 6) --> (569 + 18) --> 587", "(25 + 23) --> (48 / 6) --> (8.0 * 18) --> (144.0 * 4) --> (576.0 + 11) --> 587", "(11 + 23) --> (34 * 18) --> (612 - 25) --> 587"]}, "target": 587, "n_ways": 4, "round": 5}}