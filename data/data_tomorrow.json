{"puzzleDate": "2025-08-15", "r1": {"n": [3, 5, 9, 10, 12, 15], "how": {"88": ["(12 * 5) --> (60 + 3) --> (63 + 10) --> (73 + 15) --> 88", "(12 - 5) --> (7 * 10) --> (70 + 3) --> (73 + 15) --> 88", "(12 - 5) --> (7 + 10) --> (17 * 15) --> (255 + 9) --> (264 / 3) --> 88", "(12 + 5) --> (17 * 15) --> (255 + 9) --> (264 / 3) --> 88", "(12 + 5) --> (17 + 9) --> (26 * 3) --> (78 + 10) --> 88", "(12 - 5) --> (7 * 9) --> (63 + 10) --> (73 + 15) --> 88", "(12 * 10) --> (120 - 3) --> (117 - 5) --> (112 - 15) --> (97 - 9) --> 88", "(12 * 10) --> (120 / 15) --> (8.0 + 9) --> (17.0 * 5) --> (85.0 + 3) --> 88", "(12 + 10) --> (22 + 9) --> (31 * 3) --> (93 - 5) --> 88", "(12 + 9) --> (21 * 3) --> (63 + 10) --> (73 + 15) --> 88", "(12 * 9) --> (108 + 5) --> (113 - 10) --> (103 - 15) --> 88", "(12 * 9) --> (108 - 5) --> (103 - 15) --> 88", "(3 * 5) --> (15 / 15) --> (1.0 + 9) --> (10.0 * 10) --> (100.0 - 12) --> 88", "(3 * 5) --> (15 - 9) --> (6 * 15) --> (90 - 12) --> (78 + 10) --> 88", "(3 + 9) --> (12 * 10) --> (120 - 12) --> (108 - 5) --> (103 - 15) --> 88", "(5 + 10) --> (15 * 15) --> (225 + 12) --> (237 / 3) --> (79.0 + 9) --> 88", "(5 * 15) --> (75 + 3) --> (78 + 10) --> 88", "(5 * 9) --> (45 - 15) --> (30 / 3) --> (10.0 * 10) --> (100.0 - 12) --> 88", "(10 - 3) --> (7 * 12) --> (84 - 5) --> (79 + 9) --> 88", "(10 - 3) --> (7 * 15) --> (105 - 12) --> (93 - 5) --> 88", "(10 * 9) --> (90 + 3) --> (93 - 5) --> 88", "(15 / 3) --> (5.0 + 5) --> (10.0 * 10) --> (100.0 - 12) --> 88", "(15 / 3) --> (5.0 / 5) --> (1.0 + 9) --> (10.0 * 10) --> (100.0 - 12) --> 88", "(15 - 5) --> (10 * 10) --> (100 - 12) --> 88", "(15 - 5) --> (10 * 10) --> (100 - 3) --> (97 - 9) --> 88", "(15 / 5) --> (3.0 + 10) --> (13.0 + 9) --> (22.0 * 12) --> (264.0 / 3) --> 88", "(9 - 3) --> (6 * 15) --> (90 - 12) --> (78 + 10) --> 88"]}, "target": 88, "n_ways": 27, "round": 1}, "r2": {"n": [4, 5, 7, 10, 16, 17], "how": {"195": ["(17 + 16) --> (33 + 4) --> (37 * 5) --> (185 + 10) --> 195", "(17 + 16) --> (33 - 4) --> (29 + 10) --> (39 * 5) --> 195", "(17 * 16) --> (272 * 7) --> (1904 - 4) --> (1900 / 10) --> (190.0 + 5) --> 195", "(17 + 16) --> (33 + 7) --> (40 + 10) --> (50 * 4) --> (200 - 5) --> 195", "(17 + 4) --> (21 / 7) --> (3.0 + 16) --> (19.0 * 10) --> (190.0 + 5) --> 195", "(17 - 4) --> (13 + 7) --> (20 * 10) --> (200 - 5) --> 195", "(17 - 5) --> (12 * 16) --> (192 - 4) --> (188 + 7) --> 195", "(17 - 5) --> (12 * 16) --> (192 - 7) --> (185 + 10) --> 195", "(17 * 5) --> (85 - 7) --> (78 * 4) --> (312 * 10) --> (3120 / 16) --> 195", "(17 * 5) --> (85 - 7) --> (78 * 10) --> (780 / 4) --> 195", "(17 + 5) --> (22 - 10) --> (12 * 16) --> (192 - 4) --> (188 + 7) --> 195", "(16 - 4) --> (12 + 7) --> (19 * 10) --> (190 + 5) --> 195", "(16 + 4) --> (20 * 10) --> (200 - 5) --> 195", "(16 - 7) --> (9 * 4) --> (36 - 17) --> (19 * 10) --> (190 + 5) --> 195", "(16 - 10) --> (6 * 5) --> (30 + 17) --> (47 * 4) --> (188 + 7) --> 195", "(16 + 10) --> (26 * 7) --> (182 + 17) --> (199 - 4) --> 195", "(4 * 5) --> (20 - 7) --> (13 * 17) --> (221 - 16) --> (205 - 10) --> 195", "(4 * 10) --> (40 - 17) --> (23 + 16) --> (39 * 5) --> 195", "(4 + 10) --> (14 * 16) --> (224 - 17) --> (207 - 5) --> (202 - 7) --> 195"]}, "target": 195, "n_ways": 19, "round": 2}, "r3": {"n": [8, 11, 14, 16, 19, 20], "how": {"295": ["(19 + 14) --> (33 - 16) --> (17 + 8) --> (25 * 11) --> (275 + 20) --> 295", "(19 + 14) --> (33 - 8) --> (25 * 11) --> (275 + 20) --> 295", "(19 + 14) --> (33 * 8) --> (264 + 11) --> (275 + 20) --> 295", "(19 * 16) --> (304 - 11) --> (293 + 14) --> (307 + 8) --> (315 - 20) --> 295", "(19 * 16) --> (304 + 11) --> (315 - 20) --> 295", "(19 + 8) --> (27 * 11) --> (297 + 14) --> (311 - 16) --> 295", "(16 - 14) --> (2 * 19) --> (38 * 8) --> (304 + 11) --> (315 - 20) --> 295", "(16 / 8) --> (2.0 + 14) --> (16.0 * 19) --> (304.0 + 11) --> (315.0 - 20) --> 295", "(16 * 20) --> (320 - 19) --> (301 - 14) --> (287 + 8) --> 295", "(16 * 20) --> (320 - 11) --> (309 - 14) --> 295"]}, "target": 295, "n_ways": 10, "round": 3}, "r4": {"n": [4, 7, 11, 16, 20, 23], "how": {"446": ["(7 + 16) --> (23 + 20) --> (43 * 11) --> (473 - 23) --> (450 - 4) --> 446", "(7 + 11) --> (18 * 23) --> (414 + 16) --> (430 + 20) --> (450 - 4) --> 446", "(23 * 20) --> (460 - 7) --> (453 + 4) --> (457 - 11) --> 446", "(23 + 20) --> (43 * 11) --> (473 - 7) --> (466 - 16) --> (450 - 4) --> 446"]}, "target": 446, "n_ways": 4, "round": 4}, "r5": {"n": [6, 9, 11, 14, 18, 24], "how": {"479": ["(24 + 9) --> (33 * 14) --> (462 + 6) --> (468 + 11) --> 479", "(24 - 9) --> (15 + 18) --> (33 * 14) --> (462 + 6) --> (468 + 11) --> 479", "(9 - 6) --> (3 + 18) --> (21 * 24) --> (504 - 14) --> (490 - 11) --> 479", "(18 * 11) --> (198 + 9) --> (207 * 14) --> (2898 - 24) --> (2874 / 6) --> 479"]}, "target": 479, "n_ways": 4, "round": 5}}