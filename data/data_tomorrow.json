{"puzzleDate": "2023-10-17", "r1": {"n": [2, 4, 6, 8, 11, 13], "how": {"123": ["(11 * 6) --> (66 * 4) --> (264 + 8) --> (272 / 2) --> (136.0 - 13) --> 123", "(11 - 6) --> (5 + 4) --> (9 * 13) --> (117 + 8) --> (125 - 2) --> 123", "(11 + 6) --> (17 * 4) --> (68 * 2) --> (136 - 13) --> 123", "(11 + 6) --> (17 - 8) --> (9 * 13) --> (117 + 4) --> (121 + 2) --> 123", "(11 + 6) --> (17 * 8) --> (136 - 13) --> 123", "(11 * 6) --> (66 * 2) --> (132 - 4) --> (128 + 8) --> (136 - 13) --> 123", "(11 * 4) --> (44 + 8) --> (52 * 2) --> (104 + 6) --> (110 + 13) --> 123", "(11 + 4) --> (15 + 2) --> (17 * 6) --> (102 + 8) --> (110 + 13) --> 123", "(11 + 4) --> (15 + 2) --> (17 * 8) --> (136 - 13) --> 123", "(11 - 4) --> (7 + 2) --> (9 * 13) --> (117 + 6) --> 123", "(11 + 8) --> (19 * 6) --> (114 - 4) --> (110 + 13) --> 123", "(11 * 13) --> (143 - 6) --> (137 - 4) --> (133 - 8) --> (125 - 2) --> 123", "(11 + 2) --> (13 * 8) --> (104 + 6) --> (110 + 13) --> 123", "(11 - 2) --> (9 * 13) --> (117 + 6) --> 123", "(6 + 4) --> (10 * 11) --> (110 + 13) --> 123", "(6 - 4) --> (2 / 2) --> (1.0 + 13) --> (14.0 * 8) --> (112.0 + 11) --> 123", "(6 * 8) --> (48 + 11) --> (59 - 4) --> (55 * 2) --> (110 + 13) --> 123", "(6 + 8) --> (14 * 4) --> (56 * 2) --> (112 + 11) --> 123", "(6 + 13) --> (19 - 8) --> (11 * 11) --> (121 + 2) --> 123", "(6 + 2) --> (8 / 4) --> (2.0 + 8) --> (10.0 * 11) --> (110.0 + 13) --> 123", "(4 * 13) --> (52 - 11) --> (41 * 6) --> (246 / 2) --> 123", "(4 + 13) --> (17 * 8) --> (136 - 11) --> (125 - 2) --> 123", "(4 * 13) --> (52 * 2) --> (104 + 11) --> (115 + 8) --> 123", "(4 / 2) --> (2.0 + 8) --> (10.0 * 11) --> (110.0 + 13) --> 123", "(8 - 4) --> (4 * 13) --> (52 - 11) --> (41 * 6) --> (246 / 2) --> 123", "(8 / 4) --> (2.0 * 2) --> (4.0 + 6) --> (10.0 * 11) --> (110.0 + 13) --> 123", "(8 + 2) --> (10 * 11) --> (110 + 13) --> 123", "(8 * 2) --> (16 - 6) --> (10 * 11) --> (110 + 13) --> 123", "(8 / 2) --> (4.0 + 6) --> (10.0 * 11) --> (110.0 + 13) --> 123", "(13 - 2) --> (11 * 11) --> (121 + 6) --> (127 - 4) --> 123", "(13 - 2) --> (11 * 11) --> (121 - 6) --> (115 + 8) --> 123"]}, "target": 123, "n_ways": 31, "round": 1}, "r2": {"n": [3, 7, 9, 12, 15, 18], "how": {"166": ["(18 + 3) --> (21 - 9) --> (12 * 12) --> (144 + 7) --> (151 + 15) --> 166", "(18 + 7) --> (25 + 9) --> (34 * 15) --> (510 - 12) --> (498 / 3) --> 166", "(18 * 7) --> (126 * 12) --> (1512 - 3) --> (1509 - 15) --> (1494 / 9) --> 166", "(18 * 9) --> (162 - 3) --> (159 + 7) --> 166", "(18 * 9) --> (162 + 7) --> (169 + 12) --> (181 - 15) --> 166", "(18 + 12) --> (30 / 3) --> (10.0 * 15) --> (150.0 + 7) --> (157.0 + 9) --> 166", "(3 + 9) --> (12 * 12) --> (144 + 7) --> (151 + 15) --> 166", "(3 + 15) --> (18 * 7) --> (126 * 12) --> (1512 - 18) --> (1494 / 9) --> 166", "(12 * 15) --> (180 - 18) --> (162 - 3) --> (159 + 7) --> 166"]}, "target": 166, "n_ways": 9, "round": 2}, "r3": {"n": [3, 5, 7, 10, 12, 16], "how": {"321": ["(7 * 16) --> (112 * 3) --> (336 - 5) --> (331 - 10) --> 321", "(7 * 16) --> (112 - 5) --> (107 * 3) --> 321", "(7 * 16) --> (112 + 5) --> (117 - 10) --> (107 * 3) --> 321", "(7 * 10) --> (70 + 3) --> (73 - 12) --> (61 * 5) --> (305 + 16) --> 321", "(16 * 12) --> (192 * 5) --> (960 - 7) --> (953 + 10) --> (963 / 3) --> 321", "(16 - 5) --> (11 * 10) --> (110 - 7) --> (103 * 3) --> (309 + 12) --> 321", "(16 + 10) --> (26 * 12) --> (312 + 7) --> (319 - 3) --> (316 + 5) --> 321", "(5 * 10) --> (50 - 7) --> (43 - 16) --> (27 * 12) --> (324 - 3) --> 321"]}, "target": 321, "n_ways": 8, "round": 3}, "r4": {"n": [9, 14, 16, 18, 20, 25], "how": {"458": ["(16 * 14) --> (224 + 25) --> (249 - 20) --> (229 * 18) --> (4122 / 9) --> 458", "(25 + 9) --> (34 * 14) --> (476 - 16) --> (460 + 18) --> (478 - 20) --> 458", "(25 + 9) --> (34 * 14) --> (476 - 18) --> 458", "(18 + 14) --> (32 * 16) --> (512 - 25) --> (487 - 20) --> (467 - 9) --> 458", "(14 + 9) --> (23 * 20) --> (460 + 16) --> (476 - 18) --> 458"]}, "target": 458, "n_ways": 5, "round": 4}, "r5": {"n": [4, 6, 9, 17, 21, 24], "how": {"491": ["(24 + 4) --> (28 * 17) --> (476 + 9) --> (485 + 6) --> 491", "(24 + 4) --> (28 * 17) --> (476 + 21) --> (497 - 6) --> 491", "(24 * 21) --> (504 + 4) --> (508 - 17) --> 491", "(24 * 21) --> (504 - 4) --> (500 - 9) --> 491", "(4 * 21) --> (84 - 9) --> (75 * 6) --> (450 + 24) --> (474 + 17) --> 491"]}, "target": 491, "n_ways": 5, "round": 5}}